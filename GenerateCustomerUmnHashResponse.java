/*
 * ucd_pmgmt_v1_api
 * Swagger documentation for UCD Profile Management Service API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.Header;
import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.ResponseStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.JSON;

/**
 * This is the response model for GenerateCustomerUmnHash service. Depending upon the customer(s) is/are found or not, outcome will be sent in the response.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T21:22:09.739306500+05:30[Asia/Calcutta]")
public class GenerateCustomerUmnHashResponse {
  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private Header header;

  public static final String SERIALIZED_NAME_RESPONSE_STATUS = "responseStatus";
  @SerializedName(SERIALIZED_NAME_RESPONSE_STATUS)
  private ResponseStatus responseStatus;

  public static final String SERIALIZED_NAME_CUSTOMER_UMN_HASH = "customerUmnHash";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_UMN_HASH)
  private String customerUmnHash;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public GenerateCustomerUmnHashResponse() {
  }

  public GenerateCustomerUmnHashResponse header(Header header) {
    
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nonnull
  public Header getHeader() {
    return header;
  }


  public void setHeader(Header header) {
    this.header = header;
  }


  public GenerateCustomerUmnHashResponse responseStatus(ResponseStatus responseStatus) {
    
    this.responseStatus = responseStatus;
    return this;
  }

   /**
   * Get responseStatus
   * @return responseStatus
  **/
  @javax.annotation.Nonnull
  public ResponseStatus getResponseStatus() {
    return responseStatus;
  }


  public void setResponseStatus(ResponseStatus responseStatus) {
    this.responseStatus = responseStatus;
  }


  public GenerateCustomerUmnHashResponse customerUmnHash(String customerUmnHash) {
    
    this.customerUmnHash = customerUmnHash;
    return this;
  }

   /**
   * CustomerUmnHash of CustomerUmn passed in the request
   * @return customerUmnHash
  **/
  @javax.annotation.Nullable
  public String getCustomerUmnHash() {
    return customerUmnHash;
  }


  public void setCustomerUmnHash(String customerUmnHash) {
    this.customerUmnHash = customerUmnHash;
  }


  public GenerateCustomerUmnHashResponse description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Summary of the response
   * @return description
  **/
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateCustomerUmnHashResponse generateCustomerUmnHashResponse = (GenerateCustomerUmnHashResponse) o;
    return Objects.equals(this.header, generateCustomerUmnHashResponse.header) &&
        Objects.equals(this.responseStatus, generateCustomerUmnHashResponse.responseStatus) &&
        Objects.equals(this.customerUmnHash, generateCustomerUmnHashResponse.customerUmnHash) &&
        Objects.equals(this.description, generateCustomerUmnHashResponse.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, responseStatus, customerUmnHash, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateCustomerUmnHashResponse {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    responseStatus: ").append(toIndentedString(responseStatus)).append("\n");
    sb.append("    customerUmnHash: ").append(toIndentedString(customerUmnHash)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("header");
    openapiFields.add("responseStatus");
    openapiFields.add("customerUmnHash");
    openapiFields.add("description");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("header");
    openapiRequiredFields.add("responseStatus");
    openapiRequiredFields.add("description");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GenerateCustomerUmnHashResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GenerateCustomerUmnHashResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GenerateCustomerUmnHashResponse is not found in the empty JSON string", GenerateCustomerUmnHashResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GenerateCustomerUmnHashResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GenerateCustomerUmnHashResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GenerateCustomerUmnHashResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `header`
      Header.validateJsonObject(jsonObj.getAsJsonObject("header"));
      // validate the required field `responseStatus`
      ResponseStatus.validateJsonObject(jsonObj.getAsJsonObject("responseStatus"));
      if ((jsonObj.get("customerUmnHash") != null && !jsonObj.get("customerUmnHash").isJsonNull()) && !jsonObj.get("customerUmnHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerUmnHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerUmnHash").toString()));
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GenerateCustomerUmnHashResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GenerateCustomerUmnHashResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GenerateCustomerUmnHashResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GenerateCustomerUmnHashResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GenerateCustomerUmnHashResponse>() {
           @Override
           public void write(JsonWriter out, GenerateCustomerUmnHashResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GenerateCustomerUmnHashResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GenerateCustomerUmnHashResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GenerateCustomerUmnHashResponse
  * @throws IOException if the JSON string is invalid with respect to GenerateCustomerUmnHashResponse
  */
  public static GenerateCustomerUmnHashResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GenerateCustomerUmnHashResponse.class);
  }

 /**
  * Convert an instance of GenerateCustomerUmnHashResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

