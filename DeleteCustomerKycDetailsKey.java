/*
 * ucd_pmgmt_v1_api
 * Swagger documentation for UCD Profile Management Service API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.CustomerKey;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.JSON;

/**
 * Delete Customer KYC Details elements to be used for deletion.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T21:22:09.739306500+05:30[Asia/Calcutta]")
public class DeleteCustomerKycDetailsKey {
  public static final String SERIALIZED_NAME_CUSTOMER_KEY = "customerKey";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_KEY)
  private CustomerKey customerKey;

  public static final String SERIALIZED_NAME_KYC_DETAILS_SEQ = "kycDetailsSeq";
  @SerializedName(SERIALIZED_NAME_KYC_DETAILS_SEQ)
  private Long kycDetailsSeq;

  public static final String SERIALIZED_NAME_CHANNEL_TYPE = "channelType";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TYPE)
  private Integer channelType;

  public static final String SERIALIZED_NAME_ID_TYPE = "idType";
  @SerializedName(SERIALIZED_NAME_ID_TYPE)
  private String idType;

  public static final String SERIALIZED_NAME_COUNTRY_CODE_ISO2 = "countryCodeIso2";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE_ISO2)
  private String countryCodeIso2;

  public static final String SERIALIZED_NAME_COUNTRY_CODE_ISO3 = "countryCodeIso3";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE_ISO3)
  private String countryCodeIso3;

  public DeleteCustomerKycDetailsKey() {
  }

  public DeleteCustomerKycDetailsKey customerKey(CustomerKey customerKey) {
    
    this.customerKey = customerKey;
    return this;
  }

   /**
   * Get customerKey
   * @return customerKey
  **/
  @javax.annotation.Nullable
  public CustomerKey getCustomerKey() {
    return customerKey;
  }


  public void setCustomerKey(CustomerKey customerKey) {
    this.customerKey = customerKey;
  }


  public DeleteCustomerKycDetailsKey kycDetailsSeq(Long kycDetailsSeq) {
    
    this.kycDetailsSeq = kycDetailsSeq;
    return this;
  }

   /**
   * KYC Details Sequence * 1 - Primary ID * 2 - Secondary ID * 3 - Address Verification * 4 - Payment Verification Flag * 5 - Source of Funds Verification 
   * @return kycDetailsSeq
  **/
  @javax.annotation.Nullable
  public Long getKycDetailsSeq() {
    return kycDetailsSeq;
  }


  public void setKycDetailsSeq(Long kycDetailsSeq) {
    this.kycDetailsSeq = kycDetailsSeq;
  }


  public DeleteCustomerKycDetailsKey channelType(Integer channelType) {
    
    this.channelType = channelType;
    return this;
  }

   /**
   * Channel Type * 1 - Digital / Guest Checkout EU * 2 - Retail * 3 - Future Use * 4 - LBP/WUPSIL * 5 - WUPlus * 6 - Corrections Pay / Guest Checkout US / Wallet 
   * @return channelType
  **/
  @javax.annotation.Nullable
  public Integer getChannelType() {
    return channelType;
  }


  public void setChannelType(Integer channelType) {
    this.channelType = channelType;
  }


  public DeleteCustomerKycDetailsKey idType(String idType) {
    
    this.idType = idType;
    return this;
  }

   /**
   * Get idType
   * @return idType
  **/
  @javax.annotation.Nullable
  public String getIdType() {
    return idType;
  }


  public void setIdType(String idType) {
    this.idType = idType;
  }


  public DeleteCustomerKycDetailsKey countryCodeIso2(String countryCodeIso2) {
    
    this.countryCodeIso2 = countryCodeIso2;
    return this;
  }

   /**
   * Country code in ISO2 format. Ex: AT,IN,US
   * @return countryCodeIso2
  **/
  @javax.annotation.Nullable
  public String getCountryCodeIso2() {
    return countryCodeIso2;
  }


  public void setCountryCodeIso2(String countryCodeIso2) {
    this.countryCodeIso2 = countryCodeIso2;
  }


  public DeleteCustomerKycDetailsKey countryCodeIso3(String countryCodeIso3) {
    
    this.countryCodeIso3 = countryCodeIso3;
    return this;
  }

   /**
   * Country code in ISO3 format. Ex: AUT,IND,USA
   * @return countryCodeIso3
  **/
  @javax.annotation.Nullable
  public String getCountryCodeIso3() {
    return countryCodeIso3;
  }


  public void setCountryCodeIso3(String countryCodeIso3) {
    this.countryCodeIso3 = countryCodeIso3;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteCustomerKycDetailsKey deleteCustomerKycDetailsKey = (DeleteCustomerKycDetailsKey) o;
    return Objects.equals(this.customerKey, deleteCustomerKycDetailsKey.customerKey) &&
        Objects.equals(this.kycDetailsSeq, deleteCustomerKycDetailsKey.kycDetailsSeq) &&
        Objects.equals(this.channelType, deleteCustomerKycDetailsKey.channelType) &&
        Objects.equals(this.idType, deleteCustomerKycDetailsKey.idType) &&
        Objects.equals(this.countryCodeIso2, deleteCustomerKycDetailsKey.countryCodeIso2) &&
        Objects.equals(this.countryCodeIso3, deleteCustomerKycDetailsKey.countryCodeIso3);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerKey, kycDetailsSeq, channelType, idType, countryCodeIso2, countryCodeIso3);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteCustomerKycDetailsKey {\n");
    sb.append("    customerKey: ").append(toIndentedString(customerKey)).append("\n");
    sb.append("    kycDetailsSeq: ").append(toIndentedString(kycDetailsSeq)).append("\n");
    sb.append("    channelType: ").append(toIndentedString(channelType)).append("\n");
    sb.append("    idType: ").append(toIndentedString(idType)).append("\n");
    sb.append("    countryCodeIso2: ").append(toIndentedString(countryCodeIso2)).append("\n");
    sb.append("    countryCodeIso3: ").append(toIndentedString(countryCodeIso3)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerKey");
    openapiFields.add("kycDetailsSeq");
    openapiFields.add("channelType");
    openapiFields.add("idType");
    openapiFields.add("countryCodeIso2");
    openapiFields.add("countryCodeIso3");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DeleteCustomerKycDetailsKey
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DeleteCustomerKycDetailsKey.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteCustomerKycDetailsKey is not found in the empty JSON string", DeleteCustomerKycDetailsKey.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DeleteCustomerKycDetailsKey.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteCustomerKycDetailsKey` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `customerKey`
      if (jsonObj.get("customerKey") != null && !jsonObj.get("customerKey").isJsonNull()) {
        CustomerKey.validateJsonObject(jsonObj.getAsJsonObject("customerKey"));
      }
      if ((jsonObj.get("idType") != null && !jsonObj.get("idType").isJsonNull()) && !jsonObj.get("idType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idType").toString()));
      }
      if ((jsonObj.get("countryCodeIso2") != null && !jsonObj.get("countryCodeIso2").isJsonNull()) && !jsonObj.get("countryCodeIso2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCodeIso2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCodeIso2").toString()));
      }
      if ((jsonObj.get("countryCodeIso3") != null && !jsonObj.get("countryCodeIso3").isJsonNull()) && !jsonObj.get("countryCodeIso3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCodeIso3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCodeIso3").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteCustomerKycDetailsKey.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteCustomerKycDetailsKey' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteCustomerKycDetailsKey> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteCustomerKycDetailsKey.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteCustomerKycDetailsKey>() {
           @Override
           public void write(JsonWriter out, DeleteCustomerKycDetailsKey value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteCustomerKycDetailsKey read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DeleteCustomerKycDetailsKey given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DeleteCustomerKycDetailsKey
  * @throws IOException if the JSON string is invalid with respect to DeleteCustomerKycDetailsKey
  */
  public static DeleteCustomerKycDetailsKey fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteCustomerKycDetailsKey.class);
  }

 /**
  * Convert an instance of DeleteCustomerKycDetailsKey to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

