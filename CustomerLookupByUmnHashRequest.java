/*
 * ucd_clkup_v1_api
 * Swagger documentation for UCD Customer Lookup Service API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.customerlookup;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

/**
 * This is the request model for CustomerLookupByUmnHash service. This is to search for a customer by UmnHash.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T20:02:06.369160100+05:30[Asia/Calcutta]")
public class CustomerLookupByUmnHashRequest {
  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private Header header;

  public static final String SERIALIZED_NAME_CUSTOMER_UMN_HASH = "customerUmnHash";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_UMN_HASH)
  private String customerUmnHash;

  public static final String SERIALIZED_NAME_REQUEST_INITIATED_BY = "requestInitiatedBy";
  @SerializedName(SERIALIZED_NAME_REQUEST_INITIATED_BY)
  private String requestInitiatedBy;

  public CustomerLookupByUmnHashRequest() {
  }

  public CustomerLookupByUmnHashRequest header(Header header) {
    
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nonnull
  public Header getHeader() {
    return header;
  }


  public void setHeader(Header header) {
    this.header = header;
  }


  public CustomerLookupByUmnHashRequest customerUmnHash(String customerUmnHash) {
    
    this.customerUmnHash = customerUmnHash;
    return this;
  }

   /**
   * Customer Umn Hash
   * @return customerUmnHash
  **/
  @javax.annotation.Nonnull
  public String getCustomerUmnHash() {
    return customerUmnHash;
  }


  public void setCustomerUmnHash(String customerUmnHash) {
    this.customerUmnHash = customerUmnHash;
  }


  public CustomerLookupByUmnHashRequest requestInitiatedBy(String requestInitiatedBy) {
    
    this.requestInitiatedBy = requestInitiatedBy;
    return this;
  }

   /**
   * To identify who has initiated the request.
   * @return requestInitiatedBy
  **/
  @javax.annotation.Nonnull
  public String getRequestInitiatedBy() {
    return requestInitiatedBy;
  }


  public void setRequestInitiatedBy(String requestInitiatedBy) {
    this.requestInitiatedBy = requestInitiatedBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerLookupByUmnHashRequest customerLookupByUmnHashRequest = (CustomerLookupByUmnHashRequest) o;
    return Objects.equals(this.header, customerLookupByUmnHashRequest.header) &&
        Objects.equals(this.customerUmnHash, customerLookupByUmnHashRequest.customerUmnHash) &&
        Objects.equals(this.requestInitiatedBy, customerLookupByUmnHashRequest.requestInitiatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, customerUmnHash, requestInitiatedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerLookupByUmnHashRequest {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    customerUmnHash: ").append(toIndentedString(customerUmnHash)).append("\n");
    sb.append("    requestInitiatedBy: ").append(toIndentedString(requestInitiatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("header");
    openapiFields.add("customerUmnHash");
    openapiFields.add("requestInitiatedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("header");
    openapiRequiredFields.add("customerUmnHash");
    openapiRequiredFields.add("requestInitiatedBy");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerLookupByUmnHashRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerLookupByUmnHashRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerLookupByUmnHashRequest is not found in the empty JSON string", CustomerLookupByUmnHashRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerLookupByUmnHashRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerLookupByUmnHashRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomerLookupByUmnHashRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `header`
      Header.validateJsonObject(jsonObj.getAsJsonObject("header"));
      if (!jsonObj.get("customerUmnHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerUmnHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerUmnHash").toString()));
      }
      if (!jsonObj.get("requestInitiatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestInitiatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestInitiatedBy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerLookupByUmnHashRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerLookupByUmnHashRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerLookupByUmnHashRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerLookupByUmnHashRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerLookupByUmnHashRequest>() {
           @Override
           public void write(JsonWriter out, CustomerLookupByUmnHashRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerLookupByUmnHashRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerLookupByUmnHashRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerLookupByUmnHashRequest
  * @throws IOException if the JSON string is invalid with respect to CustomerLookupByUmnHashRequest
  */
  public static CustomerLookupByUmnHashRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerLookupByUmnHashRequest.class);
  }

 /**
  * Convert an instance of CustomerLookupByUmnHashRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

