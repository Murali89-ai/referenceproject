/*
 * ucd_pmgmt_v1_api
 * Swagger documentation for UCD Profile Management Service API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.JSON;

/**
 * ProfileComplianceSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T21:22:09.739306500+05:30[Asia/Calcutta]")
public class ProfileComplianceSummary {
  public static final String SERIALIZED_NAME_PROFILE_COMPLIANCE_SEQ = "profileComplianceSeq";
  @SerializedName(SERIALIZED_NAME_PROFILE_COMPLIANCE_SEQ)
  private Long profileComplianceSeq;

  public static final String SERIALIZED_NAME_GALACTIC_ID = "galacticId";
  @SerializedName(SERIALIZED_NAME_GALACTIC_ID)
  private String galacticId;

  public static final String SERIALIZED_NAME_CHANNEL_TYPE = "channelType";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TYPE)
  private Integer channelType;

  public static final String SERIALIZED_NAME_FLAG_NAME = "flagName";
  @SerializedName(SERIALIZED_NAME_FLAG_NAME)
  private String flagName;

  public static final String SERIALIZED_NAME_FLAG_VALUE = "flagValue";
  @SerializedName(SERIALIZED_NAME_FLAG_VALUE)
  private String flagValue;

  public static final String SERIALIZED_NAME_SUB_STATUS = "subStatus";
  @SerializedName(SERIALIZED_NAME_SUB_STATUS)
  private String subStatus;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  private LocalDate expiryDate;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private String attributes;

  public ProfileComplianceSummary() {
  }

  public ProfileComplianceSummary profileComplianceSeq(Long profileComplianceSeq) {
    
    this.profileComplianceSeq = profileComplianceSeq;
    return this;
  }

   /**
   * Profile Compliance Sequence.
   * @return profileComplianceSeq
  **/
  @javax.annotation.Nullable
  public Long getProfileComplianceSeq() {
    return profileComplianceSeq;
  }


  public void setProfileComplianceSeq(Long profileComplianceSeq) {
    this.profileComplianceSeq = profileComplianceSeq;
  }


  public ProfileComplianceSummary galacticId(String galacticId) {
    
    this.galacticId = galacticId;
    return this;
  }

   /**
   * Galactic ID generated by EAS system. It is used by Compliance system to find unique customer.
   * @return galacticId
  **/
  @javax.annotation.Nullable
  public String getGalacticId() {
    return galacticId;
  }


  public void setGalacticId(String galacticId) {
    this.galacticId = galacticId;
  }


  public ProfileComplianceSummary channelType(Integer channelType) {
    
    this.channelType = channelType;
    return this;
  }

   /**
   * Channel Type * 1 - Digital / Guest Checkout EU * 2 - Retail * 3 - Future Use * 4 - LBP/WUPSIL * 5 - WUPlus * 6 - Corrections Pay / Guest Checkout US / Wallet 
   * @return channelType
  **/
  @javax.annotation.Nullable
  public Integer getChannelType() {
    return channelType;
  }


  public void setChannelType(Integer channelType) {
    this.channelType = channelType;
  }


  public ProfileComplianceSummary flagName(String flagName) {
    
    this.flagName = flagName;
    return this;
  }

   /**
   * Profile Screening Type Flag Name. * RISK_SCORE * RISK_LEVEL * PEP * INTERDICTION * SANCTION 
   * @return flagName
  **/
  @javax.annotation.Nullable
  public String getFlagName() {
    return flagName;
  }


  public void setFlagName(String flagName) {
    this.flagName = flagName;
  }


  public ProfileComplianceSummary flagValue(String flagValue) {
    
    this.flagValue = flagValue;
    return this;
  }

   /**
   * Profile Screening Type Flag Value. This field could be nullified by passing \&quot;NUL\&quot;.
   * @return flagValue
  **/
  @javax.annotation.Nullable
  public String getFlagValue() {
    return flagValue;
  }


  public void setFlagValue(String flagValue) {
    this.flagValue = flagValue;
  }


  public ProfileComplianceSummary subStatus(String subStatus) {
    
    this.subStatus = subStatus;
    return this;
  }

   /**
   * Profile Screening Type Sub Status.
   * @return subStatus
  **/
  @javax.annotation.Nullable
  public String getSubStatus() {
    return subStatus;
  }


  public void setSubStatus(String subStatus) {
    this.subStatus = subStatus;
  }


  public ProfileComplianceSummary source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Source Information for Profile Screening Flag.
   * @return source
  **/
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }


  public void setSource(String source) {
    this.source = source;
  }


  public ProfileComplianceSummary expiryDate(LocalDate expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Expiry Date
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  public LocalDate getExpiryDate() {
    return expiryDate;
  }


  public void setExpiryDate(LocalDate expiryDate) {
    this.expiryDate = expiryDate;
  }


  public ProfileComplianceSummary attributes(String attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Attributes â€“ will be a JSON column storing attributes related to Risk Score and Profile Screening.
   * @return attributes
  **/
  @javax.annotation.Nullable
  public String getAttributes() {
    return attributes;
  }


  public void setAttributes(String attributes) {
    this.attributes = attributes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileComplianceSummary profileComplianceSummary = (ProfileComplianceSummary) o;
    return Objects.equals(this.profileComplianceSeq, profileComplianceSummary.profileComplianceSeq) &&
        Objects.equals(this.galacticId, profileComplianceSummary.galacticId) &&
        Objects.equals(this.channelType, profileComplianceSummary.channelType) &&
        Objects.equals(this.flagName, profileComplianceSummary.flagName) &&
        Objects.equals(this.flagValue, profileComplianceSummary.flagValue) &&
        Objects.equals(this.subStatus, profileComplianceSummary.subStatus) &&
        Objects.equals(this.source, profileComplianceSummary.source) &&
        Objects.equals(this.expiryDate, profileComplianceSummary.expiryDate) &&
        Objects.equals(this.attributes, profileComplianceSummary.attributes);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(profileComplianceSeq, galacticId, channelType, flagName, flagValue, subStatus, source, expiryDate, attributes);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileComplianceSummary {\n");
    sb.append("    profileComplianceSeq: ").append(toIndentedString(profileComplianceSeq)).append("\n");
    sb.append("    galacticId: ").append(toIndentedString(galacticId)).append("\n");
    sb.append("    channelType: ").append(toIndentedString(channelType)).append("\n");
    sb.append("    flagName: ").append(toIndentedString(flagName)).append("\n");
    sb.append("    flagValue: ").append(toIndentedString(flagValue)).append("\n");
    sb.append("    subStatus: ").append(toIndentedString(subStatus)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("profileComplianceSeq");
    openapiFields.add("galacticId");
    openapiFields.add("channelType");
    openapiFields.add("flagName");
    openapiFields.add("flagValue");
    openapiFields.add("subStatus");
    openapiFields.add("source");
    openapiFields.add("expiryDate");
    openapiFields.add("attributes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProfileComplianceSummary
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ProfileComplianceSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProfileComplianceSummary is not found in the empty JSON string", ProfileComplianceSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ProfileComplianceSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProfileComplianceSummary` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("galacticId") != null && !jsonObj.get("galacticId").isJsonNull()) && !jsonObj.get("galacticId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `galacticId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("galacticId").toString()));
      }
      if ((jsonObj.get("flagName") != null && !jsonObj.get("flagName").isJsonNull()) && !jsonObj.get("flagName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flagName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flagName").toString()));
      }
      if ((jsonObj.get("flagValue") != null && !jsonObj.get("flagValue").isJsonNull()) && !jsonObj.get("flagValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flagValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flagValue").toString()));
      }
      if ((jsonObj.get("subStatus") != null && !jsonObj.get("subStatus").isJsonNull()) && !jsonObj.get("subStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subStatus").toString()));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      if ((jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) && !jsonObj.get("attributes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProfileComplianceSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProfileComplianceSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProfileComplianceSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProfileComplianceSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<ProfileComplianceSummary>() {
           @Override
           public void write(JsonWriter out, ProfileComplianceSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProfileComplianceSummary read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProfileComplianceSummary given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProfileComplianceSummary
  * @throws IOException if the JSON string is invalid with respect to ProfileComplianceSummary
  */
  public static ProfileComplianceSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProfileComplianceSummary.class);
  }

 /**
  * Convert an instance of ProfileComplianceSummary to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

