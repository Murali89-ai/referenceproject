/*
 * ucd_clkup_v1_api
 * Swagger documentation for UCD Customer Lookup Service API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.customerlookup;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

/**
 * Customer Details Schema
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T20:02:06.369160100+05:30[Asia/Calcutta]")
public class CustomerDetailsSet11 {
  public static final String SERIALIZED_NAME_CUSTOMER_SEQUENCE_NO = "customerSequenceNo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SEQUENCE_NO)
  private Integer customerSequenceNo;

  public static final String SERIALIZED_NAME_CUSTOMER_PERSONAL_INFO = "customerPersonalInfo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PERSONAL_INFO)
  private CustomerAndAudit customerPersonalInfo;

  public CustomerDetailsSet11() {
  }

  public CustomerDetailsSet11 customerSequenceNo(Integer customerSequenceNo) {
    
    this.customerSequenceNo = customerSequenceNo;
    return this;
  }

   /**
   * Sequence number of the customer
   * @return customerSequenceNo
  **/
  @javax.annotation.Nullable
  public Integer getCustomerSequenceNo() {
    return customerSequenceNo;
  }


  public void setCustomerSequenceNo(Integer customerSequenceNo) {
    this.customerSequenceNo = customerSequenceNo;
  }


  public CustomerDetailsSet11 customerPersonalInfo(CustomerAndAudit customerPersonalInfo) {
    
    this.customerPersonalInfo = customerPersonalInfo;
    return this;
  }

   /**
   * Get customerPersonalInfo
   * @return customerPersonalInfo
  **/
  @javax.annotation.Nullable
  public CustomerAndAudit getCustomerPersonalInfo() {
    return customerPersonalInfo;
  }


  public void setCustomerPersonalInfo(CustomerAndAudit customerPersonalInfo) {
    this.customerPersonalInfo = customerPersonalInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDetailsSet11 customerDetailsSet11 = (CustomerDetailsSet11) o;
    return Objects.equals(this.customerSequenceNo, customerDetailsSet11.customerSequenceNo) &&
        Objects.equals(this.customerPersonalInfo, customerDetailsSet11.customerPersonalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerSequenceNo, customerPersonalInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDetailsSet11 {\n");
    sb.append("    customerSequenceNo: ").append(toIndentedString(customerSequenceNo)).append("\n");
    sb.append("    customerPersonalInfo: ").append(toIndentedString(customerPersonalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerSequenceNo");
    openapiFields.add("customerPersonalInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerDetailsSet11
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerDetailsSet11.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerDetailsSet11 is not found in the empty JSON string", CustomerDetailsSet11.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerDetailsSet11.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerDetailsSet11` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `customerPersonalInfo`
      if (jsonObj.get("customerPersonalInfo") != null && !jsonObj.get("customerPersonalInfo").isJsonNull()) {
        CustomerAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerPersonalInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerDetailsSet11.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerDetailsSet11' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerDetailsSet11> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerDetailsSet11.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerDetailsSet11>() {
           @Override
           public void write(JsonWriter out, CustomerDetailsSet11 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerDetailsSet11 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerDetailsSet11 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerDetailsSet11
  * @throws IOException if the JSON string is invalid with respect to CustomerDetailsSet11
  */
  public static CustomerDetailsSet11 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerDetailsSet11.class);
  }

 /**
  * Convert an instance of CustomerDetailsSet11 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

