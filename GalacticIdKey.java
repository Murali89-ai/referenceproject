/*
 * ucd_pmgmt_v1_api
 * Swagger documentation for UCD Profile Management Service API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.Name2;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.JSON;

/**
 * Any one of the below element should be present. If multiple elements are passed without lookupType, the first element will be considered.   - Galactic Id   - Customer Umn   - Bank Profile Id   - Name + IdNumber   - Dob + IdNumber
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T21:22:09.739306500+05:30[Asia/Calcutta]")
public class GalacticIdKey {
  public static final String SERIALIZED_NAME_GALACTIC_ID = "galacticId";
  @SerializedName(SERIALIZED_NAME_GALACTIC_ID)
  private String galacticId;

  public static final String SERIALIZED_NAME_CUSTOMER_UMN = "customerUmn";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_UMN)
  private String customerUmn;

  public static final String SERIALIZED_NAME_BANK_PROFILE_ID = "bankProfileId";
  @SerializedName(SERIALIZED_NAME_BANK_PROFILE_ID)
  private String bankProfileId;

  public static final String SERIALIZED_NAME_DOB = "dob";
  @SerializedName(SERIALIZED_NAME_DOB)
  private LocalDate dob;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Name2 name;

  public static final String SERIALIZED_NAME_ID_NUMBER = "idNumber";
  @SerializedName(SERIALIZED_NAME_ID_NUMBER)
  private String idNumber;

  public GalacticIdKey() {
  }

  public GalacticIdKey galacticId(String galacticId) {
    
    this.galacticId = galacticId;
    return this;
  }

   /**
   * Galactic Id of a Customer
   * @return galacticId
  **/
  @javax.annotation.Nullable
  public String getGalacticId() {
    return galacticId;
  }


  public void setGalacticId(String galacticId) {
    this.galacticId = galacticId;
  }


  public GalacticIdKey customerUmn(String customerUmn) {
    
    this.customerUmn = customerUmn;
    return this;
  }

   /**
   * Customer UMN of a Customer
   * @return customerUmn
  **/
  @javax.annotation.Nullable
  public String getCustomerUmn() {
    return customerUmn;
  }


  public void setCustomerUmn(String customerUmn) {
    this.customerUmn = customerUmn;
  }


  public GalacticIdKey bankProfileId(String bankProfileId) {
    
    this.bankProfileId = bankProfileId;
    return this;
  }

   /**
   * Bank Profile Id.
   * @return bankProfileId
  **/
  @javax.annotation.Nullable
  public String getBankProfileId() {
    return bankProfileId;
  }


  public void setBankProfileId(String bankProfileId) {
    this.bankProfileId = bankProfileId;
  }


  public GalacticIdKey dob(LocalDate dob) {
    
    this.dob = dob;
    return this;
  }

   /**
   * Customer&#39;s Date of Birth.
   * @return dob
  **/
  @javax.annotation.Nullable
  public LocalDate getDob() {
    return dob;
  }


  public void setDob(LocalDate dob) {
    this.dob = dob;
  }


  public GalacticIdKey name(Name2 name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public Name2 getName() {
    return name;
  }


  public void setName(Name2 name) {
    this.name = name;
  }


  public GalacticIdKey idNumber(String idNumber) {
    
    this.idNumber = idNumber;
    return this;
  }

   /**
   * Id Number
   * @return idNumber
  **/
  @javax.annotation.Nullable
  public String getIdNumber() {
    return idNumber;
  }


  public void setIdNumber(String idNumber) {
    this.idNumber = idNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GalacticIdKey galacticIdKey = (GalacticIdKey) o;
    return Objects.equals(this.galacticId, galacticIdKey.galacticId) &&
        Objects.equals(this.customerUmn, galacticIdKey.customerUmn) &&
        Objects.equals(this.bankProfileId, galacticIdKey.bankProfileId) &&
        Objects.equals(this.dob, galacticIdKey.dob) &&
        Objects.equals(this.name, galacticIdKey.name) &&
        Objects.equals(this.idNumber, galacticIdKey.idNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(galacticId, customerUmn, bankProfileId, dob, name, idNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GalacticIdKey {\n");
    sb.append("    galacticId: ").append(toIndentedString(galacticId)).append("\n");
    sb.append("    customerUmn: ").append(toIndentedString(customerUmn)).append("\n");
    sb.append("    bankProfileId: ").append(toIndentedString(bankProfileId)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    idNumber: ").append(toIndentedString(idNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("galacticId");
    openapiFields.add("customerUmn");
    openapiFields.add("bankProfileId");
    openapiFields.add("dob");
    openapiFields.add("name");
    openapiFields.add("idNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GalacticIdKey
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GalacticIdKey.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GalacticIdKey is not found in the empty JSON string", GalacticIdKey.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GalacticIdKey.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GalacticIdKey` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("galacticId") != null && !jsonObj.get("galacticId").isJsonNull()) && !jsonObj.get("galacticId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `galacticId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("galacticId").toString()));
      }
      if ((jsonObj.get("customerUmn") != null && !jsonObj.get("customerUmn").isJsonNull()) && !jsonObj.get("customerUmn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerUmn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerUmn").toString()));
      }
      if ((jsonObj.get("bankProfileId") != null && !jsonObj.get("bankProfileId").isJsonNull()) && !jsonObj.get("bankProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bankProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bankProfileId").toString()));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        Name2.validateJsonObject(jsonObj.getAsJsonObject("name"));
      }
      if ((jsonObj.get("idNumber") != null && !jsonObj.get("idNumber").isJsonNull()) && !jsonObj.get("idNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GalacticIdKey.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GalacticIdKey' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GalacticIdKey> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GalacticIdKey.class));

       return (TypeAdapter<T>) new TypeAdapter<GalacticIdKey>() {
           @Override
           public void write(JsonWriter out, GalacticIdKey value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GalacticIdKey read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GalacticIdKey given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GalacticIdKey
  * @throws IOException if the JSON string is invalid with respect to GalacticIdKey
  */
  public static GalacticIdKey fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GalacticIdKey.class);
  }

 /**
  * Convert an instance of GalacticIdKey to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

