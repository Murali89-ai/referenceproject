/*
 * ucd_clkup_v1_api
 * Swagger documentation for UCD Customer Lookup Service API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.customerlookup;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

/**
 * Customer Details Schema
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T20:02:06.369160100+05:30[Asia/Calcutta]")
public class CustomerDetailsSet7 {
  public static final String SERIALIZED_NAME_CUSTOMER_SEQUENCE_NO = "customerSequenceNo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SEQUENCE_NO)
  private Integer customerSequenceNo;

  /**
   * This field indicates that if the record matched based on the input criteria or not. * Y - Matched based on input criteria. For search criteria other than GID, at least one record in the result set will have this field as Y.  * N - Retrieved based on matched UMN&#39;s galactic id. 
   */
  @JsonAdapter(IsMatchedEnum.Adapter.class)
  public enum IsMatchedEnum {
    Y("Y"),
    
    N("N");

    private String value;

    IsMatchedEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IsMatchedEnum fromValue(String value) {
      for (IsMatchedEnum b : IsMatchedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IsMatchedEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IsMatchedEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IsMatchedEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IsMatchedEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_IS_MATCHED = "isMatched";
  @SerializedName(SERIALIZED_NAME_IS_MATCHED)
  private IsMatchedEnum isMatched;

  /**
   * This field indicates that if the record matched based on the input criteria is present in archived or primary repository. * Y - Present in Archive. * N - Present in Primary. 
   */
  @JsonAdapter(IsArchivedEnum.Adapter.class)
  public enum IsArchivedEnum {
    Y("Y"),
    
    N("N");

    private String value;

    IsArchivedEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IsArchivedEnum fromValue(String value) {
      for (IsArchivedEnum b : IsArchivedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IsArchivedEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IsArchivedEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IsArchivedEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IsArchivedEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_IS_ARCHIVED = "isArchived";
  @SerializedName(SERIALIZED_NAME_IS_ARCHIVED)
  private IsArchivedEnum isArchived;

  public static final String SERIALIZED_NAME_CUSTOMER_PERSONAL_INFO = "customerPersonalInfo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PERSONAL_INFO)
  private CustomerAndAudit customerPersonalInfo;

  public static final String SERIALIZED_NAME_CUSTOMER_ACCOUNT_INFO = "customerAccountInfo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ACCOUNT_INFO)
  private List<AccountAndAudit> customerAccountInfo;

  public static final String SERIALIZED_NAME_CUSTOMER_ACCOUNT_ONBOARDING_INFO = "customerAccountOnboardingInfo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ACCOUNT_ONBOARDING_INFO)
  private List<AccountOnboardingAndAudit> customerAccountOnboardingInfo;

  public static final String SERIALIZED_NAME_CUSTOMER_ADDRESS = "customerAddress";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ADDRESS)
  private List<AddressAndAudit> customerAddress;

  public static final String SERIALIZED_NAME_CUSTOMER_EMAIL = "customerEmail";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EMAIL)
  private List<EmailAndAudit> customerEmail;

  public static final String SERIALIZED_NAME_CUSTOMER_PHONE = "customerPhone";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PHONE)
  private List<PhoneAndAudit> customerPhone;

  public static final String SERIALIZED_NAME_CUSTOMER_PREFERENCES = "customerPreferences";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PREFERENCES)
  private PreferencesAndAudit customerPreferences;

  public static final String SERIALIZED_NAME_CUSTOMER_FUNDING_SOURCES = "customerFundingSources";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FUNDING_SOURCES)
  private List<FundingSourceAndAudit> customerFundingSources;

  public static final String SERIALIZED_NAME_CUSTOMER_KYC = "customerKyc";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_KYC)
  private List<KycAndAudit> customerKyc;

  public static final String SERIALIZED_NAME_CUSTOMER_KYC_DETAILS = "customerKycDetails";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_KYC_DETAILS)
  private List<CustomerKycDetailAndAudit> customerKycDetails;

  public static final String SERIALIZED_NAME_CUSTOMER_KYC_DETAILS_HISTORY = "customerKycDetailsHistory";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_KYC_DETAILS_HISTORY)
  private List<CustomerKycDetailAndAudit> customerKycDetailsHistory;

  public static final String SERIALIZED_NAME_CUSTOMER_VERIFICATION_DETAILS = "customerVerificationDetails";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_VERIFICATION_DETAILS)
  private List<CustomerVerificationDetailAndAudit> customerVerificationDetails;

  public static final String SERIALIZED_NAME_CUSTOMER_VERIFICATION_DETAILS_HISTORY = "customerVerificationDetailsHistory";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_VERIFICATION_DETAILS_HISTORY)
  private List<CustomerVerificationDetailAndAudit> customerVerificationDetailsHistory;

  public static final String SERIALIZED_NAME_CUSTOMER_RECEIVERS = "customerReceivers";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_RECEIVERS)
  private List<CustomerReceiverAndAudit> customerReceivers;

  public static final String SERIALIZED_NAME_CUSTOMER_UAB = "customerUab";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_UAB)
  private List<UabAndAudit> customerUab;

  public static final String SERIALIZED_NAME_CUSTOMER_USAGE_STATISTICS = "customerUsageStatistics";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_USAGE_STATISTICS)
  private CustomerUsageStatisticsAndAudit customerUsageStatistics;

  public static final String SERIALIZED_NAME_CUSTOMER_ROLE = "customerRole";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ROLE)
  private CustomerRoleAndAudit customerRole;

  public static final String SERIALIZED_NAME_CUSTOMER_MISC_FLAGS = "customerMiscFlags";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_MISC_FLAGS)
  private List<CustomerMiscFlagsAndAudit> customerMiscFlags;

  public CustomerDetailsSet7() {
  }

  public CustomerDetailsSet7 customerSequenceNo(Integer customerSequenceNo) {
    
    this.customerSequenceNo = customerSequenceNo;
    return this;
  }

   /**
   * Get customerSequenceNo
   * @return customerSequenceNo
  **/
  @javax.annotation.Nullable
  public Integer getCustomerSequenceNo() {
    return customerSequenceNo;
  }


  public void setCustomerSequenceNo(Integer customerSequenceNo) {
    this.customerSequenceNo = customerSequenceNo;
  }


  public CustomerDetailsSet7 isMatched(IsMatchedEnum isMatched) {
    
    this.isMatched = isMatched;
    return this;
  }

   /**
   * This field indicates that if the record matched based on the input criteria or not. * Y - Matched based on input criteria. For search criteria other than GID, at least one record in the result set will have this field as Y.  * N - Retrieved based on matched UMN&#39;s galactic id. 
   * @return isMatched
  **/
  @javax.annotation.Nullable
  public IsMatchedEnum getIsMatched() {
    return isMatched;
  }


  public void setIsMatched(IsMatchedEnum isMatched) {
    this.isMatched = isMatched;
  }


  public CustomerDetailsSet7 isArchived(IsArchivedEnum isArchived) {
    
    this.isArchived = isArchived;
    return this;
  }

   /**
   * This field indicates that if the record matched based on the input criteria is present in archived or primary repository. * Y - Present in Archive. * N - Present in Primary. 
   * @return isArchived
  **/
  @javax.annotation.Nullable
  public IsArchivedEnum getIsArchived() {
    return isArchived;
  }


  public void setIsArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
  }


  public CustomerDetailsSet7 customerPersonalInfo(CustomerAndAudit customerPersonalInfo) {
    
    this.customerPersonalInfo = customerPersonalInfo;
    return this;
  }

   /**
   * Get customerPersonalInfo
   * @return customerPersonalInfo
  **/
  @javax.annotation.Nullable
  public CustomerAndAudit getCustomerPersonalInfo() {
    return customerPersonalInfo;
  }


  public void setCustomerPersonalInfo(CustomerAndAudit customerPersonalInfo) {
    this.customerPersonalInfo = customerPersonalInfo;
  }


  public CustomerDetailsSet7 customerAccountInfo(List<AccountAndAudit> customerAccountInfo) {
    
    this.customerAccountInfo = customerAccountInfo;
    return this;
  }

  public CustomerDetailsSet7 addCustomerAccountInfoItem(AccountAndAudit customerAccountInfoItem) {
    if (this.customerAccountInfo == null) {
      this.customerAccountInfo = new ArrayList<>();
    }
    this.customerAccountInfo.add(customerAccountInfoItem);
    return this;
  }

   /**
   * Get customerAccountInfo
   * @return customerAccountInfo
  **/
  @javax.annotation.Nullable
  public List<AccountAndAudit> getCustomerAccountInfo() {
    return customerAccountInfo;
  }


  public void setCustomerAccountInfo(List<AccountAndAudit> customerAccountInfo) {
    this.customerAccountInfo = customerAccountInfo;
  }


  public CustomerDetailsSet7 customerAccountOnboardingInfo(List<AccountOnboardingAndAudit> customerAccountOnboardingInfo) {
    
    this.customerAccountOnboardingInfo = customerAccountOnboardingInfo;
    return this;
  }

  public CustomerDetailsSet7 addCustomerAccountOnboardingInfoItem(AccountOnboardingAndAudit customerAccountOnboardingInfoItem) {
    if (this.customerAccountOnboardingInfo == null) {
      this.customerAccountOnboardingInfo = new ArrayList<>();
    }
    this.customerAccountOnboardingInfo.add(customerAccountOnboardingInfoItem);
    return this;
  }

   /**
   * Get customerAccountOnboardingInfo
   * @return customerAccountOnboardingInfo
  **/
  @javax.annotation.Nullable
  public List<AccountOnboardingAndAudit> getCustomerAccountOnboardingInfo() {
    return customerAccountOnboardingInfo;
  }


  public void setCustomerAccountOnboardingInfo(List<AccountOnboardingAndAudit> customerAccountOnboardingInfo) {
    this.customerAccountOnboardingInfo = customerAccountOnboardingInfo;
  }


  public CustomerDetailsSet7 customerAddress(List<AddressAndAudit> customerAddress) {
    
    this.customerAddress = customerAddress;
    return this;
  }

  public CustomerDetailsSet7 addCustomerAddressItem(AddressAndAudit customerAddressItem) {
    if (this.customerAddress == null) {
      this.customerAddress = new ArrayList<>();
    }
    this.customerAddress.add(customerAddressItem);
    return this;
  }

   /**
   * Get customerAddress
   * @return customerAddress
  **/
  @javax.annotation.Nullable
  public List<AddressAndAudit> getCustomerAddress() {
    return customerAddress;
  }


  public void setCustomerAddress(List<AddressAndAudit> customerAddress) {
    this.customerAddress = customerAddress;
  }


  public CustomerDetailsSet7 customerEmail(List<EmailAndAudit> customerEmail) {
    
    this.customerEmail = customerEmail;
    return this;
  }

  public CustomerDetailsSet7 addCustomerEmailItem(EmailAndAudit customerEmailItem) {
    if (this.customerEmail == null) {
      this.customerEmail = new ArrayList<>();
    }
    this.customerEmail.add(customerEmailItem);
    return this;
  }

   /**
   * Get customerEmail
   * @return customerEmail
  **/
  @javax.annotation.Nullable
  public List<EmailAndAudit> getCustomerEmail() {
    return customerEmail;
  }


  public void setCustomerEmail(List<EmailAndAudit> customerEmail) {
    this.customerEmail = customerEmail;
  }


  public CustomerDetailsSet7 customerPhone(List<PhoneAndAudit> customerPhone) {
    
    this.customerPhone = customerPhone;
    return this;
  }

  public CustomerDetailsSet7 addCustomerPhoneItem(PhoneAndAudit customerPhoneItem) {
    if (this.customerPhone == null) {
      this.customerPhone = new ArrayList<>();
    }
    this.customerPhone.add(customerPhoneItem);
    return this;
  }

   /**
   * Get customerPhone
   * @return customerPhone
  **/
  @javax.annotation.Nullable
  public List<PhoneAndAudit> getCustomerPhone() {
    return customerPhone;
  }


  public void setCustomerPhone(List<PhoneAndAudit> customerPhone) {
    this.customerPhone = customerPhone;
  }


  public CustomerDetailsSet7 customerPreferences(PreferencesAndAudit customerPreferences) {
    
    this.customerPreferences = customerPreferences;
    return this;
  }

   /**
   * Get customerPreferences
   * @return customerPreferences
  **/
  @javax.annotation.Nullable
  public PreferencesAndAudit getCustomerPreferences() {
    return customerPreferences;
  }


  public void setCustomerPreferences(PreferencesAndAudit customerPreferences) {
    this.customerPreferences = customerPreferences;
  }


  public CustomerDetailsSet7 customerFundingSources(List<FundingSourceAndAudit> customerFundingSources) {
    
    this.customerFundingSources = customerFundingSources;
    return this;
  }

  public CustomerDetailsSet7 addCustomerFundingSourcesItem(FundingSourceAndAudit customerFundingSourcesItem) {
    if (this.customerFundingSources == null) {
      this.customerFundingSources = new ArrayList<>();
    }
    this.customerFundingSources.add(customerFundingSourcesItem);
    return this;
  }

   /**
   * Get customerFundingSources
   * @return customerFundingSources
  **/
  @javax.annotation.Nullable
  public List<FundingSourceAndAudit> getCustomerFundingSources() {
    return customerFundingSources;
  }


  public void setCustomerFundingSources(List<FundingSourceAndAudit> customerFundingSources) {
    this.customerFundingSources = customerFundingSources;
  }


  public CustomerDetailsSet7 customerKyc(List<KycAndAudit> customerKyc) {
    
    this.customerKyc = customerKyc;
    return this;
  }

  public CustomerDetailsSet7 addCustomerKycItem(KycAndAudit customerKycItem) {
    if (this.customerKyc == null) {
      this.customerKyc = new ArrayList<>();
    }
    this.customerKyc.add(customerKycItem);
    return this;
  }

   /**
   * Get customerKyc
   * @return customerKyc
  **/
  @javax.annotation.Nullable
  public List<KycAndAudit> getCustomerKyc() {
    return customerKyc;
  }


  public void setCustomerKyc(List<KycAndAudit> customerKyc) {
    this.customerKyc = customerKyc;
  }


  public CustomerDetailsSet7 customerKycDetails(List<CustomerKycDetailAndAudit> customerKycDetails) {
    
    this.customerKycDetails = customerKycDetails;
    return this;
  }

  public CustomerDetailsSet7 addCustomerKycDetailsItem(CustomerKycDetailAndAudit customerKycDetailsItem) {
    if (this.customerKycDetails == null) {
      this.customerKycDetails = new ArrayList<>();
    }
    this.customerKycDetails.add(customerKycDetailsItem);
    return this;
  }

   /**
   * Get customerKycDetails
   * @return customerKycDetails
  **/
  @javax.annotation.Nullable
  public List<CustomerKycDetailAndAudit> getCustomerKycDetails() {
    return customerKycDetails;
  }


  public void setCustomerKycDetails(List<CustomerKycDetailAndAudit> customerKycDetails) {
    this.customerKycDetails = customerKycDetails;
  }


  public CustomerDetailsSet7 customerKycDetailsHistory(List<CustomerKycDetailAndAudit> customerKycDetailsHistory) {
    
    this.customerKycDetailsHistory = customerKycDetailsHistory;
    return this;
  }

  public CustomerDetailsSet7 addCustomerKycDetailsHistoryItem(CustomerKycDetailAndAudit customerKycDetailsHistoryItem) {
    if (this.customerKycDetailsHistory == null) {
      this.customerKycDetailsHistory = new ArrayList<>();
    }
    this.customerKycDetailsHistory.add(customerKycDetailsHistoryItem);
    return this;
  }

   /**
   * Get customerKycDetailsHistory
   * @return customerKycDetailsHistory
  **/
  @javax.annotation.Nullable
  public List<CustomerKycDetailAndAudit> getCustomerKycDetailsHistory() {
    return customerKycDetailsHistory;
  }


  public void setCustomerKycDetailsHistory(List<CustomerKycDetailAndAudit> customerKycDetailsHistory) {
    this.customerKycDetailsHistory = customerKycDetailsHistory;
  }


  public CustomerDetailsSet7 customerVerificationDetails(List<CustomerVerificationDetailAndAudit> customerVerificationDetails) {
    
    this.customerVerificationDetails = customerVerificationDetails;
    return this;
  }

  public CustomerDetailsSet7 addCustomerVerificationDetailsItem(CustomerVerificationDetailAndAudit customerVerificationDetailsItem) {
    if (this.customerVerificationDetails == null) {
      this.customerVerificationDetails = new ArrayList<>();
    }
    this.customerVerificationDetails.add(customerVerificationDetailsItem);
    return this;
  }

   /**
   * Get customerVerificationDetails
   * @return customerVerificationDetails
  **/
  @javax.annotation.Nullable
  public List<CustomerVerificationDetailAndAudit> getCustomerVerificationDetails() {
    return customerVerificationDetails;
  }


  public void setCustomerVerificationDetails(List<CustomerVerificationDetailAndAudit> customerVerificationDetails) {
    this.customerVerificationDetails = customerVerificationDetails;
  }


  public CustomerDetailsSet7 customerVerificationDetailsHistory(List<CustomerVerificationDetailAndAudit> customerVerificationDetailsHistory) {
    
    this.customerVerificationDetailsHistory = customerVerificationDetailsHistory;
    return this;
  }

  public CustomerDetailsSet7 addCustomerVerificationDetailsHistoryItem(CustomerVerificationDetailAndAudit customerVerificationDetailsHistoryItem) {
    if (this.customerVerificationDetailsHistory == null) {
      this.customerVerificationDetailsHistory = new ArrayList<>();
    }
    this.customerVerificationDetailsHistory.add(customerVerificationDetailsHistoryItem);
    return this;
  }

   /**
   * Get customerVerificationDetailsHistory
   * @return customerVerificationDetailsHistory
  **/
  @javax.annotation.Nullable
  public List<CustomerVerificationDetailAndAudit> getCustomerVerificationDetailsHistory() {
    return customerVerificationDetailsHistory;
  }


  public void setCustomerVerificationDetailsHistory(List<CustomerVerificationDetailAndAudit> customerVerificationDetailsHistory) {
    this.customerVerificationDetailsHistory = customerVerificationDetailsHistory;
  }


  public CustomerDetailsSet7 customerReceivers(List<CustomerReceiverAndAudit> customerReceivers) {
    
    this.customerReceivers = customerReceivers;
    return this;
  }

  public CustomerDetailsSet7 addCustomerReceiversItem(CustomerReceiverAndAudit customerReceiversItem) {
    if (this.customerReceivers == null) {
      this.customerReceivers = new ArrayList<>();
    }
    this.customerReceivers.add(customerReceiversItem);
    return this;
  }

   /**
   * **The below table defines the sorting of receivers based on priority of receiverTypeId. If there are multiple receivers in same priority UCD will show latest updated receiver on top.** | Priority | Receiver Type | Description                              | | ---------|---------------|------------------------------------------| | 1        | X             | Buy Phone Time Receiver                  | | 2        | P             | Prepaid Receiver                         | | 3        | B             | D2B (Direct to Bank) Receiver            | | 4        | C             | D2C (Direct to Card) Receiver            | | 4        | V             | D2C (Direct to Card) Visa Receiver       | | 4        | Y             | D2C (Direct to Card) MasterCard Receiver | | 5        | D             | Domestic Receiver                        | | 5        | G             | Mexican Receiver                         | | 5        | I             | International Receiver                   | | 5        | L             | Local Receiver                           | | 5        | M             | Mexican Receiver                         | | 5        | Q             | Quick Receiver                           | | 5        | S             | Swiftpay Collect Receiver                | | 5        | U             | UPI Receiver                             | | 5        | W             | Wallet Receiver                          | 
   * @return customerReceivers
  **/
  @javax.annotation.Nullable
  public List<CustomerReceiverAndAudit> getCustomerReceivers() {
    return customerReceivers;
  }


  public void setCustomerReceivers(List<CustomerReceiverAndAudit> customerReceivers) {
    this.customerReceivers = customerReceivers;
  }


  public CustomerDetailsSet7 customerUab(List<UabAndAudit> customerUab) {
    
    this.customerUab = customerUab;
    return this;
  }

  public CustomerDetailsSet7 addCustomerUabItem(UabAndAudit customerUabItem) {
    if (this.customerUab == null) {
      this.customerUab = new ArrayList<>();
    }
    this.customerUab.add(customerUabItem);
    return this;
  }

   /**
   * Get customerUab
   * @return customerUab
  **/
  @javax.annotation.Nullable
  public List<UabAndAudit> getCustomerUab() {
    return customerUab;
  }


  public void setCustomerUab(List<UabAndAudit> customerUab) {
    this.customerUab = customerUab;
  }


  public CustomerDetailsSet7 customerUsageStatistics(CustomerUsageStatisticsAndAudit customerUsageStatistics) {
    
    this.customerUsageStatistics = customerUsageStatistics;
    return this;
  }

   /**
   * Get customerUsageStatistics
   * @return customerUsageStatistics
  **/
  @javax.annotation.Nullable
  public CustomerUsageStatisticsAndAudit getCustomerUsageStatistics() {
    return customerUsageStatistics;
  }


  public void setCustomerUsageStatistics(CustomerUsageStatisticsAndAudit customerUsageStatistics) {
    this.customerUsageStatistics = customerUsageStatistics;
  }


  public CustomerDetailsSet7 customerRole(CustomerRoleAndAudit customerRole) {
    
    this.customerRole = customerRole;
    return this;
  }

   /**
   * Get customerRole
   * @return customerRole
  **/
  @javax.annotation.Nullable
  public CustomerRoleAndAudit getCustomerRole() {
    return customerRole;
  }


  public void setCustomerRole(CustomerRoleAndAudit customerRole) {
    this.customerRole = customerRole;
  }


  public CustomerDetailsSet7 customerMiscFlags(List<CustomerMiscFlagsAndAudit> customerMiscFlags) {
    
    this.customerMiscFlags = customerMiscFlags;
    return this;
  }

  public CustomerDetailsSet7 addCustomerMiscFlagsItem(CustomerMiscFlagsAndAudit customerMiscFlagsItem) {
    if (this.customerMiscFlags == null) {
      this.customerMiscFlags = new ArrayList<>();
    }
    this.customerMiscFlags.add(customerMiscFlagsItem);
    return this;
  }

   /**
   * Get customerMiscFlags
   * @return customerMiscFlags
  **/
  @javax.annotation.Nullable
  public List<CustomerMiscFlagsAndAudit> getCustomerMiscFlags() {
    return customerMiscFlags;
  }


  public void setCustomerMiscFlags(List<CustomerMiscFlagsAndAudit> customerMiscFlags) {
    this.customerMiscFlags = customerMiscFlags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDetailsSet7 customerDetailsSet7 = (CustomerDetailsSet7) o;
    return Objects.equals(this.customerSequenceNo, customerDetailsSet7.customerSequenceNo) &&
        Objects.equals(this.isMatched, customerDetailsSet7.isMatched) &&
        Objects.equals(this.isArchived, customerDetailsSet7.isArchived) &&
        Objects.equals(this.customerPersonalInfo, customerDetailsSet7.customerPersonalInfo) &&
        Objects.equals(this.customerAccountInfo, customerDetailsSet7.customerAccountInfo) &&
        Objects.equals(this.customerAccountOnboardingInfo, customerDetailsSet7.customerAccountOnboardingInfo) &&
        Objects.equals(this.customerAddress, customerDetailsSet7.customerAddress) &&
        Objects.equals(this.customerEmail, customerDetailsSet7.customerEmail) &&
        Objects.equals(this.customerPhone, customerDetailsSet7.customerPhone) &&
        Objects.equals(this.customerPreferences, customerDetailsSet7.customerPreferences) &&
        Objects.equals(this.customerFundingSources, customerDetailsSet7.customerFundingSources) &&
        Objects.equals(this.customerKyc, customerDetailsSet7.customerKyc) &&
        Objects.equals(this.customerKycDetails, customerDetailsSet7.customerKycDetails) &&
        Objects.equals(this.customerKycDetailsHistory, customerDetailsSet7.customerKycDetailsHistory) &&
        Objects.equals(this.customerVerificationDetails, customerDetailsSet7.customerVerificationDetails) &&
        Objects.equals(this.customerVerificationDetailsHistory, customerDetailsSet7.customerVerificationDetailsHistory) &&
        Objects.equals(this.customerReceivers, customerDetailsSet7.customerReceivers) &&
        Objects.equals(this.customerUab, customerDetailsSet7.customerUab) &&
        Objects.equals(this.customerUsageStatistics, customerDetailsSet7.customerUsageStatistics) &&
        Objects.equals(this.customerRole, customerDetailsSet7.customerRole) &&
        Objects.equals(this.customerMiscFlags, customerDetailsSet7.customerMiscFlags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerSequenceNo, isMatched, isArchived, customerPersonalInfo, customerAccountInfo, customerAccountOnboardingInfo, customerAddress, customerEmail, customerPhone, customerPreferences, customerFundingSources, customerKyc, customerKycDetails, customerKycDetailsHistory, customerVerificationDetails, customerVerificationDetailsHistory, customerReceivers, customerUab, customerUsageStatistics, customerRole, customerMiscFlags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDetailsSet7 {\n");
    sb.append("    customerSequenceNo: ").append(toIndentedString(customerSequenceNo)).append("\n");
    sb.append("    isMatched: ").append(toIndentedString(isMatched)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    customerPersonalInfo: ").append(toIndentedString(customerPersonalInfo)).append("\n");
    sb.append("    customerAccountInfo: ").append(toIndentedString(customerAccountInfo)).append("\n");
    sb.append("    customerAccountOnboardingInfo: ").append(toIndentedString(customerAccountOnboardingInfo)).append("\n");
    sb.append("    customerAddress: ").append(toIndentedString(customerAddress)).append("\n");
    sb.append("    customerEmail: ").append(toIndentedString(customerEmail)).append("\n");
    sb.append("    customerPhone: ").append(toIndentedString(customerPhone)).append("\n");
    sb.append("    customerPreferences: ").append(toIndentedString(customerPreferences)).append("\n");
    sb.append("    customerFundingSources: ").append(toIndentedString(customerFundingSources)).append("\n");
    sb.append("    customerKyc: ").append(toIndentedString(customerKyc)).append("\n");
    sb.append("    customerKycDetails: ").append(toIndentedString(customerKycDetails)).append("\n");
    sb.append("    customerKycDetailsHistory: ").append(toIndentedString(customerKycDetailsHistory)).append("\n");
    sb.append("    customerVerificationDetails: ").append(toIndentedString(customerVerificationDetails)).append("\n");
    sb.append("    customerVerificationDetailsHistory: ").append(toIndentedString(customerVerificationDetailsHistory)).append("\n");
    sb.append("    customerReceivers: ").append(toIndentedString(customerReceivers)).append("\n");
    sb.append("    customerUab: ").append(toIndentedString(customerUab)).append("\n");
    sb.append("    customerUsageStatistics: ").append(toIndentedString(customerUsageStatistics)).append("\n");
    sb.append("    customerRole: ").append(toIndentedString(customerRole)).append("\n");
    sb.append("    customerMiscFlags: ").append(toIndentedString(customerMiscFlags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerSequenceNo");
    openapiFields.add("isMatched");
    openapiFields.add("isArchived");
    openapiFields.add("customerPersonalInfo");
    openapiFields.add("customerAccountInfo");
    openapiFields.add("customerAccountOnboardingInfo");
    openapiFields.add("customerAddress");
    openapiFields.add("customerEmail");
    openapiFields.add("customerPhone");
    openapiFields.add("customerPreferences");
    openapiFields.add("customerFundingSources");
    openapiFields.add("customerKyc");
    openapiFields.add("customerKycDetails");
    openapiFields.add("customerKycDetailsHistory");
    openapiFields.add("customerVerificationDetails");
    openapiFields.add("customerVerificationDetailsHistory");
    openapiFields.add("customerReceivers");
    openapiFields.add("customerUab");
    openapiFields.add("customerUsageStatistics");
    openapiFields.add("customerRole");
    openapiFields.add("customerMiscFlags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerDetailsSet7
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerDetailsSet7.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerDetailsSet7 is not found in the empty JSON string", CustomerDetailsSet7.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerDetailsSet7.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerDetailsSet7` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("isMatched") != null && !jsonObj.get("isMatched").isJsonNull()) && !jsonObj.get("isMatched").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isMatched` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isMatched").toString()));
      }
      if ((jsonObj.get("isArchived") != null && !jsonObj.get("isArchived").isJsonNull()) && !jsonObj.get("isArchived").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isArchived` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isArchived").toString()));
      }
      // validate the optional field `customerPersonalInfo`
      if (jsonObj.get("customerPersonalInfo") != null && !jsonObj.get("customerPersonalInfo").isJsonNull()) {
        CustomerAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerPersonalInfo"));
      }
      if (jsonObj.get("customerAccountInfo") != null && !jsonObj.get("customerAccountInfo").isJsonNull()) {
        JsonArray jsonArraycustomerAccountInfo = jsonObj.getAsJsonArray("customerAccountInfo");
        if (jsonArraycustomerAccountInfo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerAccountInfo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerAccountInfo` to be an array in the JSON string but got `%s`", jsonObj.get("customerAccountInfo").toString()));
          }

          // validate the optional field `customerAccountInfo` (array)
          for (int i = 0; i < jsonArraycustomerAccountInfo.size(); i++) {
            AccountAndAudit.validateJsonObject(jsonArraycustomerAccountInfo.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerAccountOnboardingInfo") != null && !jsonObj.get("customerAccountOnboardingInfo").isJsonNull()) {
        JsonArray jsonArraycustomerAccountOnboardingInfo = jsonObj.getAsJsonArray("customerAccountOnboardingInfo");
        if (jsonArraycustomerAccountOnboardingInfo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerAccountOnboardingInfo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerAccountOnboardingInfo` to be an array in the JSON string but got `%s`", jsonObj.get("customerAccountOnboardingInfo").toString()));
          }

          // validate the optional field `customerAccountOnboardingInfo` (array)
          for (int i = 0; i < jsonArraycustomerAccountOnboardingInfo.size(); i++) {
            AccountOnboardingAndAudit.validateJsonObject(jsonArraycustomerAccountOnboardingInfo.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerAddress") != null && !jsonObj.get("customerAddress").isJsonNull()) {
        JsonArray jsonArraycustomerAddress = jsonObj.getAsJsonArray("customerAddress");
        if (jsonArraycustomerAddress != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerAddress").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerAddress` to be an array in the JSON string but got `%s`", jsonObj.get("customerAddress").toString()));
          }

          // validate the optional field `customerAddress` (array)
          for (int i = 0; i < jsonArraycustomerAddress.size(); i++) {
            AddressAndAudit.validateJsonObject(jsonArraycustomerAddress.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerEmail") != null && !jsonObj.get("customerEmail").isJsonNull()) {
        JsonArray jsonArraycustomerEmail = jsonObj.getAsJsonArray("customerEmail");
        if (jsonArraycustomerEmail != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerEmail").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerEmail` to be an array in the JSON string but got `%s`", jsonObj.get("customerEmail").toString()));
          }

          // validate the optional field `customerEmail` (array)
          for (int i = 0; i < jsonArraycustomerEmail.size(); i++) {
            EmailAndAudit.validateJsonObject(jsonArraycustomerEmail.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerPhone") != null && !jsonObj.get("customerPhone").isJsonNull()) {
        JsonArray jsonArraycustomerPhone = jsonObj.getAsJsonArray("customerPhone");
        if (jsonArraycustomerPhone != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerPhone").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerPhone` to be an array in the JSON string but got `%s`", jsonObj.get("customerPhone").toString()));
          }

          // validate the optional field `customerPhone` (array)
          for (int i = 0; i < jsonArraycustomerPhone.size(); i++) {
            PhoneAndAudit.validateJsonObject(jsonArraycustomerPhone.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `customerPreferences`
      if (jsonObj.get("customerPreferences") != null && !jsonObj.get("customerPreferences").isJsonNull()) {
        PreferencesAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerPreferences"));
      }
      if (jsonObj.get("customerFundingSources") != null && !jsonObj.get("customerFundingSources").isJsonNull()) {
        JsonArray jsonArraycustomerFundingSources = jsonObj.getAsJsonArray("customerFundingSources");
        if (jsonArraycustomerFundingSources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerFundingSources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerFundingSources` to be an array in the JSON string but got `%s`", jsonObj.get("customerFundingSources").toString()));
          }

          // validate the optional field `customerFundingSources` (array)
          for (int i = 0; i < jsonArraycustomerFundingSources.size(); i++) {
            FundingSourceAndAudit.validateJsonObject(jsonArraycustomerFundingSources.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerKyc") != null && !jsonObj.get("customerKyc").isJsonNull()) {
        JsonArray jsonArraycustomerKyc = jsonObj.getAsJsonArray("customerKyc");
        if (jsonArraycustomerKyc != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerKyc").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerKyc` to be an array in the JSON string but got `%s`", jsonObj.get("customerKyc").toString()));
          }

          // validate the optional field `customerKyc` (array)
          for (int i = 0; i < jsonArraycustomerKyc.size(); i++) {
            KycAndAudit.validateJsonObject(jsonArraycustomerKyc.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerKycDetails") != null && !jsonObj.get("customerKycDetails").isJsonNull()) {
        JsonArray jsonArraycustomerKycDetails = jsonObj.getAsJsonArray("customerKycDetails");
        if (jsonArraycustomerKycDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerKycDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerKycDetails` to be an array in the JSON string but got `%s`", jsonObj.get("customerKycDetails").toString()));
          }

          // validate the optional field `customerKycDetails` (array)
          for (int i = 0; i < jsonArraycustomerKycDetails.size(); i++) {
            CustomerKycDetailAndAudit.validateJsonObject(jsonArraycustomerKycDetails.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerKycDetailsHistory") != null && !jsonObj.get("customerKycDetailsHistory").isJsonNull()) {
        JsonArray jsonArraycustomerKycDetailsHistory = jsonObj.getAsJsonArray("customerKycDetailsHistory");
        if (jsonArraycustomerKycDetailsHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerKycDetailsHistory").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerKycDetailsHistory` to be an array in the JSON string but got `%s`", jsonObj.get("customerKycDetailsHistory").toString()));
          }

          // validate the optional field `customerKycDetailsHistory` (array)
          for (int i = 0; i < jsonArraycustomerKycDetailsHistory.size(); i++) {
            CustomerKycDetailAndAudit.validateJsonObject(jsonArraycustomerKycDetailsHistory.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerVerificationDetails") != null && !jsonObj.get("customerVerificationDetails").isJsonNull()) {
        JsonArray jsonArraycustomerVerificationDetails = jsonObj.getAsJsonArray("customerVerificationDetails");
        if (jsonArraycustomerVerificationDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerVerificationDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerVerificationDetails` to be an array in the JSON string but got `%s`", jsonObj.get("customerVerificationDetails").toString()));
          }

          // validate the optional field `customerVerificationDetails` (array)
          for (int i = 0; i < jsonArraycustomerVerificationDetails.size(); i++) {
            CustomerVerificationDetailAndAudit.validateJsonObject(jsonArraycustomerVerificationDetails.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerVerificationDetailsHistory") != null && !jsonObj.get("customerVerificationDetailsHistory").isJsonNull()) {
        JsonArray jsonArraycustomerVerificationDetailsHistory = jsonObj.getAsJsonArray("customerVerificationDetailsHistory");
        if (jsonArraycustomerVerificationDetailsHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerVerificationDetailsHistory").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerVerificationDetailsHistory` to be an array in the JSON string but got `%s`", jsonObj.get("customerVerificationDetailsHistory").toString()));
          }

          // validate the optional field `customerVerificationDetailsHistory` (array)
          for (int i = 0; i < jsonArraycustomerVerificationDetailsHistory.size(); i++) {
            CustomerVerificationDetailAndAudit.validateJsonObject(jsonArraycustomerVerificationDetailsHistory.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerReceivers") != null && !jsonObj.get("customerReceivers").isJsonNull()) {
        JsonArray jsonArraycustomerReceivers = jsonObj.getAsJsonArray("customerReceivers");
        if (jsonArraycustomerReceivers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerReceivers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerReceivers` to be an array in the JSON string but got `%s`", jsonObj.get("customerReceivers").toString()));
          }

          // validate the optional field `customerReceivers` (array)
          for (int i = 0; i < jsonArraycustomerReceivers.size(); i++) {
            CustomerReceiverAndAudit.validateJsonObject(jsonArraycustomerReceivers.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerUab") != null && !jsonObj.get("customerUab").isJsonNull()) {
        JsonArray jsonArraycustomerUab = jsonObj.getAsJsonArray("customerUab");
        if (jsonArraycustomerUab != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerUab").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerUab` to be an array in the JSON string but got `%s`", jsonObj.get("customerUab").toString()));
          }

          // validate the optional field `customerUab` (array)
          for (int i = 0; i < jsonArraycustomerUab.size(); i++) {
            UabAndAudit.validateJsonObject(jsonArraycustomerUab.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `customerUsageStatistics`
      if (jsonObj.get("customerUsageStatistics") != null && !jsonObj.get("customerUsageStatistics").isJsonNull()) {
        CustomerUsageStatisticsAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerUsageStatistics"));
      }
      // validate the optional field `customerRole`
      if (jsonObj.get("customerRole") != null && !jsonObj.get("customerRole").isJsonNull()) {
        CustomerRoleAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerRole"));
      }
      if (jsonObj.get("customerMiscFlags") != null && !jsonObj.get("customerMiscFlags").isJsonNull()) {
        JsonArray jsonArraycustomerMiscFlags = jsonObj.getAsJsonArray("customerMiscFlags");
        if (jsonArraycustomerMiscFlags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerMiscFlags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerMiscFlags` to be an array in the JSON string but got `%s`", jsonObj.get("customerMiscFlags").toString()));
          }

          // validate the optional field `customerMiscFlags` (array)
          for (int i = 0; i < jsonArraycustomerMiscFlags.size(); i++) {
            CustomerMiscFlagsAndAudit.validateJsonObject(jsonArraycustomerMiscFlags.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerDetailsSet7.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerDetailsSet7' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerDetailsSet7> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerDetailsSet7.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerDetailsSet7>() {
           @Override
           public void write(JsonWriter out, CustomerDetailsSet7 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerDetailsSet7 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerDetailsSet7 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerDetailsSet7
  * @throws IOException if the JSON string is invalid with respect to CustomerDetailsSet7
  */
  public static CustomerDetailsSet7 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerDetailsSet7.class);
  }

 /**
  * Convert an instance of CustomerDetailsSet7 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

