/*
 * ucd_clkup_v1_api
 * Swagger documentation for UCD Customer Lookup Service API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.customerlookup;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

/**
 * This is response model for KeyLookupCustomerByReceiverLimit service. If the customer is found, successful message with customer details will be returned in the response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T20:02:06.369160100+05:30[Asia/Calcutta]")
public class KeyLookupCustomerByReceiverLimitResponse {
  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private Header header;

  public static final String SERIALIZED_NAME_RESPONSE_STATUS = "responseStatus";
  @SerializedName(SERIALIZED_NAME_RESPONSE_STATUS)
  private ResponseStatus responseStatus;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SEARCHED_BY = "searchedBy";
  @SerializedName(SERIALIZED_NAME_SEARCHED_BY)
  private CustomerKey searchedBy;

  public static final String SERIALIZED_NAME_CUSTOMER_DETAILS = "customerDetails";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_DETAILS)
  private CustomerDetailsSet5 customerDetails;

  public static final String SERIALIZED_NAME_RECEIVER_NEXT_INDEX = "receiverNextIndex";
  @SerializedName(SERIALIZED_NAME_RECEIVER_NEXT_INDEX)
  private Integer receiverNextIndex;

  public static final String SERIALIZED_NAME_RECEIVER_MORE_FLAG = "receiverMoreFlag";
  @SerializedName(SERIALIZED_NAME_RECEIVER_MORE_FLAG)
  private Boolean receiverMoreFlag;

  public KeyLookupCustomerByReceiverLimitResponse() {
  }

  public KeyLookupCustomerByReceiverLimitResponse header(Header header) {
    
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nonnull
  public Header getHeader() {
    return header;
  }


  public void setHeader(Header header) {
    this.header = header;
  }


  public KeyLookupCustomerByReceiverLimitResponse responseStatus(ResponseStatus responseStatus) {
    
    this.responseStatus = responseStatus;
    return this;
  }

   /**
   * Get responseStatus
   * @return responseStatus
  **/
  @javax.annotation.Nonnull
  public ResponseStatus getResponseStatus() {
    return responseStatus;
  }


  public void setResponseStatus(ResponseStatus responseStatus) {
    this.responseStatus = responseStatus;
  }


  public KeyLookupCustomerByReceiverLimitResponse description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Summary of the response
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public KeyLookupCustomerByReceiverLimitResponse searchedBy(CustomerKey searchedBy) {
    
    this.searchedBy = searchedBy;
    return this;
  }

   /**
   * Get searchedBy
   * @return searchedBy
  **/
  @javax.annotation.Nullable
  public CustomerKey getSearchedBy() {
    return searchedBy;
  }


  public void setSearchedBy(CustomerKey searchedBy) {
    this.searchedBy = searchedBy;
  }


  public KeyLookupCustomerByReceiverLimitResponse customerDetails(CustomerDetailsSet5 customerDetails) {
    
    this.customerDetails = customerDetails;
    return this;
  }

   /**
   * Get customerDetails
   * @return customerDetails
  **/
  @javax.annotation.Nullable
  public CustomerDetailsSet5 getCustomerDetails() {
    return customerDetails;
  }


  public void setCustomerDetails(CustomerDetailsSet5 customerDetails) {
    this.customerDetails = customerDetails;
  }


  public KeyLookupCustomerByReceiverLimitResponse receiverNextIndex(Integer receiverNextIndex) {
    
    this.receiverNextIndex = receiverNextIndex;
    return this;
  }

   /**
   * Get receiverNextIndex
   * @return receiverNextIndex
  **/
  @javax.annotation.Nullable
  public Integer getReceiverNextIndex() {
    return receiverNextIndex;
  }


  public void setReceiverNextIndex(Integer receiverNextIndex) {
    this.receiverNextIndex = receiverNextIndex;
  }


  public KeyLookupCustomerByReceiverLimitResponse receiverMoreFlag(Boolean receiverMoreFlag) {
    
    this.receiverMoreFlag = receiverMoreFlag;
    return this;
  }

   /**
   * Get receiverMoreFlag
   * @return receiverMoreFlag
  **/
  @javax.annotation.Nullable
  public Boolean getReceiverMoreFlag() {
    return receiverMoreFlag;
  }


  public void setReceiverMoreFlag(Boolean receiverMoreFlag) {
    this.receiverMoreFlag = receiverMoreFlag;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyLookupCustomerByReceiverLimitResponse keyLookupCustomerByReceiverLimitResponse = (KeyLookupCustomerByReceiverLimitResponse) o;
    return Objects.equals(this.header, keyLookupCustomerByReceiverLimitResponse.header) &&
        Objects.equals(this.responseStatus, keyLookupCustomerByReceiverLimitResponse.responseStatus) &&
        Objects.equals(this.description, keyLookupCustomerByReceiverLimitResponse.description) &&
        Objects.equals(this.searchedBy, keyLookupCustomerByReceiverLimitResponse.searchedBy) &&
        Objects.equals(this.customerDetails, keyLookupCustomerByReceiverLimitResponse.customerDetails) &&
        Objects.equals(this.receiverNextIndex, keyLookupCustomerByReceiverLimitResponse.receiverNextIndex) &&
        Objects.equals(this.receiverMoreFlag, keyLookupCustomerByReceiverLimitResponse.receiverMoreFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, responseStatus, description, searchedBy, customerDetails, receiverNextIndex, receiverMoreFlag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyLookupCustomerByReceiverLimitResponse {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    responseStatus: ").append(toIndentedString(responseStatus)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    searchedBy: ").append(toIndentedString(searchedBy)).append("\n");
    sb.append("    customerDetails: ").append(toIndentedString(customerDetails)).append("\n");
    sb.append("    receiverNextIndex: ").append(toIndentedString(receiverNextIndex)).append("\n");
    sb.append("    receiverMoreFlag: ").append(toIndentedString(receiverMoreFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("header");
    openapiFields.add("responseStatus");
    openapiFields.add("description");
    openapiFields.add("searchedBy");
    openapiFields.add("customerDetails");
    openapiFields.add("receiverNextIndex");
    openapiFields.add("receiverMoreFlag");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("header");
    openapiRequiredFields.add("responseStatus");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KeyLookupCustomerByReceiverLimitResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KeyLookupCustomerByReceiverLimitResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeyLookupCustomerByReceiverLimitResponse is not found in the empty JSON string", KeyLookupCustomerByReceiverLimitResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!KeyLookupCustomerByReceiverLimitResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KeyLookupCustomerByReceiverLimitResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : KeyLookupCustomerByReceiverLimitResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `header`
      Header.validateJsonObject(jsonObj.getAsJsonObject("header"));
      // validate the required field `responseStatus`
      ResponseStatus.validateJsonObject(jsonObj.getAsJsonObject("responseStatus"));
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `searchedBy`
      if (jsonObj.get("searchedBy") != null && !jsonObj.get("searchedBy").isJsonNull()) {
        CustomerKey.validateJsonObject(jsonObj.getAsJsonObject("searchedBy"));
      }
      // validate the optional field `customerDetails`
      if (jsonObj.get("customerDetails") != null && !jsonObj.get("customerDetails").isJsonNull()) {
        CustomerDetailsSet5.validateJsonObject(jsonObj.getAsJsonObject("customerDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeyLookupCustomerByReceiverLimitResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeyLookupCustomerByReceiverLimitResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeyLookupCustomerByReceiverLimitResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeyLookupCustomerByReceiverLimitResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<KeyLookupCustomerByReceiverLimitResponse>() {
           @Override
           public void write(JsonWriter out, KeyLookupCustomerByReceiverLimitResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KeyLookupCustomerByReceiverLimitResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KeyLookupCustomerByReceiverLimitResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KeyLookupCustomerByReceiverLimitResponse
  * @throws IOException if the JSON string is invalid with respect to KeyLookupCustomerByReceiverLimitResponse
  */
  public static KeyLookupCustomerByReceiverLimitResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeyLookupCustomerByReceiverLimitResponse.class);
  }

 /**
  * Convert an instance of KeyLookupCustomerByReceiverLimitResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

