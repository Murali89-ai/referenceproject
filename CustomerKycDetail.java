/*
 * ucd_pmgmt_v1_api
 * Swagger documentation for UCD Profile Management Service API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.CustomerKycVendor;
import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.Name;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.JSON;

/**
 * CustomerKycDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T21:22:09.739306500+05:30[Asia/Calcutta]")
public class CustomerKycDetail {
  public static final String SERIALIZED_NAME_PCP_NUMBER = "pcpNumber";
  @SerializedName(SERIALIZED_NAME_PCP_NUMBER)
  private String pcpNumber;

  public static final String SERIALIZED_NAME_CHANNEL_TYPE = "channelType";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TYPE)
  private Integer channelType;

  public static final String SERIALIZED_NAME_KYC_REC_TYPE = "kycRecType";
  @SerializedName(SERIALIZED_NAME_KYC_REC_TYPE)
  private String kycRecType;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private String active;

  public static final String SERIALIZED_NAME_DISPLAY_FLAG = "displayFlag";
  @SerializedName(SERIALIZED_NAME_DISPLAY_FLAG)
  private String displayFlag;

  public static final String SERIALIZED_NAME_DOC_REF_NUM = "docRefNum";
  @SerializedName(SERIALIZED_NAME_DOC_REF_NUM)
  private String docRefNum;

  public static final String SERIALIZED_NAME_DOC_UPDATE_DATE = "docUpdateDate";
  @SerializedName(SERIALIZED_NAME_DOC_UPDATE_DATE)
  private OffsetDateTime docUpdateDate;

  public static final String SERIALIZED_NAME_DOC_REF_NUM2 = "docRefNum2";
  @SerializedName(SERIALIZED_NAME_DOC_REF_NUM2)
  private String docRefNum2;

  public static final String SERIALIZED_NAME_DOC_UPDATE_DATE2 = "docUpdateDate2";
  @SerializedName(SERIALIZED_NAME_DOC_UPDATE_DATE2)
  private OffsetDateTime docUpdateDate2;

  public static final String SERIALIZED_NAME_DOC_REF_NUM3 = "docRefNum3";
  @SerializedName(SERIALIZED_NAME_DOC_REF_NUM3)
  private String docRefNum3;

  public static final String SERIALIZED_NAME_DOC_UPDATE_DATE3 = "docUpdateDate3";
  @SerializedName(SERIALIZED_NAME_DOC_UPDATE_DATE3)
  private OffsetDateTime docUpdateDate3;

  public static final String SERIALIZED_NAME_FACE_DETECTED_FLAG = "faceDetectedFlag";
  @SerializedName(SERIALIZED_NAME_FACE_DETECTED_FLAG)
  private String faceDetectedFlag;

  public static final String SERIALIZED_NAME_IDVV_STATUS = "idvvStatus";
  @SerializedName(SERIALIZED_NAME_IDVV_STATUS)
  private String idvvStatus;

  public static final String SERIALIZED_NAME_IDVV_STATUS_DATE = "idvvStatusDate";
  @SerializedName(SERIALIZED_NAME_IDVV_STATUS_DATE)
  private OffsetDateTime idvvStatusDate;

  public static final String SERIALIZED_NAME_ID_EXPIRY_DATE = "idExpiryDate";
  @SerializedName(SERIALIZED_NAME_ID_EXPIRY_DATE)
  private LocalDate idExpiryDate;

  public static final String SERIALIZED_NAME_ID_METHOD = "idMethod";
  @SerializedName(SERIALIZED_NAME_ID_METHOD)
  private String idMethod;

  public static final String SERIALIZED_NAME_ID_ISSUE_AGENCY = "idIssueAgency";
  @SerializedName(SERIALIZED_NAME_ID_ISSUE_AGENCY)
  private String idIssueAgency;

  public static final String SERIALIZED_NAME_ID_ISSUING_COUNTRY = "idIssuingCountry";
  @SerializedName(SERIALIZED_NAME_ID_ISSUING_COUNTRY)
  private String idIssuingCountry;

  public static final String SERIALIZED_NAME_ID_ISSUING_DATE = "idIssuingDate";
  @SerializedName(SERIALIZED_NAME_ID_ISSUING_DATE)
  private LocalDate idIssuingDate;

  public static final String SERIALIZED_NAME_ID_NUMBER = "idNumber";
  @SerializedName(SERIALIZED_NAME_ID_NUMBER)
  private String idNumber;

  public static final String SERIALIZED_NAME_CARD_REF_NUMBER = "cardRefNumber";
  @SerializedName(SERIALIZED_NAME_CARD_REF_NUMBER)
  private String cardRefNumber;

  public static final String SERIALIZED_NAME_ID_TYPE = "idType";
  @SerializedName(SERIALIZED_NAME_ID_TYPE)
  private String idType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Name name;

  public static final String SERIALIZED_NAME_DOB = "dob";
  @SerializedName(SERIALIZED_NAME_DOB)
  private LocalDate dob;

  public static final String SERIALIZED_NAME_STREET_ADDRESS1 = "streetAddress1";
  @SerializedName(SERIALIZED_NAME_STREET_ADDRESS1)
  private String streetAddress1;

  public static final String SERIALIZED_NAME_STREET_ADDRESS2 = "streetAddress2";
  @SerializedName(SERIALIZED_NAME_STREET_ADDRESS2)
  private String streetAddress2;

  public static final String SERIALIZED_NAME_STREET_ADDRESS3 = "streetAddress3";
  @SerializedName(SERIALIZED_NAME_STREET_ADDRESS3)
  private String streetAddress3;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_STATE_PROVINCE = "stateProvince";
  @SerializedName(SERIALIZED_NAME_STATE_PROVINCE)
  private String stateProvince;

  public static final String SERIALIZED_NAME_ZIP_POSTAL_CODE = "zipPostalCode";
  @SerializedName(SERIALIZED_NAME_ZIP_POSTAL_CODE)
  private String zipPostalCode;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_EMAIL_VALUE = "emailValue";
  @SerializedName(SERIALIZED_NAME_EMAIL_VALUE)
  private String emailValue;

  public static final String SERIALIZED_NAME_PHONE_NUMBER1 = "phoneNumber1";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER1)
  private String phoneNumber1;

  public static final String SERIALIZED_NAME_PHONE_NUMBER2 = "phoneNumber2";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER2)
  private String phoneNumber2;

  public static final String SERIALIZED_NAME_PHONE_NUMBER3 = "phoneNumber3";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER3)
  private String phoneNumber3;

  public static final String SERIALIZED_NAME_PHONE_NUMBER4 = "phoneNumber4";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER4)
  private String phoneNumber4;

  public static final String SERIALIZED_NAME_KYC_ADDRESS = "kycAddress";
  @SerializedName(SERIALIZED_NAME_KYC_ADDRESS)
  private String kycAddress;

  public static final String SERIALIZED_NAME_KYC_DOB = "kycDob";
  @SerializedName(SERIALIZED_NAME_KYC_DOB)
  private LocalDate kycDob;

  public static final String SERIALIZED_NAME_KYC_DOB_MATCH = "kycDobMatch";
  @SerializedName(SERIALIZED_NAME_KYC_DOB_MATCH)
  private String kycDobMatch;

  public static final String SERIALIZED_NAME_KYC_EXPIRY_DATE = "kycExpiryDate";
  @SerializedName(SERIALIZED_NAME_KYC_EXPIRY_DATE)
  private LocalDate kycExpiryDate;

  public static final String SERIALIZED_NAME_KYC_EXPIRY_DATE_MATCH = "kycExpiryDateMatch";
  @SerializedName(SERIALIZED_NAME_KYC_EXPIRY_DATE_MATCH)
  private String kycExpiryDateMatch;

  public static final String SERIALIZED_NAME_KYC_ID_COUNTRY = "kycIdCountry";
  @SerializedName(SERIALIZED_NAME_KYC_ID_COUNTRY)
  private String kycIdCountry;

  public static final String SERIALIZED_NAME_KYC_ID_COUNTRY_MATCH = "kycIdCountryMatch";
  @SerializedName(SERIALIZED_NAME_KYC_ID_COUNTRY_MATCH)
  private String kycIdCountryMatch;

  public static final String SERIALIZED_NAME_KYC_ID_ISSUE_DATE = "kycIdIssueDate";
  @SerializedName(SERIALIZED_NAME_KYC_ID_ISSUE_DATE)
  private LocalDate kycIdIssueDate;

  public static final String SERIALIZED_NAME_KYC_ID_ISSUE_DATE_MATCH = "kycIdIssueDateMatch";
  @SerializedName(SERIALIZED_NAME_KYC_ID_ISSUE_DATE_MATCH)
  private String kycIdIssueDateMatch;

  public static final String SERIALIZED_NAME_KYC_ID_NUMBER = "kycIdNumber";
  @SerializedName(SERIALIZED_NAME_KYC_ID_NUMBER)
  private String kycIdNumber;

  public static final String SERIALIZED_NAME_KYC_ID_NUMBER2 = "kycIdNumber2";
  @SerializedName(SERIALIZED_NAME_KYC_ID_NUMBER2)
  private String kycIdNumber2;

  public static final String SERIALIZED_NAME_KYC_ID_NUMBER_MATCH = "kycIdNumberMatch";
  @SerializedName(SERIALIZED_NAME_KYC_ID_NUMBER_MATCH)
  private String kycIdNumberMatch;

  public static final String SERIALIZED_NAME_KYC_ID_STATE = "kycIdState";
  @SerializedName(SERIALIZED_NAME_KYC_ID_STATE)
  private String kycIdState;

  public static final String SERIALIZED_NAME_KYC_ID_TYPE = "kycIdType";
  @SerializedName(SERIALIZED_NAME_KYC_ID_TYPE)
  private String kycIdType;

  public static final String SERIALIZED_NAME_KYC_ISSUING_AGENCY = "kycIssuingAgency";
  @SerializedName(SERIALIZED_NAME_KYC_ISSUING_AGENCY)
  private String kycIssuingAgency;

  public static final String SERIALIZED_NAME_KYC_MR_EXISTS = "kycMrExists";
  @SerializedName(SERIALIZED_NAME_KYC_MR_EXISTS)
  private String kycMrExists;

  public static final String SERIALIZED_NAME_KYC_NAME = "kycName";
  @SerializedName(SERIALIZED_NAME_KYC_NAME)
  private String kycName;

  public static final String SERIALIZED_NAME_KYC_LAST_NAME = "kycLastName";
  @SerializedName(SERIALIZED_NAME_KYC_LAST_NAME)
  private String kycLastName;

  public static final String SERIALIZED_NAME_KYC_NAME_MATCH = "kycNameMatch";
  @SerializedName(SERIALIZED_NAME_KYC_NAME_MATCH)
  private String kycNameMatch;

  public static final String SERIALIZED_NAME_KYC_VALIDATE_DATE = "kycValidateDate";
  @SerializedName(SERIALIZED_NAME_KYC_VALIDATE_DATE)
  private OffsetDateTime kycValidateDate;

  public static final String SERIALIZED_NAME_KYC_FORM_STATUS = "kycFormStatus";
  @SerializedName(SERIALIZED_NAME_KYC_FORM_STATUS)
  private String kycFormStatus;

  public static final String SERIALIZED_NAME_EV_DATA = "evData";
  @SerializedName(SERIALIZED_NAME_EV_DATA)
  private String evData;

  public static final String SERIALIZED_NAME_XML = "xml";
  @SerializedName(SERIALIZED_NAME_XML)
  private String xml;

  public static final String SERIALIZED_NAME_XML_EXTENDED = "xmlExtended";
  @SerializedName(SERIALIZED_NAME_XML_EXTENDED)
  private String xmlExtended;

  public static final String SERIALIZED_NAME_INFO = "info";
  @SerializedName(SERIALIZED_NAME_INFO)
  private String info;

  public static final String SERIALIZED_NAME_NO_OF_ATTEMPTS = "noOfAttempts";
  @SerializedName(SERIALIZED_NAME_NO_OF_ATTEMPTS)
  private Integer noOfAttempts;

  public static final String SERIALIZED_NAME_NO_OF_AUTH_ERRORS = "noOfAuthErrors";
  @SerializedName(SERIALIZED_NAME_NO_OF_AUTH_ERRORS)
  private Integer noOfAuthErrors;

  public static final String SERIALIZED_NAME_PAYEE_UCB = "payeeUcb";
  @SerializedName(SERIALIZED_NAME_PAYEE_UCB)
  private String payeeUcb;

  public static final String SERIALIZED_NAME_SENDER_UCB = "senderUcb";
  @SerializedName(SERIALIZED_NAME_SENDER_UCB)
  private String senderUcb;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_KYC_DETAILS_SEQ = "kycDetailsSeq";
  @SerializedName(SERIALIZED_NAME_KYC_DETAILS_SEQ)
  private Long kycDetailsSeq;

  public static final String SERIALIZED_NAME_MTCN = "mtcn";
  @SerializedName(SERIALIZED_NAME_MTCN)
  private String mtcn;

  public static final String SERIALIZED_NAME_TRANSACTION_DATE = "transactionDate";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_DATE)
  private OffsetDateTime transactionDate;

  public static final String SERIALIZED_NAME_CONSENT = "consent";
  @SerializedName(SERIALIZED_NAME_CONSENT)
  private String consent;

  public static final String SERIALIZED_NAME_KYC_GENDER_MATCH = "kycGenderMatch";
  @SerializedName(SERIALIZED_NAME_KYC_GENDER_MATCH)
  private String kycGenderMatch;

  public static final String SERIALIZED_NAME_KYC_NATIONALITY_MATCH = "kycNationalityMatch";
  @SerializedName(SERIALIZED_NAME_KYC_NATIONALITY_MATCH)
  private String kycNationalityMatch;

  public static final String SERIALIZED_NAME_KYC_FIRST_NAME_MATCH = "kycFirstNameMatch";
  @SerializedName(SERIALIZED_NAME_KYC_FIRST_NAME_MATCH)
  private String kycFirstNameMatch;

  public static final String SERIALIZED_NAME_KYC_LAST_NAME_MATCH = "kycLastNameMatch";
  @SerializedName(SERIALIZED_NAME_KYC_LAST_NAME_MATCH)
  private String kycLastNameMatch;

  public static final String SERIALIZED_NAME_KYC_MIDDLE_NAME_MATCH = "kycMiddleNameMatch";
  @SerializedName(SERIALIZED_NAME_KYC_MIDDLE_NAME_MATCH)
  private String kycMiddleNameMatch;

  public static final String SERIALIZED_NAME_RTA_CARD_NUMBER = "rtaCardNumber";
  @SerializedName(SERIALIZED_NAME_RTA_CARD_NUMBER)
  private String rtaCardNumber;

  public static final String SERIALIZED_NAME_REF_NUMBER = "refNumber";
  @SerializedName(SERIALIZED_NAME_REF_NUMBER)
  private String refNumber;

  public static final String SERIALIZED_NAME_PLACE_OF_BIRTH = "placeOfBirth";
  @SerializedName(SERIALIZED_NAME_PLACE_OF_BIRTH)
  private String placeOfBirth;

  public static final String SERIALIZED_NAME_FAMILY_NAME_AT_BIRTH = "familyNameAtBirth";
  @SerializedName(SERIALIZED_NAME_FAMILY_NAME_AT_BIRTH)
  private String familyNameAtBirth;

  public static final String SERIALIZED_NAME_FAMILY_NAME_AT_CITIZENSHIP = "familyNameAtCitizenship";
  @SerializedName(SERIALIZED_NAME_FAMILY_NAME_AT_CITIZENSHIP)
  private String familyNameAtCitizenship;

  public static final String SERIALIZED_NAME_VENDOR = "vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private String vendor;

  public static final String SERIALIZED_NAME_VERIFICATION_SOURCES = "verificationSources";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_SOURCES)
  private String verificationSources;

  public static final String SERIALIZED_NAME_CONSENT_DATE = "consentDate";
  @SerializedName(SERIALIZED_NAME_CONSENT_DATE)
  private OffsetDateTime consentDate;

  public static final String SERIALIZED_NAME_ADDRESS_SEARCH_JSON = "addressSearchJson";
  @SerializedName(SERIALIZED_NAME_ADDRESS_SEARCH_JSON)
  private String addressSearchJson;

  public static final String SERIALIZED_NAME_CUSTOMER_KYC_VENDORS = "customerKycVendors";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_KYC_VENDORS)
  private List<CustomerKycVendor> customerKycVendors;

  public static final String SERIALIZED_NAME_FLAG_SUB_TYPE = "flagSubType";
  @SerializedName(SERIALIZED_NAME_FLAG_SUB_TYPE)
  private String flagSubType;

  public static final String SERIALIZED_NAME_FLAG_SUB_STATUS = "flagSubStatus";
  @SerializedName(SERIALIZED_NAME_FLAG_SUB_STATUS)
  private String flagSubStatus;

  public static final String SERIALIZED_NAME_FREEBIE_COUNT = "freebieCount";
  @SerializedName(SERIALIZED_NAME_FREEBIE_COUNT)
  private Integer freebieCount;

  public static final String SERIALIZED_NAME_KYC_ID_TYPE_MATCH = "kycIdTypeMatch";
  @SerializedName(SERIALIZED_NAME_KYC_ID_TYPE_MATCH)
  private String kycIdTypeMatch;

  public static final String SERIALIZED_NAME_DOC_UPLOAD_SYSTEM = "docUploadSystem";
  @SerializedName(SERIALIZED_NAME_DOC_UPLOAD_SYSTEM)
  private String docUploadSystem;

  public static final String SERIALIZED_NAME_WU_ID_TYPE_MATCH = "wuIdTypeMatch";
  @SerializedName(SERIALIZED_NAME_WU_ID_TYPE_MATCH)
  private String wuIdTypeMatch;

  public static final String SERIALIZED_NAME_WU_ID_NUMBER_MATCH = "wuIdNumberMatch";
  @SerializedName(SERIALIZED_NAME_WU_ID_NUMBER_MATCH)
  private String wuIdNumberMatch;

  public static final String SERIALIZED_NAME_WU_ID_COUNTRY_MATCH = "wuIdCountryMatch";
  @SerializedName(SERIALIZED_NAME_WU_ID_COUNTRY_MATCH)
  private String wuIdCountryMatch;

  public static final String SERIALIZED_NAME_WU_DOB_MATCH = "wuDobMatch";
  @SerializedName(SERIALIZED_NAME_WU_DOB_MATCH)
  private String wuDobMatch;

  public static final String SERIALIZED_NAME_WU_NAME_MATCH = "wuNameMatch";
  @SerializedName(SERIALIZED_NAME_WU_NAME_MATCH)
  private String wuNameMatch;

  public static final String SERIALIZED_NAME_WU_EXPIRY_DATE_MATCH = "wuExpiryDateMatch";
  @SerializedName(SERIALIZED_NAME_WU_EXPIRY_DATE_MATCH)
  private String wuExpiryDateMatch;

  public static final String SERIALIZED_NAME_WU_ID_ISSUE_DATE_MATCH = "wuIdIssueDateMatch";
  @SerializedName(SERIALIZED_NAME_WU_ID_ISSUE_DATE_MATCH)
  private String wuIdIssueDateMatch;

  public static final String SERIALIZED_NAME_DVS_FLAG = "dvsFlag";
  @SerializedName(SERIALIZED_NAME_DVS_FLAG)
  private String dvsFlag;

  public static final String SERIALIZED_NAME_DVS_COUNTER = "dvsCounter";
  @SerializedName(SERIALIZED_NAME_DVS_COUNTER)
  private Integer dvsCounter;

  public static final String SERIALIZED_NAME_DOC_CLASS_CODE = "docClassCode";
  @SerializedName(SERIALIZED_NAME_DOC_CLASS_CODE)
  private String docClassCode;

  public static final String SERIALIZED_NAME_ID_ISSUING_AUTHORITY = "idIssuingAuthority";
  @SerializedName(SERIALIZED_NAME_ID_ISSUING_AUTHORITY)
  private String idIssuingAuthority;

  public static final String SERIALIZED_NAME_COUNTRY_CODE_ISO3 = "countryCodeIso3";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE_ISO3)
  private String countryCodeIso3;

  public static final String SERIALIZED_NAME_VERIFICATION_REFERENCE = "verificationReference";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_REFERENCE)
  private String verificationReference;

  public static final String SERIALIZED_NAME_AGENT_ACCOUNT_NUMBER = "agentAccountNumber";
  @SerializedName(SERIALIZED_NAME_AGENT_ACCOUNT_NUMBER)
  private String agentAccountNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_TIER = "customerTier";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TIER)
  private Integer customerTier;

  public static final String SERIALIZED_NAME_CUSTOMER_TIER_UPDATED_DATE = "customerTierUpdatedDate";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TIER_UPDATED_DATE)
  private OffsetDateTime customerTierUpdatedDate;

  public CustomerKycDetail() {
  }

  public CustomerKycDetail pcpNumber(String pcpNumber) {
    
    this.pcpNumber = pcpNumber;
    return this;
  }

   /**
   * PCP Number is the Loyalty card number. This is to uniquely identify the Customer&#39;s account profiles. It is populated in most of the systems (except Prepaid FIS). PCP Number and Account Key should be same for PCUST/Loyalty request.
   * @return pcpNumber
  **/
  @javax.annotation.Nonnull
  public String getPcpNumber() {
    return pcpNumber;
  }


  public void setPcpNumber(String pcpNumber) {
    this.pcpNumber = pcpNumber;
  }


  public CustomerKycDetail channelType(Integer channelType) {
    
    this.channelType = channelType;
    return this;
  }

   /**
   * Channel Type * 1 - Digital / Guest Checkout EU * 2 - Retail * 3 - Future Use * 4 - LBP/WUPSIL * 5 - WUPlus * 6 - Corrections Pay / Guest Checkout US / Wallet 
   * @return channelType
  **/
  @javax.annotation.Nonnull
  public Integer getChannelType() {
    return channelType;
  }


  public void setChannelType(Integer channelType) {
    this.channelType = channelType;
  }


  public CustomerKycDetail kycRecType(String kycRecType) {
    
    this.kycRecType = kycRecType;
    return this;
  }

   /**
   * KYC Record Type * VEDA - Australia / New Zealand, * SIGNICAT - Norway * SPAIN - Spain  * OCR - Retail 
   * @return kycRecType
  **/
  @javax.annotation.Nullable
  public String getKycRecType() {
    return kycRecType;
  }


  public void setKycRecType(String kycRecType) {
    this.kycRecType = kycRecType;
  }


  public CustomerKycDetail active(String active) {
    
    this.active = active;
    return this;
  }

   /**
   * This field indicates if the CustomerKycDetails is/not active. * Y - Active for Primary ID * N - Inactive for Primary ID * A - Active for Secondary ID * X - Inactive for Secondary ID 
   * @return active
  **/
  @javax.annotation.Nullable
  public String getActive() {
    return active;
  }


  public void setActive(String active) {
    this.active = active;
  }


  public CustomerKycDetail displayFlag(String displayFlag) {
    
    this.displayFlag = displayFlag;
    return this;
  }

   /**
   * Display Flag.
   * @return displayFlag
  **/
  @javax.annotation.Nullable
  public String getDisplayFlag() {
    return displayFlag;
  }


  public void setDisplayFlag(String displayFlag) {
    this.displayFlag = displayFlag;
  }


  public CustomerKycDetail docRefNum(String docRefNum) {
    
    this.docRefNum = docRefNum;
    return this;
  }

   /**
   * Document Reference Number I.
   * @return docRefNum
  **/
  @javax.annotation.Nullable
  public String getDocRefNum() {
    return docRefNum;
  }


  public void setDocRefNum(String docRefNum) {
    this.docRefNum = docRefNum;
  }


  public CustomerKycDetail docUpdateDate(OffsetDateTime docUpdateDate) {
    
    this.docUpdateDate = docUpdateDate;
    return this;
  }

   /**
   * Timestamp when Document Reference Number I was added/updated.
   * @return docUpdateDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getDocUpdateDate() {
    return docUpdateDate;
  }


  public void setDocUpdateDate(OffsetDateTime docUpdateDate) {
    this.docUpdateDate = docUpdateDate;
  }


  public CustomerKycDetail docRefNum2(String docRefNum2) {
    
    this.docRefNum2 = docRefNum2;
    return this;
  }

   /**
   * Document Reference Number II.
   * @return docRefNum2
  **/
  @javax.annotation.Nullable
  public String getDocRefNum2() {
    return docRefNum2;
  }


  public void setDocRefNum2(String docRefNum2) {
    this.docRefNum2 = docRefNum2;
  }


  public CustomerKycDetail docUpdateDate2(OffsetDateTime docUpdateDate2) {
    
    this.docUpdateDate2 = docUpdateDate2;
    return this;
  }

   /**
   * Timestamp when Document Reference Number II was added/updated.
   * @return docUpdateDate2
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getDocUpdateDate2() {
    return docUpdateDate2;
  }


  public void setDocUpdateDate2(OffsetDateTime docUpdateDate2) {
    this.docUpdateDate2 = docUpdateDate2;
  }


  public CustomerKycDetail docRefNum3(String docRefNum3) {
    
    this.docRefNum3 = docRefNum3;
    return this;
  }

   /**
   * Document Reference Number III.
   * @return docRefNum3
  **/
  @javax.annotation.Nullable
  public String getDocRefNum3() {
    return docRefNum3;
  }


  public void setDocRefNum3(String docRefNum3) {
    this.docRefNum3 = docRefNum3;
  }


  public CustomerKycDetail docUpdateDate3(OffsetDateTime docUpdateDate3) {
    
    this.docUpdateDate3 = docUpdateDate3;
    return this;
  }

   /**
   * Timestamp when Document Reference Number III was added/updated.
   * @return docUpdateDate3
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getDocUpdateDate3() {
    return docUpdateDate3;
  }


  public void setDocUpdateDate3(OffsetDateTime docUpdateDate3) {
    this.docUpdateDate3 = docUpdateDate3;
  }


  public CustomerKycDetail faceDetectedFlag(String faceDetectedFlag) {
    
    this.faceDetectedFlag = faceDetectedFlag;
    return this;
  }

   /**
   * Face Detected Flag.
   * @return faceDetectedFlag
  **/
  @javax.annotation.Nullable
  public String getFaceDetectedFlag() {
    return faceDetectedFlag;
  }


  public void setFaceDetectedFlag(String faceDetectedFlag) {
    this.faceDetectedFlag = faceDetectedFlag;
  }


  public CustomerKycDetail idvvStatus(String idvvStatus) {
    
    this.idvvStatus = idvvStatus;
    return this;
  }

   /**
   * ID Verification and Validation Status submitted to WU by the customer to check whether it is valid and not fraudulent, and has not expired and is considered an acceptable form of identification for the country the customer resides and also verifies the address where the customer lives.  **The below table defines the mapping between ChannelType &amp; idvvStatus** | Channel Type                             | Verification Status   | Remarks                                                     | | ---------------------------------------- | --------------------- | ----------------------------------------------------------- | | 1 (Digital)                              | N                     | Not Approved                                                | | 1 (Digital)                              | Y                     | Approved                                                    | | 1 (Digital)                              |                       | Not Approved                                                | | 1 (Digital)                              | I                     | In Progress                                                 | | 1 (Digital)                              | U                     | Investigating (Under Review)                                | | 1 (Digital)                              | R                     | New Request                                                 | | 1 (Digital)                              | E                     | Only in India (indicates error)                             | | 1 (Digital)                              | M                     | Manual Review                                               | | 4 (LBP/WUPSIL)                           | N                     | Not Approved                                                | | 4 (LBP/WUPSIL)                           | Y                     | Approved                                                    | | 4 (LBP/WUPSIL)                           | I                     | In Progress                                                 | | 5 (WUPlus/Banking)                       | Y                     | Approved                                                    | | 5 (WUPlus/Banking)                       | P                     | Pending with Pharos / Pending Verification with Vendor      | | 5 (WUPlus/Banking)                       | B                     | Bad/Inconsistent data or Not set (Pharos interim status)    | | 5 (WUPlus/Banking)                       | X                     | Rejected                                                    | | 5 (WUPlus/Banking)                       | I                     | Pharos In Progress                                          | | 6 ((CorrectionsPay/GuestCheckout/Wallet) | Y                     | Approved                                                    | | 6 ((CorrectionsPay/GuestCheckout/Wallet) | P                     | Pending with Pharos / Pending Verification with Vendor      | | 6 ((CorrectionsPay/GuestCheckout/Wallet) | B                     | Bad/Inconsistent data or Not set (Pharos interim status)    | | 6 ((CorrectionsPay/GuestCheckout/Wallet) | X                     | Rejected                                                    | | 6 ((CorrectionsPay/GuestCheckout/Wallet) | I                     | Pharos In Progress                                          | |                                          | 0                     | Nullify the existing value                                  | |                                          | O                     | Autoclose                                                   | 
   * @return idvvStatus
  **/
  @javax.annotation.Nullable
  public String getIdvvStatus() {
    return idvvStatus;
  }


  public void setIdvvStatus(String idvvStatus) {
    this.idvvStatus = idvvStatus;
  }


  public CustomerKycDetail idvvStatusDate(OffsetDateTime idvvStatusDate) {
    
    this.idvvStatusDate = idvvStatusDate;
    return this;
  }

   /**
   * Timestmp when IDVVStatus is added/updated.
   * @return idvvStatusDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getIdvvStatusDate() {
    return idvvStatusDate;
  }


  public void setIdvvStatusDate(OffsetDateTime idvvStatusDate) {
    this.idvvStatusDate = idvvStatusDate;
  }


  public CustomerKycDetail idExpiryDate(LocalDate idExpiryDate) {
    
    this.idExpiryDate = idExpiryDate;
    return this;
  }

   /**
   * Date on which the ID provided by the Customer would expire. This field could be nullified by passing  \&quot;1000-01-01\&quot;.
   * @return idExpiryDate
  **/
  @javax.annotation.Nullable
  public LocalDate getIdExpiryDate() {
    return idExpiryDate;
  }


  public void setIdExpiryDate(LocalDate idExpiryDate) {
    this.idExpiryDate = idExpiryDate;
  }


  public CustomerKycDetail idMethod(String idMethod) {
    
    this.idMethod = idMethod;
    return this;
  }

   /**
   * Authentication method selected by Customer during Electronic ID Verification.
   * @return idMethod
  **/
  @javax.annotation.Nullable
  public String getIdMethod() {
    return idMethod;
  }


  public void setIdMethod(String idMethod) {
    this.idMethod = idMethod;
  }


  public CustomerKycDetail idIssueAgency(String idIssueAgency) {
    
    this.idIssueAgency = idIssueAgency;
    return this;
  }

   /**
   * Customer&#39;s ID Issuing Agency.
   * @return idIssueAgency
  **/
  @javax.annotation.Nullable
  public String getIdIssueAgency() {
    return idIssueAgency;
  }


  public void setIdIssueAgency(String idIssueAgency) {
    this.idIssueAgency = idIssueAgency;
  }


  public CustomerKycDetail idIssuingCountry(String idIssuingCountry) {
    
    this.idIssuingCountry = idIssuingCountry;
    return this;
  }

   /**
   * Customer&#39;s ID Issuing Country. This field could be nullified by passing \&quot;NUL\&quot;.
   * @return idIssuingCountry
  **/
  @javax.annotation.Nullable
  public String getIdIssuingCountry() {
    return idIssuingCountry;
  }


  public void setIdIssuingCountry(String idIssuingCountry) {
    this.idIssuingCountry = idIssuingCountry;
  }


  public CustomerKycDetail idIssuingDate(LocalDate idIssuingDate) {
    
    this.idIssuingDate = idIssuingDate;
    return this;
  }

   /**
   * Date on which the Customer&#39;s ID was issued.
   * @return idIssuingDate
  **/
  @javax.annotation.Nullable
  public LocalDate getIdIssuingDate() {
    return idIssuingDate;
  }


  public void setIdIssuingDate(LocalDate idIssuingDate) {
    this.idIssuingDate = idIssuingDate;
  }


  public CustomerKycDetail idNumber(String idNumber) {
    
    this.idNumber = idNumber;
    return this;
  }

   /**
   * Customer&#39;s Id Number.
   * @return idNumber
  **/
  @javax.annotation.Nullable
  public String getIdNumber() {
    return idNumber;
  }


  public void setIdNumber(String idNumber) {
    this.idNumber = idNumber;
  }


  public CustomerKycDetail cardRefNumber(String cardRefNumber) {
    
    this.cardRefNumber = cardRefNumber;
    return this;
  }

   /**
   * Reference or Serial number printed on Customer&#39;s ID card.
   * @return cardRefNumber
  **/
  @javax.annotation.Nullable
  public String getCardRefNumber() {
    return cardRefNumber;
  }


  public void setCardRefNumber(String cardRefNumber) {
    this.cardRefNumber = cardRefNumber;
  }


  public CustomerKycDetail idType(String idType) {
    
    this.idType = idType;
    return this;
  }

   /**
   * Type of ID which is submitted by Customer. * Refer the Country &amp; Channel based CCDs for the ID_TYPE for storing ID Documents * ID_TYPE for storing DMS Reference Numbers for Document Images   * SI - Customer Selfie Image   * SV - Customer Selfie Video    * VI - Customer Document Capture Video    * VR - Customer Verification Reference PDF * ID_TYPE for storing Fourthline Vendor Response    * VENDOR_RESPONSE 
   * @return idType
  **/
  @javax.annotation.Nullable
  public String getIdType() {
    return idType;
  }


  public void setIdType(String idType) {
    this.idType = idType;
  }


  public CustomerKycDetail name(Name name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public Name getName() {
    return name;
  }


  public void setName(Name name) {
    this.name = name;
  }


  public CustomerKycDetail dob(LocalDate dob) {
    
    this.dob = dob;
    return this;
  }

   /**
   * Date Of Birth as per the Customer&#39;s ID.
   * @return dob
  **/
  @javax.annotation.Nullable
  public LocalDate getDob() {
    return dob;
  }


  public void setDob(LocalDate dob) {
    this.dob = dob;
  }


  public CustomerKycDetail streetAddress1(String streetAddress1) {
    
    this.streetAddress1 = streetAddress1;
    return this;
  }

   /**
   * Street Address 1 as per the Customer&#39;s ID.
   * @return streetAddress1
  **/
  @javax.annotation.Nullable
  public String getStreetAddress1() {
    return streetAddress1;
  }


  public void setStreetAddress1(String streetAddress1) {
    this.streetAddress1 = streetAddress1;
  }


  public CustomerKycDetail streetAddress2(String streetAddress2) {
    
    this.streetAddress2 = streetAddress2;
    return this;
  }

   /**
   * Street Address 2 as per the Customer&#39;s ID. This field could be nullified by passing \&quot;NUL\&quot;.
   * @return streetAddress2
  **/
  @javax.annotation.Nullable
  public String getStreetAddress2() {
    return streetAddress2;
  }


  public void setStreetAddress2(String streetAddress2) {
    this.streetAddress2 = streetAddress2;
  }


  public CustomerKycDetail streetAddress3(String streetAddress3) {
    
    this.streetAddress3 = streetAddress3;
    return this;
  }

   /**
   * Street Address 3 as per the Customer&#39;s ID. This field could be nullified by passing \&quot;NUL\&quot;.
   * @return streetAddress3
  **/
  @javax.annotation.Nullable
  public String getStreetAddress3() {
    return streetAddress3;
  }


  public void setStreetAddress3(String streetAddress3) {
    this.streetAddress3 = streetAddress3;
  }


  public CustomerKycDetail city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * City as per the Customer&#39;s ID.
   * @return city
  **/
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public CustomerKycDetail stateProvince(String stateProvince) {
    
    this.stateProvince = stateProvince;
    return this;
  }

   /**
   * State Province as per the Customer&#39;s ID.
   * @return stateProvince
  **/
  @javax.annotation.Nullable
  public String getStateProvince() {
    return stateProvince;
  }


  public void setStateProvince(String stateProvince) {
    this.stateProvince = stateProvince;
  }


  public CustomerKycDetail zipPostalCode(String zipPostalCode) {
    
    this.zipPostalCode = zipPostalCode;
    return this;
  }

   /**
   * Zip Postal Code as per the Customer&#39;s ID.
   * @return zipPostalCode
  **/
  @javax.annotation.Nullable
  public String getZipPostalCode() {
    return zipPostalCode;
  }


  public void setZipPostalCode(String zipPostalCode) {
    this.zipPostalCode = zipPostalCode;
  }


  public CustomerKycDetail countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Country Code as per the Customer&#39;s ID in ISO2 format.
   * @return countryCode
  **/
  @javax.annotation.Nullable
  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public CustomerKycDetail emailValue(String emailValue) {
    
    this.emailValue = emailValue;
    return this;
  }

   /**
   * Get emailValue
   * @return emailValue
  **/
  @javax.annotation.Nullable
  public String getEmailValue() {
    return emailValue;
  }


  public void setEmailValue(String emailValue) {
    this.emailValue = emailValue;
  }


  public CustomerKycDetail phoneNumber1(String phoneNumber1) {
    
    this.phoneNumber1 = phoneNumber1;
    return this;
  }

   /**
   * Customer&#39;s Mobile Phone Number.
   * @return phoneNumber1
  **/
  @javax.annotation.Nullable
  public String getPhoneNumber1() {
    return phoneNumber1;
  }


  public void setPhoneNumber1(String phoneNumber1) {
    this.phoneNumber1 = phoneNumber1;
  }


  public CustomerKycDetail phoneNumber2(String phoneNumber2) {
    
    this.phoneNumber2 = phoneNumber2;
    return this;
  }

   /**
   * Customer&#39;s Mobile Phone Number.
   * @return phoneNumber2
  **/
  @javax.annotation.Nullable
  public String getPhoneNumber2() {
    return phoneNumber2;
  }


  public void setPhoneNumber2(String phoneNumber2) {
    this.phoneNumber2 = phoneNumber2;
  }


  public CustomerKycDetail phoneNumber3(String phoneNumber3) {
    
    this.phoneNumber3 = phoneNumber3;
    return this;
  }

   /**
   * Customer&#39;s Secondary Phone Number.
   * @return phoneNumber3
  **/
  @javax.annotation.Nullable
  public String getPhoneNumber3() {
    return phoneNumber3;
  }


  public void setPhoneNumber3(String phoneNumber3) {
    this.phoneNumber3 = phoneNumber3;
  }


  public CustomerKycDetail phoneNumber4(String phoneNumber4) {
    
    this.phoneNumber4 = phoneNumber4;
    return this;
  }

   /**
   * Customer&#39;s Secondary Phone Number.
   * @return phoneNumber4
  **/
  @javax.annotation.Nullable
  public String getPhoneNumber4() {
    return phoneNumber4;
  }


  public void setPhoneNumber4(String phoneNumber4) {
    this.phoneNumber4 = phoneNumber4;
  }


  public CustomerKycDetail kycAddress(String kycAddress) {
    
    this.kycAddress = kycAddress;
    return this;
  }

   /**
   * OCR Address in the Address Proof submitted by the Customer.
   * @return kycAddress
  **/
  @javax.annotation.Nullable
  public String getKycAddress() {
    return kycAddress;
  }


  public void setKycAddress(String kycAddress) {
    this.kycAddress = kycAddress;
  }


  public CustomerKycDetail kycDob(LocalDate kycDob) {
    
    this.kycDob = kycDob;
    return this;
  }

   /**
   * OCR DOB in the Address Proof submitted by the Customer.
   * @return kycDob
  **/
  @javax.annotation.Nullable
  public LocalDate getKycDob() {
    return kycDob;
  }


  public void setKycDob(LocalDate kycDob) {
    this.kycDob = kycDob;
  }


  public CustomerKycDetail kycDobMatch(String kycDobMatch) {
    
    this.kycDobMatch = kycDobMatch;
    return this;
  }

   /**
   * If the KYC DOB matches with DOB provided by the Customer then Y else N.
   * @return kycDobMatch
  **/
  @javax.annotation.Nullable
  public String getKycDobMatch() {
    return kycDobMatch;
  }


  public void setKycDobMatch(String kycDobMatch) {
    this.kycDobMatch = kycDobMatch;
  }


  public CustomerKycDetail kycExpiryDate(LocalDate kycExpiryDate) {
    
    this.kycExpiryDate = kycExpiryDate;
    return this;
  }

   /**
   * OCR Expiry Date in the Address Proof submitted by the Customer.
   * @return kycExpiryDate
  **/
  @javax.annotation.Nullable
  public LocalDate getKycExpiryDate() {
    return kycExpiryDate;
  }


  public void setKycExpiryDate(LocalDate kycExpiryDate) {
    this.kycExpiryDate = kycExpiryDate;
  }


  public CustomerKycDetail kycExpiryDateMatch(String kycExpiryDateMatch) {
    
    this.kycExpiryDateMatch = kycExpiryDateMatch;
    return this;
  }

   /**
   * If the KYC Expiry Date matches with ID Expiry Date provided by the Customer then Y else N.
   * @return kycExpiryDateMatch
  **/
  @javax.annotation.Nullable
  public String getKycExpiryDateMatch() {
    return kycExpiryDateMatch;
  }


  public void setKycExpiryDateMatch(String kycExpiryDateMatch) {
    this.kycExpiryDateMatch = kycExpiryDateMatch;
  }


  public CustomerKycDetail kycIdCountry(String kycIdCountry) {
    
    this.kycIdCountry = kycIdCountry;
    return this;
  }

   /**
   * OCR Country in the Address Proof submitted by the Customer.
   * @return kycIdCountry
  **/
  @javax.annotation.Nullable
  public String getKycIdCountry() {
    return kycIdCountry;
  }


  public void setKycIdCountry(String kycIdCountry) {
    this.kycIdCountry = kycIdCountry;
  }


  public CustomerKycDetail kycIdCountryMatch(String kycIdCountryMatch) {
    
    this.kycIdCountryMatch = kycIdCountryMatch;
    return this;
  }

   /**
   * If the KYC ID Country matches with ID Country provided by the Customer then Y else N.
   * @return kycIdCountryMatch
  **/
  @javax.annotation.Nullable
  public String getKycIdCountryMatch() {
    return kycIdCountryMatch;
  }


  public void setKycIdCountryMatch(String kycIdCountryMatch) {
    this.kycIdCountryMatch = kycIdCountryMatch;
  }


  public CustomerKycDetail kycIdIssueDate(LocalDate kycIdIssueDate) {
    
    this.kycIdIssueDate = kycIdIssueDate;
    return this;
  }

   /**
   * OCR Issue Date in the Address Proof submitted by the Customer.
   * @return kycIdIssueDate
  **/
  @javax.annotation.Nullable
  public LocalDate getKycIdIssueDate() {
    return kycIdIssueDate;
  }


  public void setKycIdIssueDate(LocalDate kycIdIssueDate) {
    this.kycIdIssueDate = kycIdIssueDate;
  }


  public CustomerKycDetail kycIdIssueDateMatch(String kycIdIssueDateMatch) {
    
    this.kycIdIssueDateMatch = kycIdIssueDateMatch;
    return this;
  }

   /**
   * If the KYC ID Issue Date matches with ID Issue Date provided by the customer then Y else N.
   * @return kycIdIssueDateMatch
  **/
  @javax.annotation.Nullable
  public String getKycIdIssueDateMatch() {
    return kycIdIssueDateMatch;
  }


  public void setKycIdIssueDateMatch(String kycIdIssueDateMatch) {
    this.kycIdIssueDateMatch = kycIdIssueDateMatch;
  }


  public CustomerKycDetail kycIdNumber(String kycIdNumber) {
    
    this.kycIdNumber = kycIdNumber;
    return this;
  }

   /**
   * OCR ID Number in the Identity Proof submitted by the Customer.
   * @return kycIdNumber
  **/
  @javax.annotation.Nullable
  public String getKycIdNumber() {
    return kycIdNumber;
  }


  public void setKycIdNumber(String kycIdNumber) {
    this.kycIdNumber = kycIdNumber;
  }


  public CustomerKycDetail kycIdNumber2(String kycIdNumber2) {
    
    this.kycIdNumber2 = kycIdNumber2;
    return this;
  }

   /**
   * OCR Secondary ID Number in the Identity Proof submitted by the Customer.
   * @return kycIdNumber2
  **/
  @javax.annotation.Nullable
  public String getKycIdNumber2() {
    return kycIdNumber2;
  }


  public void setKycIdNumber2(String kycIdNumber2) {
    this.kycIdNumber2 = kycIdNumber2;
  }


  public CustomerKycDetail kycIdNumberMatch(String kycIdNumberMatch) {
    
    this.kycIdNumberMatch = kycIdNumberMatch;
    return this;
  }

   /**
   * If the KYC ID Number is matched with ID Number provided by the customer then Y else N.
   * @return kycIdNumberMatch
  **/
  @javax.annotation.Nullable
  public String getKycIdNumberMatch() {
    return kycIdNumberMatch;
  }


  public void setKycIdNumberMatch(String kycIdNumberMatch) {
    this.kycIdNumberMatch = kycIdNumberMatch;
  }


  public CustomerKycDetail kycIdState(String kycIdState) {
    
    this.kycIdState = kycIdState;
    return this;
  }

   /**
   * OCR State in the Address Proof submitted by the Customer.
   * @return kycIdState
  **/
  @javax.annotation.Nullable
  public String getKycIdState() {
    return kycIdState;
  }


  public void setKycIdState(String kycIdState) {
    this.kycIdState = kycIdState;
  }


  public CustomerKycDetail kycIdType(String kycIdType) {
    
    this.kycIdType = kycIdType;
    return this;
  }

   /**
   * Type of Identity Proof submitted by the Customer.
   * @return kycIdType
  **/
  @javax.annotation.Nullable
  public String getKycIdType() {
    return kycIdType;
  }


  public void setKycIdType(String kycIdType) {
    this.kycIdType = kycIdType;
  }


  public CustomerKycDetail kycIssuingAgency(String kycIssuingAgency) {
    
    this.kycIssuingAgency = kycIssuingAgency;
    return this;
  }

   /**
   * OCR Issuing Agency in the Address Proof submitted by the Customer.
   * @return kycIssuingAgency
  **/
  @javax.annotation.Nullable
  public String getKycIssuingAgency() {
    return kycIssuingAgency;
  }


  public void setKycIssuingAgency(String kycIssuingAgency) {
    this.kycIssuingAgency = kycIssuingAgency;
  }


  public CustomerKycDetail kycMrExists(String kycMrExists) {
    
    this.kycMrExists = kycMrExists;
    return this;
  }

   /**
   * OCR MR Exists flag.
   * @return kycMrExists
  **/
  @javax.annotation.Nullable
  public String getKycMrExists() {
    return kycMrExists;
  }


  public void setKycMrExists(String kycMrExists) {
    this.kycMrExists = kycMrExists;
  }


  public CustomerKycDetail kycName(String kycName) {
    
    this.kycName = kycName;
    return this;
  }

   /**
   * OCR First Name in the Address Proof submitted by the Customer.
   * @return kycName
  **/
  @javax.annotation.Nullable
  public String getKycName() {
    return kycName;
  }


  public void setKycName(String kycName) {
    this.kycName = kycName;
  }


  public CustomerKycDetail kycLastName(String kycLastName) {
    
    this.kycLastName = kycLastName;
    return this;
  }

   /**
   * OCR Last Name in the Address Proof submitted by the Customer.
   * @return kycLastName
  **/
  @javax.annotation.Nullable
  public String getKycLastName() {
    return kycLastName;
  }


  public void setKycLastName(String kycLastName) {
    this.kycLastName = kycLastName;
  }


  public CustomerKycDetail kycNameMatch(String kycNameMatch) {
    
    this.kycNameMatch = kycNameMatch;
    return this;
  }

   /**
   * If the KYC Name and KYC Last Name matches with First Name and Last Name provided by the customer then Y else N.
   * @return kycNameMatch
  **/
  @javax.annotation.Nullable
  public String getKycNameMatch() {
    return kycNameMatch;
  }


  public void setKycNameMatch(String kycNameMatch) {
    this.kycNameMatch = kycNameMatch;
  }


  public CustomerKycDetail kycValidateDate(OffsetDateTime kycValidateDate) {
    
    this.kycValidateDate = kycValidateDate;
    return this;
  }

   /**
   * OCR KYC Validated Date.
   * @return kycValidateDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getKycValidateDate() {
    return kycValidateDate;
  }


  public void setKycValidateDate(OffsetDateTime kycValidateDate) {
    this.kycValidateDate = kycValidateDate;
  }


  public CustomerKycDetail kycFormStatus(String kycFormStatus) {
    
    this.kycFormStatus = kycFormStatus;
    return this;
  }

   /**
   * Comma Separated Fourthline Response Codes.
   * @return kycFormStatus
  **/
  @javax.annotation.Nullable
  public String getKycFormStatus() {
    return kycFormStatus;
  }


  public void setKycFormStatus(String kycFormStatus) {
    this.kycFormStatus = kycFormStatus;
  }


  public CustomerKycDetail evData(String evData) {
    
    this.evData = evData;
    return this;
  }

   /**
   * APPLICABLE FOR VEDA AUSTRALIA / NZ.
   * @return evData
  **/
  @javax.annotation.Nullable
  public String getEvData() {
    return evData;
  }


  public void setEvData(String evData) {
    this.evData = evData;
  }


  public CustomerKycDetail xml(String xml) {
    
    this.xml = xml;
    return this;
  }

   /**
   * * APPLICABLE FOR VEDA AUSTRALIA / NZ. * For Fourthline Response - this could used to store additional information from Fourthline. 
   * @return xml
  **/
  @javax.annotation.Nullable
  public String getXml() {
    return xml;
  }


  public void setXml(String xml) {
    this.xml = xml;
  }


  public CustomerKycDetail xmlExtended(String xmlExtended) {
    
    this.xmlExtended = xmlExtended;
    return this;
  }

   /**
   * * APPLICABLE FOR VEDA AUSTRALIA / NZ. * For Fourthline Response - this could used to store additional information from Fourthline. 
   * @return xmlExtended
  **/
  @javax.annotation.Nullable
  public String getXmlExtended() {
    return xmlExtended;
  }


  public void setXmlExtended(String xmlExtended) {
    this.xmlExtended = xmlExtended;
  }


  public CustomerKycDetail info(String info) {
    
    this.info = info;
    return this;
  }

   /**
   * APPLICABLE FOR VEDA AUSTRALIA / NZ.
   * @return info
  **/
  @javax.annotation.Nullable
  public String getInfo() {
    return info;
  }


  public void setInfo(String info) {
    this.info = info;
  }


  public CustomerKycDetail noOfAttempts(Integer noOfAttempts) {
    
    this.noOfAttempts = noOfAttempts;
    return this;
  }

   /**
   * Number of Electronic ID Verification attempts when Customer Profile information doesn&#39;t match information submitted by Signicat (W0794).
   * @return noOfAttempts
  **/
  @javax.annotation.Nullable
  public Integer getNoOfAttempts() {
    return noOfAttempts;
  }


  public void setNoOfAttempts(Integer noOfAttempts) {
    this.noOfAttempts = noOfAttempts;
  }


  public CustomerKycDetail noOfAuthErrors(Integer noOfAuthErrors) {
    
    this.noOfAuthErrors = noOfAuthErrors;
    return this;
  }

   /**
   * Number of Authentication Errors.
   * @return noOfAuthErrors
  **/
  @javax.annotation.Nullable
  public Integer getNoOfAuthErrors() {
    return noOfAuthErrors;
  }


  public void setNoOfAuthErrors(Integer noOfAuthErrors) {
    this.noOfAuthErrors = noOfAuthErrors;
  }


  public CustomerKycDetail payeeUcb(String payeeUcb) {
    
    this.payeeUcb = payeeUcb;
    return this;
  }

   /**
   * Recevier&#39;s Universal Compliance Buffer.
   * @return payeeUcb
  **/
  @javax.annotation.Nullable
  public String getPayeeUcb() {
    return payeeUcb;
  }


  public void setPayeeUcb(String payeeUcb) {
    this.payeeUcb = payeeUcb;
  }


  public CustomerKycDetail senderUcb(String senderUcb) {
    
    this.senderUcb = senderUcb;
    return this;
  }

   /**
   * Sender&#39;s Universal Compliance Buffer.
   * @return senderUcb
  **/
  @javax.annotation.Nullable
  public String getSenderUcb() {
    return senderUcb;
  }


  public void setSenderUcb(String senderUcb) {
    this.senderUcb = senderUcb;
  }


  public CustomerKycDetail version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version.
   * @return version
  **/
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public CustomerKycDetail kycDetailsSeq(Long kycDetailsSeq) {
    
    this.kycDetailsSeq = kycDetailsSeq;
    return this;
  }

   /**
   * KYC Details Sequence * 1 - Primary ID * 2 - Secondary ID * 3 - Address Verification * 4 - Payment Verification Flag * 5 - Source of Funds Verification 
   * @return kycDetailsSeq
  **/
  @javax.annotation.Nullable
  public Long getKycDetailsSeq() {
    return kycDetailsSeq;
  }


  public void setKycDetailsSeq(Long kycDetailsSeq) {
    this.kycDetailsSeq = kycDetailsSeq;
  }


  public CustomerKycDetail mtcn(String mtcn) {
    
    this.mtcn = mtcn;
    return this;
  }

   /**
   * Money Transfer Control Number (MTCN) to check status of transfer and get transaction information.
   * @return mtcn
  **/
  @javax.annotation.Nullable
  public String getMtcn() {
    return mtcn;
  }


  public void setMtcn(String mtcn) {
    this.mtcn = mtcn;
  }


  public CustomerKycDetail transactionDate(OffsetDateTime transactionDate) {
    
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Timestamp when Transaction was done.
   * @return transactionDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getTransactionDate() {
    return transactionDate;
  }


  public void setTransactionDate(OffsetDateTime transactionDate) {
    this.transactionDate = transactionDate;
  }


  public CustomerKycDetail consent(String consent) {
    
    this.consent = consent;
    return this;
  }

   /**
   * Video Verification Consent.
   * @return consent
  **/
  @javax.annotation.Nullable
  public String getConsent() {
    return consent;
  }


  public void setConsent(String consent) {
    this.consent = consent;
  }


  public CustomerKycDetail kycGenderMatch(String kycGenderMatch) {
    
    this.kycGenderMatch = kycGenderMatch;
    return this;
  }

   /**
   * Video Verification Kyc Gender Match.
   * @return kycGenderMatch
  **/
  @javax.annotation.Nullable
  public String getKycGenderMatch() {
    return kycGenderMatch;
  }


  public void setKycGenderMatch(String kycGenderMatch) {
    this.kycGenderMatch = kycGenderMatch;
  }


  public CustomerKycDetail kycNationalityMatch(String kycNationalityMatch) {
    
    this.kycNationalityMatch = kycNationalityMatch;
    return this;
  }

   /**
   * Video Verification Nationality Match.
   * @return kycNationalityMatch
  **/
  @javax.annotation.Nullable
  public String getKycNationalityMatch() {
    return kycNationalityMatch;
  }


  public void setKycNationalityMatch(String kycNationalityMatch) {
    this.kycNationalityMatch = kycNationalityMatch;
  }


  public CustomerKycDetail kycFirstNameMatch(String kycFirstNameMatch) {
    
    this.kycFirstNameMatch = kycFirstNameMatch;
    return this;
  }

   /**
   * Video Verification First Name Match.
   * @return kycFirstNameMatch
  **/
  @javax.annotation.Nullable
  public String getKycFirstNameMatch() {
    return kycFirstNameMatch;
  }


  public void setKycFirstNameMatch(String kycFirstNameMatch) {
    this.kycFirstNameMatch = kycFirstNameMatch;
  }


  public CustomerKycDetail kycLastNameMatch(String kycLastNameMatch) {
    
    this.kycLastNameMatch = kycLastNameMatch;
    return this;
  }

   /**
   * Video Verification Last Name Match.
   * @return kycLastNameMatch
  **/
  @javax.annotation.Nullable
  public String getKycLastNameMatch() {
    return kycLastNameMatch;
  }


  public void setKycLastNameMatch(String kycLastNameMatch) {
    this.kycLastNameMatch = kycLastNameMatch;
  }


  public CustomerKycDetail kycMiddleNameMatch(String kycMiddleNameMatch) {
    
    this.kycMiddleNameMatch = kycMiddleNameMatch;
    return this;
  }

   /**
   * Video Verification Middle Name Match.
   * @return kycMiddleNameMatch
  **/
  @javax.annotation.Nullable
  public String getKycMiddleNameMatch() {
    return kycMiddleNameMatch;
  }


  public void setKycMiddleNameMatch(String kycMiddleNameMatch) {
    this.kycMiddleNameMatch = kycMiddleNameMatch;
  }


  public CustomerKycDetail rtaCardNumber(String rtaCardNumber) {
    
    this.rtaCardNumber = rtaCardNumber;
    return this;
  }

   /**
   * RTA Card Number for Driving License.
   * @return rtaCardNumber
  **/
  @javax.annotation.Nullable
  public String getRtaCardNumber() {
    return rtaCardNumber;
  }


  public void setRtaCardNumber(String rtaCardNumber) {
    this.rtaCardNumber = rtaCardNumber;
  }


  public CustomerKycDetail refNumber(String refNumber) {
    
    this.refNumber = refNumber;
    return this;
  }

   /**
   * Reference Number for Medicare Card.
   * @return refNumber
  **/
  @javax.annotation.Nullable
  public String getRefNumber() {
    return refNumber;
  }


  public void setRefNumber(String refNumber) {
    this.refNumber = refNumber;
  }


  public CustomerKycDetail placeOfBirth(String placeOfBirth) {
    
    this.placeOfBirth = placeOfBirth;
    return this;
  }

   /**
   * Place O fBirth for Passport.
   * @return placeOfBirth
  **/
  @javax.annotation.Nullable
  public String getPlaceOfBirth() {
    return placeOfBirth;
  }


  public void setPlaceOfBirth(String placeOfBirth) {
    this.placeOfBirth = placeOfBirth;
  }


  public CustomerKycDetail familyNameAtBirth(String familyNameAtBirth) {
    
    this.familyNameAtBirth = familyNameAtBirth;
    return this;
  }

   /**
   * Family Name At Birth for Passport.
   * @return familyNameAtBirth
  **/
  @javax.annotation.Nullable
  public String getFamilyNameAtBirth() {
    return familyNameAtBirth;
  }


  public void setFamilyNameAtBirth(String familyNameAtBirth) {
    this.familyNameAtBirth = familyNameAtBirth;
  }


  public CustomerKycDetail familyNameAtCitizenship(String familyNameAtCitizenship) {
    
    this.familyNameAtCitizenship = familyNameAtCitizenship;
    return this;
  }

   /**
   * Family Name At Citizenship for Passport.
   * @return familyNameAtCitizenship
  **/
  @javax.annotation.Nullable
  public String getFamilyNameAtCitizenship() {
    return familyNameAtCitizenship;
  }


  public void setFamilyNameAtCitizenship(String familyNameAtCitizenship) {
    this.familyNameAtCitizenship = familyNameAtCitizenship;
  }


  public CustomerKycDetail vendor(String vendor) {
    
    this.vendor = vendor;
    return this;
  }

   /**
   * Name of the Vendor who performed the actual verification.
   * @return vendor
  **/
  @javax.annotation.Nullable
  public String getVendor() {
    return vendor;
  }


  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  public CustomerKycDetail verificationSources(String verificationSources) {
    
    this.verificationSources = verificationSources;
    return this;
  }

   /**
   * Sources of the verification (e.g. Australian Electoral Commission, DunandBradstreet, Sensis Pty Ltd, White Pages etc).
   * @return verificationSources
  **/
  @javax.annotation.Nullable
  public String getVerificationSources() {
    return verificationSources;
  }


  public void setVerificationSources(String verificationSources) {
    this.verificationSources = verificationSources;
  }


  public CustomerKycDetail consentDate(OffsetDateTime consentDate) {
    
    this.consentDate = consentDate;
    return this;
  }

   /**
   * Timestamp when consent was provide for Selfie KYC.
   * @return consentDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getConsentDate() {
    return consentDate;
  }


  public void setConsentDate(OffsetDateTime consentDate) {
    this.consentDate = consentDate;
  }


  public CustomerKycDetail addressSearchJson(String addressSearchJson) {
    
    this.addressSearchJson = addressSearchJson;
    return this;
  }

   /**
   * Auto Search Address JSON. This field could be nullified by passing \&quot;NUL\&quot;.
   * @return addressSearchJson
  **/
  @javax.annotation.Nullable
  public String getAddressSearchJson() {
    return addressSearchJson;
  }


  public void setAddressSearchJson(String addressSearchJson) {
    this.addressSearchJson = addressSearchJson;
  }


  public CustomerKycDetail customerKycVendors(List<CustomerKycVendor> customerKycVendors) {
    
    this.customerKycVendors = customerKycVendors;
    return this;
  }

  public CustomerKycDetail addCustomerKycVendorsItem(CustomerKycVendor customerKycVendorsItem) {
    if (this.customerKycVendors == null) {
      this.customerKycVendors = new ArrayList<>();
    }
    this.customerKycVendors.add(customerKycVendorsItem);
    return this;
  }

   /**
   * Get customerKycVendors
   * @return customerKycVendors
  **/
  @javax.annotation.Nullable
  public List<CustomerKycVendor> getCustomerKycVendors() {
    return customerKycVendors;
  }


  public void setCustomerKycVendors(List<CustomerKycVendor> customerKycVendors) {
    this.customerKycVendors = customerKycVendors;
  }


  public CustomerKycDetail flagSubType(String flagSubType) {
    
    this.flagSubType = flagSubType;
    return this;
  }

   /**
   * Flag Sub Type.
   * @return flagSubType
  **/
  @javax.annotation.Nullable
  public String getFlagSubType() {
    return flagSubType;
  }


  public void setFlagSubType(String flagSubType) {
    this.flagSubType = flagSubType;
  }


  public CustomerKycDetail flagSubStatus(String flagSubStatus) {
    
    this.flagSubStatus = flagSubStatus;
    return this;
  }

   /**
   * Flag Sub Status.
   * @return flagSubStatus
  **/
  @javax.annotation.Nullable
  public String getFlagSubStatus() {
    return flagSubStatus;
  }


  public void setFlagSubStatus(String flagSubStatus) {
    this.flagSubStatus = flagSubStatus;
  }


  public CustomerKycDetail freebieCount(Integer freebieCount) {
    
    this.freebieCount = freebieCount;
    return this;
  }

   /**
   * Freebie Counts based on the Flags.
   * @return freebieCount
  **/
  @javax.annotation.Nullable
  public Integer getFreebieCount() {
    return freebieCount;
  }


  public void setFreebieCount(Integer freebieCount) {
    this.freebieCount = freebieCount;
  }


  public CustomerKycDetail kycIdTypeMatch(String kycIdTypeMatch) {
    
    this.kycIdTypeMatch = kycIdTypeMatch;
    return this;
  }

   /**
   * If the KYC ID Type matches with ID Type provided by the customer then Y else N.
   * @return kycIdTypeMatch
  **/
  @javax.annotation.Nullable
  public String getKycIdTypeMatch() {
    return kycIdTypeMatch;
  }


  public void setKycIdTypeMatch(String kycIdTypeMatch) {
    this.kycIdTypeMatch = kycIdTypeMatch;
  }


  public CustomerKycDetail docUploadSystem(String docUploadSystem) {
    
    this.docUploadSystem = docUploadSystem;
    return this;
  }

   /**
   * Application/System/End User which uploaded the document.
   * @return docUploadSystem
  **/
  @javax.annotation.Nullable
  public String getDocUploadSystem() {
    return docUploadSystem;
  }


  public void setDocUploadSystem(String docUploadSystem) {
    this.docUploadSystem = docUploadSystem;
  }


  public CustomerKycDetail wuIdTypeMatch(String wuIdTypeMatch) {
    
    this.wuIdTypeMatch = wuIdTypeMatch;
    return this;
  }

   /**
   * ID Type Match flag from WU (iWatch).
   * @return wuIdTypeMatch
  **/
  @javax.annotation.Nullable
  public String getWuIdTypeMatch() {
    return wuIdTypeMatch;
  }


  public void setWuIdTypeMatch(String wuIdTypeMatch) {
    this.wuIdTypeMatch = wuIdTypeMatch;
  }


  public CustomerKycDetail wuIdNumberMatch(String wuIdNumberMatch) {
    
    this.wuIdNumberMatch = wuIdNumberMatch;
    return this;
  }

   /**
   * ID Number Match flag from WU (iWatch).
   * @return wuIdNumberMatch
  **/
  @javax.annotation.Nullable
  public String getWuIdNumberMatch() {
    return wuIdNumberMatch;
  }


  public void setWuIdNumberMatch(String wuIdNumberMatch) {
    this.wuIdNumberMatch = wuIdNumberMatch;
  }


  public CustomerKycDetail wuIdCountryMatch(String wuIdCountryMatch) {
    
    this.wuIdCountryMatch = wuIdCountryMatch;
    return this;
  }

   /**
   * ID Country Match flag from WU (iWatch).
   * @return wuIdCountryMatch
  **/
  @javax.annotation.Nullable
  public String getWuIdCountryMatch() {
    return wuIdCountryMatch;
  }


  public void setWuIdCountryMatch(String wuIdCountryMatch) {
    this.wuIdCountryMatch = wuIdCountryMatch;
  }


  public CustomerKycDetail wuDobMatch(String wuDobMatch) {
    
    this.wuDobMatch = wuDobMatch;
    return this;
  }

   /**
   * DOB Match flag from WU (iWatch).
   * @return wuDobMatch
  **/
  @javax.annotation.Nullable
  public String getWuDobMatch() {
    return wuDobMatch;
  }


  public void setWuDobMatch(String wuDobMatch) {
    this.wuDobMatch = wuDobMatch;
  }


  public CustomerKycDetail wuNameMatch(String wuNameMatch) {
    
    this.wuNameMatch = wuNameMatch;
    return this;
  }

   /**
   * Name Match flag from WU (iWatch).
   * @return wuNameMatch
  **/
  @javax.annotation.Nullable
  public String getWuNameMatch() {
    return wuNameMatch;
  }


  public void setWuNameMatch(String wuNameMatch) {
    this.wuNameMatch = wuNameMatch;
  }


  public CustomerKycDetail wuExpiryDateMatch(String wuExpiryDateMatch) {
    
    this.wuExpiryDateMatch = wuExpiryDateMatch;
    return this;
  }

   /**
   * ID Expiry Date flag from WU (iWatch).
   * @return wuExpiryDateMatch
  **/
  @javax.annotation.Nullable
  public String getWuExpiryDateMatch() {
    return wuExpiryDateMatch;
  }


  public void setWuExpiryDateMatch(String wuExpiryDateMatch) {
    this.wuExpiryDateMatch = wuExpiryDateMatch;
  }


  public CustomerKycDetail wuIdIssueDateMatch(String wuIdIssueDateMatch) {
    
    this.wuIdIssueDateMatch = wuIdIssueDateMatch;
    return this;
  }

   /**
   * ID Issue Date Match flag from WU (iWatch).
   * @return wuIdIssueDateMatch
  **/
  @javax.annotation.Nullable
  public String getWuIdIssueDateMatch() {
    return wuIdIssueDateMatch;
  }


  public void setWuIdIssueDateMatch(String wuIdIssueDateMatch) {
    this.wuIdIssueDateMatch = wuIdIssueDateMatch;
  }


  public CustomerKycDetail dvsFlag(String dvsFlag) {
    
    this.dvsFlag = dvsFlag;
    return this;
  }

   /**
   * DVS Flag Status.
   * @return dvsFlag
  **/
  @javax.annotation.Nullable
  public String getDvsFlag() {
    return dvsFlag;
  }


  public void setDvsFlag(String dvsFlag) {
    this.dvsFlag = dvsFlag;
  }


  public CustomerKycDetail dvsCounter(Integer dvsCounter) {
    
    this.dvsCounter = dvsCounter;
    return this;
  }

   /**
   * DVS Flag Counter.
   * @return dvsCounter
  **/
  @javax.annotation.Nullable
  public Integer getDvsCounter() {
    return dvsCounter;
  }


  public void setDvsCounter(Integer dvsCounter) {
    this.dvsCounter = dvsCounter;
  }


  public CustomerKycDetail docClassCode(String docClassCode) {
    
    this.docClassCode = docClassCode;
    return this;
  }

   /**
   * Document Class Code.
   * @return docClassCode
  **/
  @javax.annotation.Nullable
  public String getDocClassCode() {
    return docClassCode;
  }


  public void setDocClassCode(String docClassCode) {
    this.docClassCode = docClassCode;
  }


  public CustomerKycDetail idIssuingAuthority(String idIssuingAuthority) {
    
    this.idIssuingAuthority = idIssuingAuthority;
    return this;
  }

   /**
   * Customer&#39;s ID Issuing Authority.
   * @return idIssuingAuthority
  **/
  @javax.annotation.Nullable
  public String getIdIssuingAuthority() {
    return idIssuingAuthority;
  }


  public void setIdIssuingAuthority(String idIssuingAuthority) {
    this.idIssuingAuthority = idIssuingAuthority;
  }


  public CustomerKycDetail countryCodeIso3(String countryCodeIso3) {
    
    this.countryCodeIso3 = countryCodeIso3;
    return this;
  }

   /**
   * Country Code as per the Customer&#39;s ID in ISO3 format.
   * @return countryCodeIso3
  **/
  @javax.annotation.Nullable
  public String getCountryCodeIso3() {
    return countryCodeIso3;
  }


  public void setCountryCodeIso3(String countryCodeIso3) {
    this.countryCodeIso3 = countryCodeIso3;
  }


  public CustomerKycDetail verificationReference(String verificationReference) {
    
    this.verificationReference = verificationReference;
    return this;
  }

   /**
   * Verification Reference. This field could be nullified by passing \&quot;NUL\&quot;.
   * @return verificationReference
  **/
  @javax.annotation.Nullable
  public String getVerificationReference() {
    return verificationReference;
  }


  public void setVerificationReference(String verificationReference) {
    this.verificationReference = verificationReference;
  }


  public CustomerKycDetail agentAccountNumber(String agentAccountNumber) {
    
    this.agentAccountNumber = agentAccountNumber;
    return this;
  }

   /**
   * Agent Account Number.
   * @return agentAccountNumber
  **/
  @javax.annotation.Nullable
  public String getAgentAccountNumber() {
    return agentAccountNumber;
  }


  public void setAgentAccountNumber(String agentAccountNumber) {
    this.agentAccountNumber = agentAccountNumber;
  }


  public CustomerKycDetail customerTier(Integer customerTier) {
    
    this.customerTier = customerTier;
    return this;
  }

   /**
   * Customer&#39;s KYC TIer.
   * @return customerTier
  **/
  @javax.annotation.Nullable
  public Integer getCustomerTier() {
    return customerTier;
  }


  public void setCustomerTier(Integer customerTier) {
    this.customerTier = customerTier;
  }


  public CustomerKycDetail customerTierUpdatedDate(OffsetDateTime customerTierUpdatedDate) {
    
    this.customerTierUpdatedDate = customerTierUpdatedDate;
    return this;
  }

   /**
   * Timestamp when customer kyc tier is added/updated.
   * @return customerTierUpdatedDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCustomerTierUpdatedDate() {
    return customerTierUpdatedDate;
  }


  public void setCustomerTierUpdatedDate(OffsetDateTime customerTierUpdatedDate) {
    this.customerTierUpdatedDate = customerTierUpdatedDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerKycDetail customerKycDetail = (CustomerKycDetail) o;
    return Objects.equals(this.pcpNumber, customerKycDetail.pcpNumber) &&
        Objects.equals(this.channelType, customerKycDetail.channelType) &&
        Objects.equals(this.kycRecType, customerKycDetail.kycRecType) &&
        Objects.equals(this.active, customerKycDetail.active) &&
        Objects.equals(this.displayFlag, customerKycDetail.displayFlag) &&
        Objects.equals(this.docRefNum, customerKycDetail.docRefNum) &&
        Objects.equals(this.docUpdateDate, customerKycDetail.docUpdateDate) &&
        Objects.equals(this.docRefNum2, customerKycDetail.docRefNum2) &&
        Objects.equals(this.docUpdateDate2, customerKycDetail.docUpdateDate2) &&
        Objects.equals(this.docRefNum3, customerKycDetail.docRefNum3) &&
        Objects.equals(this.docUpdateDate3, customerKycDetail.docUpdateDate3) &&
        Objects.equals(this.faceDetectedFlag, customerKycDetail.faceDetectedFlag) &&
        Objects.equals(this.idvvStatus, customerKycDetail.idvvStatus) &&
        Objects.equals(this.idvvStatusDate, customerKycDetail.idvvStatusDate) &&
        Objects.equals(this.idExpiryDate, customerKycDetail.idExpiryDate) &&
        Objects.equals(this.idMethod, customerKycDetail.idMethod) &&
        Objects.equals(this.idIssueAgency, customerKycDetail.idIssueAgency) &&
        Objects.equals(this.idIssuingCountry, customerKycDetail.idIssuingCountry) &&
        Objects.equals(this.idIssuingDate, customerKycDetail.idIssuingDate) &&
        Objects.equals(this.idNumber, customerKycDetail.idNumber) &&
        Objects.equals(this.cardRefNumber, customerKycDetail.cardRefNumber) &&
        Objects.equals(this.idType, customerKycDetail.idType) &&
        Objects.equals(this.name, customerKycDetail.name) &&
        Objects.equals(this.dob, customerKycDetail.dob) &&
        Objects.equals(this.streetAddress1, customerKycDetail.streetAddress1) &&
        Objects.equals(this.streetAddress2, customerKycDetail.streetAddress2) &&
        Objects.equals(this.streetAddress3, customerKycDetail.streetAddress3) &&
        Objects.equals(this.city, customerKycDetail.city) &&
        Objects.equals(this.stateProvince, customerKycDetail.stateProvince) &&
        Objects.equals(this.zipPostalCode, customerKycDetail.zipPostalCode) &&
        Objects.equals(this.countryCode, customerKycDetail.countryCode) &&
        Objects.equals(this.emailValue, customerKycDetail.emailValue) &&
        Objects.equals(this.phoneNumber1, customerKycDetail.phoneNumber1) &&
        Objects.equals(this.phoneNumber2, customerKycDetail.phoneNumber2) &&
        Objects.equals(this.phoneNumber3, customerKycDetail.phoneNumber3) &&
        Objects.equals(this.phoneNumber4, customerKycDetail.phoneNumber4) &&
        Objects.equals(this.kycAddress, customerKycDetail.kycAddress) &&
        Objects.equals(this.kycDob, customerKycDetail.kycDob) &&
        Objects.equals(this.kycDobMatch, customerKycDetail.kycDobMatch) &&
        Objects.equals(this.kycExpiryDate, customerKycDetail.kycExpiryDate) &&
        Objects.equals(this.kycExpiryDateMatch, customerKycDetail.kycExpiryDateMatch) &&
        Objects.equals(this.kycIdCountry, customerKycDetail.kycIdCountry) &&
        Objects.equals(this.kycIdCountryMatch, customerKycDetail.kycIdCountryMatch) &&
        Objects.equals(this.kycIdIssueDate, customerKycDetail.kycIdIssueDate) &&
        Objects.equals(this.kycIdIssueDateMatch, customerKycDetail.kycIdIssueDateMatch) &&
        Objects.equals(this.kycIdNumber, customerKycDetail.kycIdNumber) &&
        Objects.equals(this.kycIdNumber2, customerKycDetail.kycIdNumber2) &&
        Objects.equals(this.kycIdNumberMatch, customerKycDetail.kycIdNumberMatch) &&
        Objects.equals(this.kycIdState, customerKycDetail.kycIdState) &&
        Objects.equals(this.kycIdType, customerKycDetail.kycIdType) &&
        Objects.equals(this.kycIssuingAgency, customerKycDetail.kycIssuingAgency) &&
        Objects.equals(this.kycMrExists, customerKycDetail.kycMrExists) &&
        Objects.equals(this.kycName, customerKycDetail.kycName) &&
        Objects.equals(this.kycLastName, customerKycDetail.kycLastName) &&
        Objects.equals(this.kycNameMatch, customerKycDetail.kycNameMatch) &&
        Objects.equals(this.kycValidateDate, customerKycDetail.kycValidateDate) &&
        Objects.equals(this.kycFormStatus, customerKycDetail.kycFormStatus) &&
        Objects.equals(this.evData, customerKycDetail.evData) &&
        Objects.equals(this.xml, customerKycDetail.xml) &&
        Objects.equals(this.xmlExtended, customerKycDetail.xmlExtended) &&
        Objects.equals(this.info, customerKycDetail.info) &&
        Objects.equals(this.noOfAttempts, customerKycDetail.noOfAttempts) &&
        Objects.equals(this.noOfAuthErrors, customerKycDetail.noOfAuthErrors) &&
        Objects.equals(this.payeeUcb, customerKycDetail.payeeUcb) &&
        Objects.equals(this.senderUcb, customerKycDetail.senderUcb) &&
        Objects.equals(this.version, customerKycDetail.version) &&
        Objects.equals(this.kycDetailsSeq, customerKycDetail.kycDetailsSeq) &&
        Objects.equals(this.mtcn, customerKycDetail.mtcn) &&
        Objects.equals(this.transactionDate, customerKycDetail.transactionDate) &&
        Objects.equals(this.consent, customerKycDetail.consent) &&
        Objects.equals(this.kycGenderMatch, customerKycDetail.kycGenderMatch) &&
        Objects.equals(this.kycNationalityMatch, customerKycDetail.kycNationalityMatch) &&
        Objects.equals(this.kycFirstNameMatch, customerKycDetail.kycFirstNameMatch) &&
        Objects.equals(this.kycLastNameMatch, customerKycDetail.kycLastNameMatch) &&
        Objects.equals(this.kycMiddleNameMatch, customerKycDetail.kycMiddleNameMatch) &&
        Objects.equals(this.rtaCardNumber, customerKycDetail.rtaCardNumber) &&
        Objects.equals(this.refNumber, customerKycDetail.refNumber) &&
        Objects.equals(this.placeOfBirth, customerKycDetail.placeOfBirth) &&
        Objects.equals(this.familyNameAtBirth, customerKycDetail.familyNameAtBirth) &&
        Objects.equals(this.familyNameAtCitizenship, customerKycDetail.familyNameAtCitizenship) &&
        Objects.equals(this.vendor, customerKycDetail.vendor) &&
        Objects.equals(this.verificationSources, customerKycDetail.verificationSources) &&
        Objects.equals(this.consentDate, customerKycDetail.consentDate) &&
        Objects.equals(this.addressSearchJson, customerKycDetail.addressSearchJson) &&
        Objects.equals(this.customerKycVendors, customerKycDetail.customerKycVendors) &&
        Objects.equals(this.flagSubType, customerKycDetail.flagSubType) &&
        Objects.equals(this.flagSubStatus, customerKycDetail.flagSubStatus) &&
        Objects.equals(this.freebieCount, customerKycDetail.freebieCount) &&
        Objects.equals(this.kycIdTypeMatch, customerKycDetail.kycIdTypeMatch) &&
        Objects.equals(this.docUploadSystem, customerKycDetail.docUploadSystem) &&
        Objects.equals(this.wuIdTypeMatch, customerKycDetail.wuIdTypeMatch) &&
        Objects.equals(this.wuIdNumberMatch, customerKycDetail.wuIdNumberMatch) &&
        Objects.equals(this.wuIdCountryMatch, customerKycDetail.wuIdCountryMatch) &&
        Objects.equals(this.wuDobMatch, customerKycDetail.wuDobMatch) &&
        Objects.equals(this.wuNameMatch, customerKycDetail.wuNameMatch) &&
        Objects.equals(this.wuExpiryDateMatch, customerKycDetail.wuExpiryDateMatch) &&
        Objects.equals(this.wuIdIssueDateMatch, customerKycDetail.wuIdIssueDateMatch) &&
        Objects.equals(this.dvsFlag, customerKycDetail.dvsFlag) &&
        Objects.equals(this.dvsCounter, customerKycDetail.dvsCounter) &&
        Objects.equals(this.docClassCode, customerKycDetail.docClassCode) &&
        Objects.equals(this.idIssuingAuthority, customerKycDetail.idIssuingAuthority) &&
        Objects.equals(this.countryCodeIso3, customerKycDetail.countryCodeIso3) &&
        Objects.equals(this.verificationReference, customerKycDetail.verificationReference) &&
        Objects.equals(this.agentAccountNumber, customerKycDetail.agentAccountNumber) &&
        Objects.equals(this.customerTier, customerKycDetail.customerTier) &&
        Objects.equals(this.customerTierUpdatedDate, customerKycDetail.customerTierUpdatedDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pcpNumber, channelType, kycRecType, active, displayFlag, docRefNum, docUpdateDate, docRefNum2, docUpdateDate2, docRefNum3, docUpdateDate3, faceDetectedFlag, idvvStatus, idvvStatusDate, idExpiryDate, idMethod, idIssueAgency, idIssuingCountry, idIssuingDate, idNumber, cardRefNumber, idType, name, dob, streetAddress1, streetAddress2, streetAddress3, city, stateProvince, zipPostalCode, countryCode, emailValue, phoneNumber1, phoneNumber2, phoneNumber3, phoneNumber4, kycAddress, kycDob, kycDobMatch, kycExpiryDate, kycExpiryDateMatch, kycIdCountry, kycIdCountryMatch, kycIdIssueDate, kycIdIssueDateMatch, kycIdNumber, kycIdNumber2, kycIdNumberMatch, kycIdState, kycIdType, kycIssuingAgency, kycMrExists, kycName, kycLastName, kycNameMatch, kycValidateDate, kycFormStatus, evData, xml, xmlExtended, info, noOfAttempts, noOfAuthErrors, payeeUcb, senderUcb, version, kycDetailsSeq, mtcn, transactionDate, consent, kycGenderMatch, kycNationalityMatch, kycFirstNameMatch, kycLastNameMatch, kycMiddleNameMatch, rtaCardNumber, refNumber, placeOfBirth, familyNameAtBirth, familyNameAtCitizenship, vendor, verificationSources, consentDate, addressSearchJson, customerKycVendors, flagSubType, flagSubStatus, freebieCount, kycIdTypeMatch, docUploadSystem, wuIdTypeMatch, wuIdNumberMatch, wuIdCountryMatch, wuDobMatch, wuNameMatch, wuExpiryDateMatch, wuIdIssueDateMatch, dvsFlag, dvsCounter, docClassCode, idIssuingAuthority, countryCodeIso3, verificationReference, agentAccountNumber, customerTier, customerTierUpdatedDate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerKycDetail {\n");
    sb.append("    pcpNumber: ").append(toIndentedString(pcpNumber)).append("\n");
    sb.append("    channelType: ").append(toIndentedString(channelType)).append("\n");
    sb.append("    kycRecType: ").append(toIndentedString(kycRecType)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    displayFlag: ").append(toIndentedString(displayFlag)).append("\n");
    sb.append("    docRefNum: ").append(toIndentedString(docRefNum)).append("\n");
    sb.append("    docUpdateDate: ").append(toIndentedString(docUpdateDate)).append("\n");
    sb.append("    docRefNum2: ").append(toIndentedString(docRefNum2)).append("\n");
    sb.append("    docUpdateDate2: ").append(toIndentedString(docUpdateDate2)).append("\n");
    sb.append("    docRefNum3: ").append(toIndentedString(docRefNum3)).append("\n");
    sb.append("    docUpdateDate3: ").append(toIndentedString(docUpdateDate3)).append("\n");
    sb.append("    faceDetectedFlag: ").append(toIndentedString(faceDetectedFlag)).append("\n");
    sb.append("    idvvStatus: ").append(toIndentedString(idvvStatus)).append("\n");
    sb.append("    idvvStatusDate: ").append(toIndentedString(idvvStatusDate)).append("\n");
    sb.append("    idExpiryDate: ").append(toIndentedString(idExpiryDate)).append("\n");
    sb.append("    idMethod: ").append(toIndentedString(idMethod)).append("\n");
    sb.append("    idIssueAgency: ").append(toIndentedString(idIssueAgency)).append("\n");
    sb.append("    idIssuingCountry: ").append(toIndentedString(idIssuingCountry)).append("\n");
    sb.append("    idIssuingDate: ").append(toIndentedString(idIssuingDate)).append("\n");
    sb.append("    idNumber: ").append(toIndentedString(idNumber)).append("\n");
    sb.append("    cardRefNumber: ").append(toIndentedString(cardRefNumber)).append("\n");
    sb.append("    idType: ").append(toIndentedString(idType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    streetAddress1: ").append(toIndentedString(streetAddress1)).append("\n");
    sb.append("    streetAddress2: ").append(toIndentedString(streetAddress2)).append("\n");
    sb.append("    streetAddress3: ").append(toIndentedString(streetAddress3)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    stateProvince: ").append(toIndentedString(stateProvince)).append("\n");
    sb.append("    zipPostalCode: ").append(toIndentedString(zipPostalCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    emailValue: ").append(toIndentedString(emailValue)).append("\n");
    sb.append("    phoneNumber1: ").append(toIndentedString(phoneNumber1)).append("\n");
    sb.append("    phoneNumber2: ").append(toIndentedString(phoneNumber2)).append("\n");
    sb.append("    phoneNumber3: ").append(toIndentedString(phoneNumber3)).append("\n");
    sb.append("    phoneNumber4: ").append(toIndentedString(phoneNumber4)).append("\n");
    sb.append("    kycAddress: ").append(toIndentedString(kycAddress)).append("\n");
    sb.append("    kycDob: ").append(toIndentedString(kycDob)).append("\n");
    sb.append("    kycDobMatch: ").append(toIndentedString(kycDobMatch)).append("\n");
    sb.append("    kycExpiryDate: ").append(toIndentedString(kycExpiryDate)).append("\n");
    sb.append("    kycExpiryDateMatch: ").append(toIndentedString(kycExpiryDateMatch)).append("\n");
    sb.append("    kycIdCountry: ").append(toIndentedString(kycIdCountry)).append("\n");
    sb.append("    kycIdCountryMatch: ").append(toIndentedString(kycIdCountryMatch)).append("\n");
    sb.append("    kycIdIssueDate: ").append(toIndentedString(kycIdIssueDate)).append("\n");
    sb.append("    kycIdIssueDateMatch: ").append(toIndentedString(kycIdIssueDateMatch)).append("\n");
    sb.append("    kycIdNumber: ").append(toIndentedString(kycIdNumber)).append("\n");
    sb.append("    kycIdNumber2: ").append(toIndentedString(kycIdNumber2)).append("\n");
    sb.append("    kycIdNumberMatch: ").append(toIndentedString(kycIdNumberMatch)).append("\n");
    sb.append("    kycIdState: ").append(toIndentedString(kycIdState)).append("\n");
    sb.append("    kycIdType: ").append(toIndentedString(kycIdType)).append("\n");
    sb.append("    kycIssuingAgency: ").append(toIndentedString(kycIssuingAgency)).append("\n");
    sb.append("    kycMrExists: ").append(toIndentedString(kycMrExists)).append("\n");
    sb.append("    kycName: ").append(toIndentedString(kycName)).append("\n");
    sb.append("    kycLastName: ").append(toIndentedString(kycLastName)).append("\n");
    sb.append("    kycNameMatch: ").append(toIndentedString(kycNameMatch)).append("\n");
    sb.append("    kycValidateDate: ").append(toIndentedString(kycValidateDate)).append("\n");
    sb.append("    kycFormStatus: ").append(toIndentedString(kycFormStatus)).append("\n");
    sb.append("    evData: ").append(toIndentedString(evData)).append("\n");
    sb.append("    xml: ").append(toIndentedString(xml)).append("\n");
    sb.append("    xmlExtended: ").append(toIndentedString(xmlExtended)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    noOfAttempts: ").append(toIndentedString(noOfAttempts)).append("\n");
    sb.append("    noOfAuthErrors: ").append(toIndentedString(noOfAuthErrors)).append("\n");
    sb.append("    payeeUcb: ").append(toIndentedString(payeeUcb)).append("\n");
    sb.append("    senderUcb: ").append(toIndentedString(senderUcb)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    kycDetailsSeq: ").append(toIndentedString(kycDetailsSeq)).append("\n");
    sb.append("    mtcn: ").append(toIndentedString(mtcn)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    consent: ").append(toIndentedString(consent)).append("\n");
    sb.append("    kycGenderMatch: ").append(toIndentedString(kycGenderMatch)).append("\n");
    sb.append("    kycNationalityMatch: ").append(toIndentedString(kycNationalityMatch)).append("\n");
    sb.append("    kycFirstNameMatch: ").append(toIndentedString(kycFirstNameMatch)).append("\n");
    sb.append("    kycLastNameMatch: ").append(toIndentedString(kycLastNameMatch)).append("\n");
    sb.append("    kycMiddleNameMatch: ").append(toIndentedString(kycMiddleNameMatch)).append("\n");
    sb.append("    rtaCardNumber: ").append(toIndentedString(rtaCardNumber)).append("\n");
    sb.append("    refNumber: ").append(toIndentedString(refNumber)).append("\n");
    sb.append("    placeOfBirth: ").append(toIndentedString(placeOfBirth)).append("\n");
    sb.append("    familyNameAtBirth: ").append(toIndentedString(familyNameAtBirth)).append("\n");
    sb.append("    familyNameAtCitizenship: ").append(toIndentedString(familyNameAtCitizenship)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    verificationSources: ").append(toIndentedString(verificationSources)).append("\n");
    sb.append("    consentDate: ").append(toIndentedString(consentDate)).append("\n");
    sb.append("    addressSearchJson: ").append(toIndentedString(addressSearchJson)).append("\n");
    sb.append("    customerKycVendors: ").append(toIndentedString(customerKycVendors)).append("\n");
    sb.append("    flagSubType: ").append(toIndentedString(flagSubType)).append("\n");
    sb.append("    flagSubStatus: ").append(toIndentedString(flagSubStatus)).append("\n");
    sb.append("    freebieCount: ").append(toIndentedString(freebieCount)).append("\n");
    sb.append("    kycIdTypeMatch: ").append(toIndentedString(kycIdTypeMatch)).append("\n");
    sb.append("    docUploadSystem: ").append(toIndentedString(docUploadSystem)).append("\n");
    sb.append("    wuIdTypeMatch: ").append(toIndentedString(wuIdTypeMatch)).append("\n");
    sb.append("    wuIdNumberMatch: ").append(toIndentedString(wuIdNumberMatch)).append("\n");
    sb.append("    wuIdCountryMatch: ").append(toIndentedString(wuIdCountryMatch)).append("\n");
    sb.append("    wuDobMatch: ").append(toIndentedString(wuDobMatch)).append("\n");
    sb.append("    wuNameMatch: ").append(toIndentedString(wuNameMatch)).append("\n");
    sb.append("    wuExpiryDateMatch: ").append(toIndentedString(wuExpiryDateMatch)).append("\n");
    sb.append("    wuIdIssueDateMatch: ").append(toIndentedString(wuIdIssueDateMatch)).append("\n");
    sb.append("    dvsFlag: ").append(toIndentedString(dvsFlag)).append("\n");
    sb.append("    dvsCounter: ").append(toIndentedString(dvsCounter)).append("\n");
    sb.append("    docClassCode: ").append(toIndentedString(docClassCode)).append("\n");
    sb.append("    idIssuingAuthority: ").append(toIndentedString(idIssuingAuthority)).append("\n");
    sb.append("    countryCodeIso3: ").append(toIndentedString(countryCodeIso3)).append("\n");
    sb.append("    verificationReference: ").append(toIndentedString(verificationReference)).append("\n");
    sb.append("    agentAccountNumber: ").append(toIndentedString(agentAccountNumber)).append("\n");
    sb.append("    customerTier: ").append(toIndentedString(customerTier)).append("\n");
    sb.append("    customerTierUpdatedDate: ").append(toIndentedString(customerTierUpdatedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pcpNumber");
    openapiFields.add("channelType");
    openapiFields.add("kycRecType");
    openapiFields.add("active");
    openapiFields.add("displayFlag");
    openapiFields.add("docRefNum");
    openapiFields.add("docUpdateDate");
    openapiFields.add("docRefNum2");
    openapiFields.add("docUpdateDate2");
    openapiFields.add("docRefNum3");
    openapiFields.add("docUpdateDate3");
    openapiFields.add("faceDetectedFlag");
    openapiFields.add("idvvStatus");
    openapiFields.add("idvvStatusDate");
    openapiFields.add("idExpiryDate");
    openapiFields.add("idMethod");
    openapiFields.add("idIssueAgency");
    openapiFields.add("idIssuingCountry");
    openapiFields.add("idIssuingDate");
    openapiFields.add("idNumber");
    openapiFields.add("cardRefNumber");
    openapiFields.add("idType");
    openapiFields.add("name");
    openapiFields.add("dob");
    openapiFields.add("streetAddress1");
    openapiFields.add("streetAddress2");
    openapiFields.add("streetAddress3");
    openapiFields.add("city");
    openapiFields.add("stateProvince");
    openapiFields.add("zipPostalCode");
    openapiFields.add("countryCode");
    openapiFields.add("emailValue");
    openapiFields.add("phoneNumber1");
    openapiFields.add("phoneNumber2");
    openapiFields.add("phoneNumber3");
    openapiFields.add("phoneNumber4");
    openapiFields.add("kycAddress");
    openapiFields.add("kycDob");
    openapiFields.add("kycDobMatch");
    openapiFields.add("kycExpiryDate");
    openapiFields.add("kycExpiryDateMatch");
    openapiFields.add("kycIdCountry");
    openapiFields.add("kycIdCountryMatch");
    openapiFields.add("kycIdIssueDate");
    openapiFields.add("kycIdIssueDateMatch");
    openapiFields.add("kycIdNumber");
    openapiFields.add("kycIdNumber2");
    openapiFields.add("kycIdNumberMatch");
    openapiFields.add("kycIdState");
    openapiFields.add("kycIdType");
    openapiFields.add("kycIssuingAgency");
    openapiFields.add("kycMrExists");
    openapiFields.add("kycName");
    openapiFields.add("kycLastName");
    openapiFields.add("kycNameMatch");
    openapiFields.add("kycValidateDate");
    openapiFields.add("kycFormStatus");
    openapiFields.add("evData");
    openapiFields.add("xml");
    openapiFields.add("xmlExtended");
    openapiFields.add("info");
    openapiFields.add("noOfAttempts");
    openapiFields.add("noOfAuthErrors");
    openapiFields.add("payeeUcb");
    openapiFields.add("senderUcb");
    openapiFields.add("version");
    openapiFields.add("kycDetailsSeq");
    openapiFields.add("mtcn");
    openapiFields.add("transactionDate");
    openapiFields.add("consent");
    openapiFields.add("kycGenderMatch");
    openapiFields.add("kycNationalityMatch");
    openapiFields.add("kycFirstNameMatch");
    openapiFields.add("kycLastNameMatch");
    openapiFields.add("kycMiddleNameMatch");
    openapiFields.add("rtaCardNumber");
    openapiFields.add("refNumber");
    openapiFields.add("placeOfBirth");
    openapiFields.add("familyNameAtBirth");
    openapiFields.add("familyNameAtCitizenship");
    openapiFields.add("vendor");
    openapiFields.add("verificationSources");
    openapiFields.add("consentDate");
    openapiFields.add("addressSearchJson");
    openapiFields.add("customerKycVendors");
    openapiFields.add("flagSubType");
    openapiFields.add("flagSubStatus");
    openapiFields.add("freebieCount");
    openapiFields.add("kycIdTypeMatch");
    openapiFields.add("docUploadSystem");
    openapiFields.add("wuIdTypeMatch");
    openapiFields.add("wuIdNumberMatch");
    openapiFields.add("wuIdCountryMatch");
    openapiFields.add("wuDobMatch");
    openapiFields.add("wuNameMatch");
    openapiFields.add("wuExpiryDateMatch");
    openapiFields.add("wuIdIssueDateMatch");
    openapiFields.add("dvsFlag");
    openapiFields.add("dvsCounter");
    openapiFields.add("docClassCode");
    openapiFields.add("idIssuingAuthority");
    openapiFields.add("countryCodeIso3");
    openapiFields.add("verificationReference");
    openapiFields.add("agentAccountNumber");
    openapiFields.add("customerTier");
    openapiFields.add("customerTierUpdatedDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pcpNumber");
    openapiRequiredFields.add("channelType");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerKycDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerKycDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerKycDetail is not found in the empty JSON string", CustomerKycDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerKycDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerKycDetail` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomerKycDetail.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("pcpNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pcpNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pcpNumber").toString()));
      }
      if ((jsonObj.get("kycRecType") != null && !jsonObj.get("kycRecType").isJsonNull()) && !jsonObj.get("kycRecType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycRecType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycRecType").toString()));
      }
      if ((jsonObj.get("active") != null && !jsonObj.get("active").isJsonNull()) && !jsonObj.get("active").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `active` to be a primitive type in the JSON string but got `%s`", jsonObj.get("active").toString()));
      }
      if ((jsonObj.get("displayFlag") != null && !jsonObj.get("displayFlag").isJsonNull()) && !jsonObj.get("displayFlag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayFlag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayFlag").toString()));
      }
      if ((jsonObj.get("docRefNum") != null && !jsonObj.get("docRefNum").isJsonNull()) && !jsonObj.get("docRefNum").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docRefNum` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docRefNum").toString()));
      }
      if ((jsonObj.get("docRefNum2") != null && !jsonObj.get("docRefNum2").isJsonNull()) && !jsonObj.get("docRefNum2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docRefNum2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docRefNum2").toString()));
      }
      if ((jsonObj.get("docRefNum3") != null && !jsonObj.get("docRefNum3").isJsonNull()) && !jsonObj.get("docRefNum3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docRefNum3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docRefNum3").toString()));
      }
      if ((jsonObj.get("faceDetectedFlag") != null && !jsonObj.get("faceDetectedFlag").isJsonNull()) && !jsonObj.get("faceDetectedFlag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `faceDetectedFlag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("faceDetectedFlag").toString()));
      }
      if ((jsonObj.get("idvvStatus") != null && !jsonObj.get("idvvStatus").isJsonNull()) && !jsonObj.get("idvvStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idvvStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idvvStatus").toString()));
      }
      if ((jsonObj.get("idMethod") != null && !jsonObj.get("idMethod").isJsonNull()) && !jsonObj.get("idMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idMethod").toString()));
      }
      if ((jsonObj.get("idIssueAgency") != null && !jsonObj.get("idIssueAgency").isJsonNull()) && !jsonObj.get("idIssueAgency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idIssueAgency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idIssueAgency").toString()));
      }
      if ((jsonObj.get("idIssuingCountry") != null && !jsonObj.get("idIssuingCountry").isJsonNull()) && !jsonObj.get("idIssuingCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idIssuingCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idIssuingCountry").toString()));
      }
      if ((jsonObj.get("idNumber") != null && !jsonObj.get("idNumber").isJsonNull()) && !jsonObj.get("idNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idNumber").toString()));
      }
      if ((jsonObj.get("cardRefNumber") != null && !jsonObj.get("cardRefNumber").isJsonNull()) && !jsonObj.get("cardRefNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardRefNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardRefNumber").toString()));
      }
      if ((jsonObj.get("idType") != null && !jsonObj.get("idType").isJsonNull()) && !jsonObj.get("idType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idType").toString()));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        Name.validateJsonObject(jsonObj.getAsJsonObject("name"));
      }
      if ((jsonObj.get("streetAddress1") != null && !jsonObj.get("streetAddress1").isJsonNull()) && !jsonObj.get("streetAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetAddress1").toString()));
      }
      if ((jsonObj.get("streetAddress2") != null && !jsonObj.get("streetAddress2").isJsonNull()) && !jsonObj.get("streetAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetAddress2").toString()));
      }
      if ((jsonObj.get("streetAddress3") != null && !jsonObj.get("streetAddress3").isJsonNull()) && !jsonObj.get("streetAddress3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetAddress3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetAddress3").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("stateProvince") != null && !jsonObj.get("stateProvince").isJsonNull()) && !jsonObj.get("stateProvince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateProvince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateProvince").toString()));
      }
      if ((jsonObj.get("zipPostalCode") != null && !jsonObj.get("zipPostalCode").isJsonNull()) && !jsonObj.get("zipPostalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zipPostalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zipPostalCode").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("emailValue") != null && !jsonObj.get("emailValue").isJsonNull()) && !jsonObj.get("emailValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailValue").toString()));
      }
      if ((jsonObj.get("phoneNumber1") != null && !jsonObj.get("phoneNumber1").isJsonNull()) && !jsonObj.get("phoneNumber1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber1").toString()));
      }
      if ((jsonObj.get("phoneNumber2") != null && !jsonObj.get("phoneNumber2").isJsonNull()) && !jsonObj.get("phoneNumber2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber2").toString()));
      }
      if ((jsonObj.get("phoneNumber3") != null && !jsonObj.get("phoneNumber3").isJsonNull()) && !jsonObj.get("phoneNumber3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber3").toString()));
      }
      if ((jsonObj.get("phoneNumber4") != null && !jsonObj.get("phoneNumber4").isJsonNull()) && !jsonObj.get("phoneNumber4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber4").toString()));
      }
      if ((jsonObj.get("kycAddress") != null && !jsonObj.get("kycAddress").isJsonNull()) && !jsonObj.get("kycAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycAddress").toString()));
      }
      if ((jsonObj.get("kycDobMatch") != null && !jsonObj.get("kycDobMatch").isJsonNull()) && !jsonObj.get("kycDobMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycDobMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycDobMatch").toString()));
      }
      if ((jsonObj.get("kycExpiryDateMatch") != null && !jsonObj.get("kycExpiryDateMatch").isJsonNull()) && !jsonObj.get("kycExpiryDateMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycExpiryDateMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycExpiryDateMatch").toString()));
      }
      if ((jsonObj.get("kycIdCountry") != null && !jsonObj.get("kycIdCountry").isJsonNull()) && !jsonObj.get("kycIdCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdCountry").toString()));
      }
      if ((jsonObj.get("kycIdCountryMatch") != null && !jsonObj.get("kycIdCountryMatch").isJsonNull()) && !jsonObj.get("kycIdCountryMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdCountryMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdCountryMatch").toString()));
      }
      if ((jsonObj.get("kycIdIssueDateMatch") != null && !jsonObj.get("kycIdIssueDateMatch").isJsonNull()) && !jsonObj.get("kycIdIssueDateMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdIssueDateMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdIssueDateMatch").toString()));
      }
      if ((jsonObj.get("kycIdNumber") != null && !jsonObj.get("kycIdNumber").isJsonNull()) && !jsonObj.get("kycIdNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdNumber").toString()));
      }
      if ((jsonObj.get("kycIdNumber2") != null && !jsonObj.get("kycIdNumber2").isJsonNull()) && !jsonObj.get("kycIdNumber2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdNumber2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdNumber2").toString()));
      }
      if ((jsonObj.get("kycIdNumberMatch") != null && !jsonObj.get("kycIdNumberMatch").isJsonNull()) && !jsonObj.get("kycIdNumberMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdNumberMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdNumberMatch").toString()));
      }
      if ((jsonObj.get("kycIdState") != null && !jsonObj.get("kycIdState").isJsonNull()) && !jsonObj.get("kycIdState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdState").toString()));
      }
      if ((jsonObj.get("kycIdType") != null && !jsonObj.get("kycIdType").isJsonNull()) && !jsonObj.get("kycIdType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdType").toString()));
      }
      if ((jsonObj.get("kycIssuingAgency") != null && !jsonObj.get("kycIssuingAgency").isJsonNull()) && !jsonObj.get("kycIssuingAgency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIssuingAgency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIssuingAgency").toString()));
      }
      if ((jsonObj.get("kycMrExists") != null && !jsonObj.get("kycMrExists").isJsonNull()) && !jsonObj.get("kycMrExists").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycMrExists` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycMrExists").toString()));
      }
      if ((jsonObj.get("kycName") != null && !jsonObj.get("kycName").isJsonNull()) && !jsonObj.get("kycName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycName").toString()));
      }
      if ((jsonObj.get("kycLastName") != null && !jsonObj.get("kycLastName").isJsonNull()) && !jsonObj.get("kycLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycLastName").toString()));
      }
      if ((jsonObj.get("kycNameMatch") != null && !jsonObj.get("kycNameMatch").isJsonNull()) && !jsonObj.get("kycNameMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycNameMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycNameMatch").toString()));
      }
      if ((jsonObj.get("kycFormStatus") != null && !jsonObj.get("kycFormStatus").isJsonNull()) && !jsonObj.get("kycFormStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycFormStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycFormStatus").toString()));
      }
      if ((jsonObj.get("evData") != null && !jsonObj.get("evData").isJsonNull()) && !jsonObj.get("evData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `evData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("evData").toString()));
      }
      if ((jsonObj.get("xml") != null && !jsonObj.get("xml").isJsonNull()) && !jsonObj.get("xml").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xml` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xml").toString()));
      }
      if ((jsonObj.get("xmlExtended") != null && !jsonObj.get("xmlExtended").isJsonNull()) && !jsonObj.get("xmlExtended").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xmlExtended` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xmlExtended").toString()));
      }
      if ((jsonObj.get("info") != null && !jsonObj.get("info").isJsonNull()) && !jsonObj.get("info").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `info` to be a primitive type in the JSON string but got `%s`", jsonObj.get("info").toString()));
      }
      if ((jsonObj.get("payeeUcb") != null && !jsonObj.get("payeeUcb").isJsonNull()) && !jsonObj.get("payeeUcb").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payeeUcb` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payeeUcb").toString()));
      }
      if ((jsonObj.get("senderUcb") != null && !jsonObj.get("senderUcb").isJsonNull()) && !jsonObj.get("senderUcb").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senderUcb` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senderUcb").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if ((jsonObj.get("mtcn") != null && !jsonObj.get("mtcn").isJsonNull()) && !jsonObj.get("mtcn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mtcn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mtcn").toString()));
      }
      if ((jsonObj.get("consent") != null && !jsonObj.get("consent").isJsonNull()) && !jsonObj.get("consent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `consent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("consent").toString()));
      }
      if ((jsonObj.get("kycGenderMatch") != null && !jsonObj.get("kycGenderMatch").isJsonNull()) && !jsonObj.get("kycGenderMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycGenderMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycGenderMatch").toString()));
      }
      if ((jsonObj.get("kycNationalityMatch") != null && !jsonObj.get("kycNationalityMatch").isJsonNull()) && !jsonObj.get("kycNationalityMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycNationalityMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycNationalityMatch").toString()));
      }
      if ((jsonObj.get("kycFirstNameMatch") != null && !jsonObj.get("kycFirstNameMatch").isJsonNull()) && !jsonObj.get("kycFirstNameMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycFirstNameMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycFirstNameMatch").toString()));
      }
      if ((jsonObj.get("kycLastNameMatch") != null && !jsonObj.get("kycLastNameMatch").isJsonNull()) && !jsonObj.get("kycLastNameMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycLastNameMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycLastNameMatch").toString()));
      }
      if ((jsonObj.get("kycMiddleNameMatch") != null && !jsonObj.get("kycMiddleNameMatch").isJsonNull()) && !jsonObj.get("kycMiddleNameMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycMiddleNameMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycMiddleNameMatch").toString()));
      }
      if ((jsonObj.get("rtaCardNumber") != null && !jsonObj.get("rtaCardNumber").isJsonNull()) && !jsonObj.get("rtaCardNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rtaCardNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rtaCardNumber").toString()));
      }
      if ((jsonObj.get("refNumber") != null && !jsonObj.get("refNumber").isJsonNull()) && !jsonObj.get("refNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refNumber").toString()));
      }
      if ((jsonObj.get("placeOfBirth") != null && !jsonObj.get("placeOfBirth").isJsonNull()) && !jsonObj.get("placeOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placeOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placeOfBirth").toString()));
      }
      if ((jsonObj.get("familyNameAtBirth") != null && !jsonObj.get("familyNameAtBirth").isJsonNull()) && !jsonObj.get("familyNameAtBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `familyNameAtBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("familyNameAtBirth").toString()));
      }
      if ((jsonObj.get("familyNameAtCitizenship") != null && !jsonObj.get("familyNameAtCitizenship").isJsonNull()) && !jsonObj.get("familyNameAtCitizenship").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `familyNameAtCitizenship` to be a primitive type in the JSON string but got `%s`", jsonObj.get("familyNameAtCitizenship").toString()));
      }
      if ((jsonObj.get("vendor") != null && !jsonObj.get("vendor").isJsonNull()) && !jsonObj.get("vendor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor").toString()));
      }
      if ((jsonObj.get("verificationSources") != null && !jsonObj.get("verificationSources").isJsonNull()) && !jsonObj.get("verificationSources").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verificationSources` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verificationSources").toString()));
      }
      if ((jsonObj.get("addressSearchJson") != null && !jsonObj.get("addressSearchJson").isJsonNull()) && !jsonObj.get("addressSearchJson").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressSearchJson` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressSearchJson").toString()));
      }
      if (jsonObj.get("customerKycVendors") != null && !jsonObj.get("customerKycVendors").isJsonNull()) {
        JsonArray jsonArraycustomerKycVendors = jsonObj.getAsJsonArray("customerKycVendors");
        if (jsonArraycustomerKycVendors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerKycVendors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerKycVendors` to be an array in the JSON string but got `%s`", jsonObj.get("customerKycVendors").toString()));
          }

          // validate the optional field `customerKycVendors` (array)
          for (int i = 0; i < jsonArraycustomerKycVendors.size(); i++) {
            CustomerKycVendor.validateJsonObject(jsonArraycustomerKycVendors.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("flagSubType") != null && !jsonObj.get("flagSubType").isJsonNull()) && !jsonObj.get("flagSubType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flagSubType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flagSubType").toString()));
      }
      if ((jsonObj.get("flagSubStatus") != null && !jsonObj.get("flagSubStatus").isJsonNull()) && !jsonObj.get("flagSubStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flagSubStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flagSubStatus").toString()));
      }
      if ((jsonObj.get("kycIdTypeMatch") != null && !jsonObj.get("kycIdTypeMatch").isJsonNull()) && !jsonObj.get("kycIdTypeMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kycIdTypeMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kycIdTypeMatch").toString()));
      }
      if ((jsonObj.get("docUploadSystem") != null && !jsonObj.get("docUploadSystem").isJsonNull()) && !jsonObj.get("docUploadSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docUploadSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docUploadSystem").toString()));
      }
      if ((jsonObj.get("wuIdTypeMatch") != null && !jsonObj.get("wuIdTypeMatch").isJsonNull()) && !jsonObj.get("wuIdTypeMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wuIdTypeMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wuIdTypeMatch").toString()));
      }
      if ((jsonObj.get("wuIdNumberMatch") != null && !jsonObj.get("wuIdNumberMatch").isJsonNull()) && !jsonObj.get("wuIdNumberMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wuIdNumberMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wuIdNumberMatch").toString()));
      }
      if ((jsonObj.get("wuIdCountryMatch") != null && !jsonObj.get("wuIdCountryMatch").isJsonNull()) && !jsonObj.get("wuIdCountryMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wuIdCountryMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wuIdCountryMatch").toString()));
      }
      if ((jsonObj.get("wuDobMatch") != null && !jsonObj.get("wuDobMatch").isJsonNull()) && !jsonObj.get("wuDobMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wuDobMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wuDobMatch").toString()));
      }
      if ((jsonObj.get("wuNameMatch") != null && !jsonObj.get("wuNameMatch").isJsonNull()) && !jsonObj.get("wuNameMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wuNameMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wuNameMatch").toString()));
      }
      if ((jsonObj.get("wuExpiryDateMatch") != null && !jsonObj.get("wuExpiryDateMatch").isJsonNull()) && !jsonObj.get("wuExpiryDateMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wuExpiryDateMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wuExpiryDateMatch").toString()));
      }
      if ((jsonObj.get("wuIdIssueDateMatch") != null && !jsonObj.get("wuIdIssueDateMatch").isJsonNull()) && !jsonObj.get("wuIdIssueDateMatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wuIdIssueDateMatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wuIdIssueDateMatch").toString()));
      }
      if ((jsonObj.get("dvsFlag") != null && !jsonObj.get("dvsFlag").isJsonNull()) && !jsonObj.get("dvsFlag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dvsFlag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dvsFlag").toString()));
      }
      if ((jsonObj.get("docClassCode") != null && !jsonObj.get("docClassCode").isJsonNull()) && !jsonObj.get("docClassCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docClassCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docClassCode").toString()));
      }
      if ((jsonObj.get("idIssuingAuthority") != null && !jsonObj.get("idIssuingAuthority").isJsonNull()) && !jsonObj.get("idIssuingAuthority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idIssuingAuthority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idIssuingAuthority").toString()));
      }
      if ((jsonObj.get("countryCodeIso3") != null && !jsonObj.get("countryCodeIso3").isJsonNull()) && !jsonObj.get("countryCodeIso3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCodeIso3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCodeIso3").toString()));
      }
      if ((jsonObj.get("verificationReference") != null && !jsonObj.get("verificationReference").isJsonNull()) && !jsonObj.get("verificationReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verificationReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verificationReference").toString()));
      }
      if ((jsonObj.get("agentAccountNumber") != null && !jsonObj.get("agentAccountNumber").isJsonNull()) && !jsonObj.get("agentAccountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agentAccountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agentAccountNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerKycDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerKycDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerKycDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerKycDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerKycDetail>() {
           @Override
           public void write(JsonWriter out, CustomerKycDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerKycDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerKycDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerKycDetail
  * @throws IOException if the JSON string is invalid with respect to CustomerKycDetail
  */
  public static CustomerKycDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerKycDetail.class);
  }

 /**
  * Convert an instance of CustomerKycDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

