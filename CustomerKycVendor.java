/*
 * ucd_clkup_v1_api
 * Swagger documentation for UCD Customer Lookup Service API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.customerlookup;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

/**
 * The schema element for Customer Kyc Vendor details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T20:02:06.369160100+05:30[Asia/Calcutta]")
public class CustomerKycVendor {
  public static final String SERIALIZED_NAME_VENDOR_SEQ = "vendorSeq";
  @SerializedName(SERIALIZED_NAME_VENDOR_SEQ)
  private Integer vendorSeq;

  public static final String SERIALIZED_NAME_VENDOR = "vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private String vendor;

  public static final String SERIALIZED_NAME_VERIFICATION_SOURCES = "verificationSources";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_SOURCES)
  private String verificationSources;

  public static final String SERIALIZED_NAME_REF_NUMBER = "refNumber";
  @SerializedName(SERIALIZED_NAME_REF_NUMBER)
  private String refNumber;

  public static final String SERIALIZED_NAME_SOURCE_ACCOUNT_NUMBER = "sourceAccountNumber";
  @SerializedName(SERIALIZED_NAME_SOURCE_ACCOUNT_NUMBER)
  private String sourceAccountNumber;

  public static final String SERIALIZED_NAME_VENDOR_VERIFICATION_DATE = "vendorVerificationDate";
  @SerializedName(SERIALIZED_NAME_VENDOR_VERIFICATION_DATE)
  private OffsetDateTime vendorVerificationDate;

  public static final String SERIALIZED_NAME_OCR_REF_NUMBER = "ocrRefNumber";
  @SerializedName(SERIALIZED_NAME_OCR_REF_NUMBER)
  private String ocrRefNumber;

  public CustomerKycVendor() {
  }

  public CustomerKycVendor vendorSeq(Integer vendorSeq) {
    
    this.vendorSeq = vendorSeq;
    return this;
  }

   /**
   * Vendor Sequence - Sequential Number within ID details.
   * @return vendorSeq
  **/
  @javax.annotation.Nonnull
  public Integer getVendorSeq() {
    return vendorSeq;
  }


  public void setVendorSeq(Integer vendorSeq) {
    this.vendorSeq = vendorSeq;
  }


  public CustomerKycVendor vendor(String vendor) {
    
    this.vendor = vendor;
    return this;
  }

   /**
   * Name of the Vendor who performed the actual verification.
   * @return vendor
  **/
  @javax.annotation.Nonnull
  public String getVendor() {
    return vendor;
  }


  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  public CustomerKycVendor verificationSources(String verificationSources) {
    
    this.verificationSources = verificationSources;
    return this;
  }

   /**
   * Sources of the verification (e.g. Australian Electoral Commission, DunandBradstreet, Sensis Pty Ltd, White Pages etc).
   * @return verificationSources
  **/
  @javax.annotation.Nullable
  public String getVerificationSources() {
    return verificationSources;
  }


  public void setVerificationSources(String verificationSources) {
    this.verificationSources = verificationSources;
  }


  public CustomerKycVendor refNumber(String refNumber) {
    
    this.refNumber = refNumber;
    return this;
  }

   /**
   * Reference Number for Vendor Verification.
   * @return refNumber
  **/
  @javax.annotation.Nullable
  public String getRefNumber() {
    return refNumber;
  }


  public void setRefNumber(String refNumber) {
    this.refNumber = refNumber;
  }


  public CustomerKycVendor sourceAccountNumber(String sourceAccountNumber) {
    
    this.sourceAccountNumber = sourceAccountNumber;
    return this;
  }

   /**
   * Account Number provided by Blaze.
   * @return sourceAccountNumber
  **/
  @javax.annotation.Nullable
  public String getSourceAccountNumber() {
    return sourceAccountNumber;
  }


  public void setSourceAccountNumber(String sourceAccountNumber) {
    this.sourceAccountNumber = sourceAccountNumber;
  }


  public CustomerKycVendor vendorVerificationDate(OffsetDateTime vendorVerificationDate) {
    
    this.vendorVerificationDate = vendorVerificationDate;
    return this;
  }

   /**
   * Verification Date of the KYC details by Vendor.
   * @return vendorVerificationDate
  **/
  @javax.annotation.Nonnull
  public OffsetDateTime getVendorVerificationDate() {
    return vendorVerificationDate;
  }


  public void setVendorVerificationDate(OffsetDateTime vendorVerificationDate) {
    this.vendorVerificationDate = vendorVerificationDate;
  }


  public CustomerKycVendor ocrRefNumber(String ocrRefNumber) {
    
    this.ocrRefNumber = ocrRefNumber;
    return this;
  }

   /**
   * Auto Fill ID for Vendor Verification.
   * @return ocrRefNumber
  **/
  @javax.annotation.Nullable
  public String getOcrRefNumber() {
    return ocrRefNumber;
  }


  public void setOcrRefNumber(String ocrRefNumber) {
    this.ocrRefNumber = ocrRefNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerKycVendor customerKycVendor = (CustomerKycVendor) o;
    return Objects.equals(this.vendorSeq, customerKycVendor.vendorSeq) &&
        Objects.equals(this.vendor, customerKycVendor.vendor) &&
        Objects.equals(this.verificationSources, customerKycVendor.verificationSources) &&
        Objects.equals(this.refNumber, customerKycVendor.refNumber) &&
        Objects.equals(this.sourceAccountNumber, customerKycVendor.sourceAccountNumber) &&
        Objects.equals(this.vendorVerificationDate, customerKycVendor.vendorVerificationDate) &&
        Objects.equals(this.ocrRefNumber, customerKycVendor.ocrRefNumber);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(vendorSeq, vendor, verificationSources, refNumber, sourceAccountNumber, vendorVerificationDate, ocrRefNumber);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerKycVendor {\n");
    sb.append("    vendorSeq: ").append(toIndentedString(vendorSeq)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    verificationSources: ").append(toIndentedString(verificationSources)).append("\n");
    sb.append("    refNumber: ").append(toIndentedString(refNumber)).append("\n");
    sb.append("    sourceAccountNumber: ").append(toIndentedString(sourceAccountNumber)).append("\n");
    sb.append("    vendorVerificationDate: ").append(toIndentedString(vendorVerificationDate)).append("\n");
    sb.append("    ocrRefNumber: ").append(toIndentedString(ocrRefNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("vendorSeq");
    openapiFields.add("vendor");
    openapiFields.add("verificationSources");
    openapiFields.add("refNumber");
    openapiFields.add("sourceAccountNumber");
    openapiFields.add("vendorVerificationDate");
    openapiFields.add("ocrRefNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("vendorSeq");
    openapiRequiredFields.add("vendor");
    openapiRequiredFields.add("vendorVerificationDate");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerKycVendor
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerKycVendor.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerKycVendor is not found in the empty JSON string", CustomerKycVendor.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerKycVendor.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerKycVendor` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomerKycVendor.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("vendor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor").toString()));
      }
      if ((jsonObj.get("verificationSources") != null && !jsonObj.get("verificationSources").isJsonNull()) && !jsonObj.get("verificationSources").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verificationSources` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verificationSources").toString()));
      }
      if ((jsonObj.get("refNumber") != null && !jsonObj.get("refNumber").isJsonNull()) && !jsonObj.get("refNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refNumber").toString()));
      }
      if ((jsonObj.get("sourceAccountNumber") != null && !jsonObj.get("sourceAccountNumber").isJsonNull()) && !jsonObj.get("sourceAccountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceAccountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceAccountNumber").toString()));
      }
      if ((jsonObj.get("ocrRefNumber") != null && !jsonObj.get("ocrRefNumber").isJsonNull()) && !jsonObj.get("ocrRefNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ocrRefNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ocrRefNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerKycVendor.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerKycVendor' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerKycVendor> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerKycVendor.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerKycVendor>() {
           @Override
           public void write(JsonWriter out, CustomerKycVendor value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerKycVendor read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerKycVendor given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerKycVendor
  * @throws IOException if the JSON string is invalid with respect to CustomerKycVendor
  */
  public static CustomerKycVendor fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerKycVendor.class);
  }

 /**
  * Convert an instance of CustomerKycVendor to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

