/*
 * ucd_pmgmt_v1_api
 * Swagger documentation for UCD Profile Management Service API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.CustomerKey;
import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.Header;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.wu.brwallet.customer.profile.model.common.ucd.profilemanagement.JSON;

/**
 * This is the request model for DeactivateReceiver service. This is to Deactivate Receiver of a customer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T21:22:09.739306500+05:30[Asia/Calcutta]")
public class DeactivateReceiverRequest {
  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private Header header;

  public static final String SERIALIZED_NAME_CUSTOMER_KEY = "customerKey";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_KEY)
  private CustomerKey customerKey;

  public static final String SERIALIZED_NAME_RECEIVER_SEQ = "receiverSeq";
  @SerializedName(SERIALIZED_NAME_RECEIVER_SEQ)
  private Long receiverSeq;

  public static final String SERIALIZED_NAME_RECEIVER_NO = "receiverNo";
  @SerializedName(SERIALIZED_NAME_RECEIVER_NO)
  private Integer receiverNo;

  public static final String SERIALIZED_NAME_RECEIVER_UNIQUE_REF = "receiverUniqueRef";
  @SerializedName(SERIALIZED_NAME_RECEIVER_UNIQUE_REF)
  private String receiverUniqueRef;

  public static final String SERIALIZED_NAME_RETAIN_RECEIVER_SEQ = "retainReceiverSeq";
  @SerializedName(SERIALIZED_NAME_RETAIN_RECEIVER_SEQ)
  private Long retainReceiverSeq;

  public static final String SERIALIZED_NAME_RETAIN_RECEIVER_NO = "retainReceiverNo";
  @SerializedName(SERIALIZED_NAME_RETAIN_RECEIVER_NO)
  private Integer retainReceiverNo;

  public static final String SERIALIZED_NAME_RETAIN_RECEIVER_UNIQUE_REF = "retainReceiverUniqueRef";
  @SerializedName(SERIALIZED_NAME_RETAIN_RECEIVER_UNIQUE_REF)
  private String retainReceiverUniqueRef;

  public static final String SERIALIZED_NAME_DELETION_MODE = "deletionMode";
  @SerializedName(SERIALIZED_NAME_DELETION_MODE)
  private String deletionMode;

  public static final String SERIALIZED_NAME_IS_TRNL_REQ_FLAG = "isTrnlReqFlag";
  @SerializedName(SERIALIZED_NAME_IS_TRNL_REQ_FLAG)
  private Boolean isTrnlReqFlag;

  public static final String SERIALIZED_NAME_REQUEST_INITIATED_BY = "requestInitiatedBy";
  @SerializedName(SERIALIZED_NAME_REQUEST_INITIATED_BY)
  private String requestInitiatedBy;

  public DeactivateReceiverRequest() {
  }

  public DeactivateReceiverRequest header(Header header) {
    
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nonnull
  public Header getHeader() {
    return header;
  }


  public void setHeader(Header header) {
    this.header = header;
  }


  public DeactivateReceiverRequest customerKey(CustomerKey customerKey) {
    
    this.customerKey = customerKey;
    return this;
  }

   /**
   * Get customerKey
   * @return customerKey
  **/
  @javax.annotation.Nonnull
  public CustomerKey getCustomerKey() {
    return customerKey;
  }


  public void setCustomerKey(CustomerKey customerKey) {
    this.customerKey = customerKey;
  }


  public DeactivateReceiverRequest receiverSeq(Long receiverSeq) {
    
    this.receiverSeq = receiverSeq;
    return this;
  }

   /**
   * Sequence number of the Receiver.
   * @return receiverSeq
  **/
  @javax.annotation.Nullable
  public Long getReceiverSeq() {
    return receiverSeq;
  }


  public void setReceiverSeq(Long receiverSeq) {
    this.receiverSeq = receiverSeq;
  }


  public DeactivateReceiverRequest receiverNo(Integer receiverNo) {
    
    this.receiverNo = receiverNo;
    return this;
  }

   /**
   * Serial number of the Receiver.
   * @return receiverNo
  **/
  @javax.annotation.Nullable
  public Integer getReceiverNo() {
    return receiverNo;
  }


  public void setReceiverNo(Integer receiverNo) {
    this.receiverNo = receiverNo;
  }


  public DeactivateReceiverRequest receiverUniqueRef(String receiverUniqueRef) {
    
    this.receiverUniqueRef = receiverUniqueRef;
    return this;
  }

   /**
   * Receiver Unique Reference Number.
   * @return receiverUniqueRef
  **/
  @javax.annotation.Nullable
  public String getReceiverUniqueRef() {
    return receiverUniqueRef;
  }


  public void setReceiverUniqueRef(String receiverUniqueRef) {
    this.receiverUniqueRef = receiverUniqueRef;
  }


  public DeactivateReceiverRequest retainReceiverSeq(Long retainReceiverSeq) {
    
    this.retainReceiverSeq = retainReceiverSeq;
    return this;
  }

   /**
   * Sequence number of the receiver to be retained.
   * @return retainReceiverSeq
  **/
  @javax.annotation.Nullable
  public Long getRetainReceiverSeq() {
    return retainReceiverSeq;
  }


  public void setRetainReceiverSeq(Long retainReceiverSeq) {
    this.retainReceiverSeq = retainReceiverSeq;
  }


  public DeactivateReceiverRequest retainReceiverNo(Integer retainReceiverNo) {
    
    this.retainReceiverNo = retainReceiverNo;
    return this;
  }

   /**
   * Serial number of the receiver to be retained.
   * @return retainReceiverNo
  **/
  @javax.annotation.Nullable
  public Integer getRetainReceiverNo() {
    return retainReceiverNo;
  }


  public void setRetainReceiverNo(Integer retainReceiverNo) {
    this.retainReceiverNo = retainReceiverNo;
  }


  public DeactivateReceiverRequest retainReceiverUniqueRef(String retainReceiverUniqueRef) {
    
    this.retainReceiverUniqueRef = retainReceiverUniqueRef;
    return this;
  }

   /**
   * Receiver Unique Reference Number to be retained.
   * @return retainReceiverUniqueRef
  **/
  @javax.annotation.Nullable
  public String getRetainReceiverUniqueRef() {
    return retainReceiverUniqueRef;
  }


  public void setRetainReceiverUniqueRef(String retainReceiverUniqueRef) {
    this.retainReceiverUniqueRef = retainReceiverUniqueRef;
  }


  public DeactivateReceiverRequest deletionMode(String deletionMode) {
    
    this.deletionMode = deletionMode;
    return this;
  }

   /**
   * Mode of Deletion * SingleReceiver - Deletes the Receiver for the Customer with receiverNo passed in the request. * GroupReceiver -  Deletes the Receiver Group for the Customer with receiverUniqueRef passed in the request. * AllButOneReceiver - Deletes all the Receivers for the Customer except the Receiver with retainReceiverNo passed in the request. * AllButOneGroupReceiver - Deletes all the Receivers Group for the Customer except the Receiver Group with retainReceiverUniqueRef passed in the request. * AllReceivers - Deletes all the Receivers for the Customer. 
   * @return deletionMode
  **/
  @javax.annotation.Nullable
  public String getDeletionMode() {
    return deletionMode;
  }


  public void setDeletionMode(String deletionMode) {
    this.deletionMode = deletionMode;
  }


  public DeactivateReceiverRequest isTrnlReqFlag(Boolean isTrnlReqFlag) {
    
    this.isTrnlReqFlag = isTrnlReqFlag;
    return this;
  }

   /**
   * Transactional Request Flag. This field is used in RCM only. N/A for UCD. 
   * @return isTrnlReqFlag
  **/
  @javax.annotation.Nullable
  public Boolean getIsTrnlReqFlag() {
    return isTrnlReqFlag;
  }


  public void setIsTrnlReqFlag(Boolean isTrnlReqFlag) {
    this.isTrnlReqFlag = isTrnlReqFlag;
  }


  public DeactivateReceiverRequest requestInitiatedBy(String requestInitiatedBy) {
    
    this.requestInitiatedBy = requestInitiatedBy;
    return this;
  }

   /**
   * To identify who has initiated the request.
   * @return requestInitiatedBy
  **/
  @javax.annotation.Nonnull
  public String getRequestInitiatedBy() {
    return requestInitiatedBy;
  }


  public void setRequestInitiatedBy(String requestInitiatedBy) {
    this.requestInitiatedBy = requestInitiatedBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeactivateReceiverRequest deactivateReceiverRequest = (DeactivateReceiverRequest) o;
    return Objects.equals(this.header, deactivateReceiverRequest.header) &&
        Objects.equals(this.customerKey, deactivateReceiverRequest.customerKey) &&
        Objects.equals(this.receiverSeq, deactivateReceiverRequest.receiverSeq) &&
        Objects.equals(this.receiverNo, deactivateReceiverRequest.receiverNo) &&
        Objects.equals(this.receiverUniqueRef, deactivateReceiverRequest.receiverUniqueRef) &&
        Objects.equals(this.retainReceiverSeq, deactivateReceiverRequest.retainReceiverSeq) &&
        Objects.equals(this.retainReceiverNo, deactivateReceiverRequest.retainReceiverNo) &&
        Objects.equals(this.retainReceiverUniqueRef, deactivateReceiverRequest.retainReceiverUniqueRef) &&
        Objects.equals(this.deletionMode, deactivateReceiverRequest.deletionMode) &&
        Objects.equals(this.isTrnlReqFlag, deactivateReceiverRequest.isTrnlReqFlag) &&
        Objects.equals(this.requestInitiatedBy, deactivateReceiverRequest.requestInitiatedBy);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, customerKey, receiverSeq, receiverNo, receiverUniqueRef, retainReceiverSeq, retainReceiverNo, retainReceiverUniqueRef, deletionMode, isTrnlReqFlag, requestInitiatedBy);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeactivateReceiverRequest {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    customerKey: ").append(toIndentedString(customerKey)).append("\n");
    sb.append("    receiverSeq: ").append(toIndentedString(receiverSeq)).append("\n");
    sb.append("    receiverNo: ").append(toIndentedString(receiverNo)).append("\n");
    sb.append("    receiverUniqueRef: ").append(toIndentedString(receiverUniqueRef)).append("\n");
    sb.append("    retainReceiverSeq: ").append(toIndentedString(retainReceiverSeq)).append("\n");
    sb.append("    retainReceiverNo: ").append(toIndentedString(retainReceiverNo)).append("\n");
    sb.append("    retainReceiverUniqueRef: ").append(toIndentedString(retainReceiverUniqueRef)).append("\n");
    sb.append("    deletionMode: ").append(toIndentedString(deletionMode)).append("\n");
    sb.append("    isTrnlReqFlag: ").append(toIndentedString(isTrnlReqFlag)).append("\n");
    sb.append("    requestInitiatedBy: ").append(toIndentedString(requestInitiatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("header");
    openapiFields.add("customerKey");
    openapiFields.add("receiverSeq");
    openapiFields.add("receiverNo");
    openapiFields.add("receiverUniqueRef");
    openapiFields.add("retainReceiverSeq");
    openapiFields.add("retainReceiverNo");
    openapiFields.add("retainReceiverUniqueRef");
    openapiFields.add("deletionMode");
    openapiFields.add("isTrnlReqFlag");
    openapiFields.add("requestInitiatedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("header");
    openapiRequiredFields.add("customerKey");
    openapiRequiredFields.add("requestInitiatedBy");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DeactivateReceiverRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DeactivateReceiverRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeactivateReceiverRequest is not found in the empty JSON string", DeactivateReceiverRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DeactivateReceiverRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeactivateReceiverRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DeactivateReceiverRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `header`
      Header.validateJsonObject(jsonObj.getAsJsonObject("header"));
      // validate the required field `customerKey`
      CustomerKey.validateJsonObject(jsonObj.getAsJsonObject("customerKey"));
      if ((jsonObj.get("receiverUniqueRef") != null && !jsonObj.get("receiverUniqueRef").isJsonNull()) && !jsonObj.get("receiverUniqueRef").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverUniqueRef` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverUniqueRef").toString()));
      }
      if ((jsonObj.get("retainReceiverUniqueRef") != null && !jsonObj.get("retainReceiverUniqueRef").isJsonNull()) && !jsonObj.get("retainReceiverUniqueRef").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `retainReceiverUniqueRef` to be a primitive type in the JSON string but got `%s`", jsonObj.get("retainReceiverUniqueRef").toString()));
      }
      if ((jsonObj.get("deletionMode") != null && !jsonObj.get("deletionMode").isJsonNull()) && !jsonObj.get("deletionMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deletionMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deletionMode").toString()));
      }
      if (!jsonObj.get("requestInitiatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestInitiatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestInitiatedBy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeactivateReceiverRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeactivateReceiverRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeactivateReceiverRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeactivateReceiverRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<DeactivateReceiverRequest>() {
           @Override
           public void write(JsonWriter out, DeactivateReceiverRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeactivateReceiverRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DeactivateReceiverRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DeactivateReceiverRequest
  * @throws IOException if the JSON string is invalid with respect to DeactivateReceiverRequest
  */
  public static DeactivateReceiverRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeactivateReceiverRequest.class);
  }

 /**
  * Convert an instance of DeactivateReceiverRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

