/*
 * ucd_clkup_v1_api
 * Swagger documentation for UCD Customer Lookup Service API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: UCDWSDevTeam@westernunion.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.wu.brwallet.customer.profile.model.common.ucd.customerlookup;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

/**
 * Customer Details Schema
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-17T20:02:06.369160100+05:30[Asia/Calcutta]")
public class CustomerDetailsSet6 {
  public static final String SERIALIZED_NAME_CUSTOMER_SEQUENCE_NO = "customerSequenceNo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SEQUENCE_NO)
  private Integer customerSequenceNo;

  public static final String SERIALIZED_NAME_CUSTOMER_PERSONAL_INFO = "customerPersonalInfo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PERSONAL_INFO)
  private CustomerAndAudit customerPersonalInfo;

  public static final String SERIALIZED_NAME_CUSTOMER_ACCOUNT_INFO = "customerAccountInfo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ACCOUNT_INFO)
  private List<AccountAndAudit> customerAccountInfo;

  public static final String SERIALIZED_NAME_CUSTOMER_ACCOUNT_ONBOARDING_INFO = "customerAccountOnboardingInfo";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ACCOUNT_ONBOARDING_INFO)
  private List<AccountOnboardingAndAudit> customerAccountOnboardingInfo;

  public static final String SERIALIZED_NAME_CUSTOMER_ADDRESS = "customerAddress";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ADDRESS)
  private List<AddressAndAudit> customerAddress;

  public static final String SERIALIZED_NAME_CUSTOMER_EMAIL = "customerEmail";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EMAIL)
  private List<EmailAndAudit> customerEmail;

  public static final String SERIALIZED_NAME_CUSTOMER_PHONE = "customerPhone";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PHONE)
  private List<PhoneAndAudit> customerPhone;

  public static final String SERIALIZED_NAME_CUSTOMER_SECURITY = "customerSecurity";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SECURITY)
  private List<SecurityQueAndAnsAndAudit> customerSecurity;

  public static final String SERIALIZED_NAME_CUSTOMER_PREFERENCES = "customerPreferences";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PREFERENCES)
  private PreferencesAndAudit customerPreferences;

  public static final String SERIALIZED_NAME_CUSTOMER_FUNDING_SOURCES = "customerFundingSources";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FUNDING_SOURCES)
  private List<FundingSourceAndAudit> customerFundingSources;

  public static final String SERIALIZED_NAME_CUSTOMER_KYC = "customerKyc";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_KYC)
  private List<KycAndAudit> customerKyc;

  public static final String SERIALIZED_NAME_CUSTOMER_KYC_DETAILS = "customerKycDetails";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_KYC_DETAILS)
  private List<CustomerKycDetailAndAudit> customerKycDetails;

  public static final String SERIALIZED_NAME_CUSTOMER_VERIFICATION_DETAILS = "customerVerificationDetails";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_VERIFICATION_DETAILS)
  private List<CustomerVerificationDetailAndAudit> customerVerificationDetails;

  public static final String SERIALIZED_NAME_CUSTOMER_RECEIVERS = "customerReceivers";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_RECEIVERS)
  private List<CustomerReceiverAndAudit> customerReceivers;

  public static final String SERIALIZED_NAME_CUSTOMER_RECEIVERS_BY_UNIQUE_REF = "customerReceiversByUniqueRef";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_RECEIVERS_BY_UNIQUE_REF)
  private List<CustomerReceiverByUniqueRefAndAudit> customerReceiversByUniqueRef;

  public static final String SERIALIZED_NAME_CUSTOMER_UAB = "customerUab";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_UAB)
  private List<UabAndAudit> customerUab;

  public static final String SERIALIZED_NAME_CUSTOMER_USAGE_STATISTICS = "customerUsageStatistics";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_USAGE_STATISTICS)
  private CustomerUsageStatisticsAndAudit customerUsageStatistics;

  public static final String SERIALIZED_NAME_CUSTOMER_PARTNER = "customerPartner";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PARTNER)
  private CustomerPartnerAndAudit customerPartner;

  public static final String SERIALIZED_NAME_CUSTOMER_ACCOUNT_REPRESENTATIVE = "customerAccountRepresentative";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ACCOUNT_REPRESENTATIVE)
  private List<CustomerAccountRepresentativeAndAudit> customerAccountRepresentative;

  public static final String SERIALIZED_NAME_CUSTOMER_SERVICE_PROVIDER = "customerServiceProvider";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SERVICE_PROVIDER)
  private List<CustomerServiceProviderAndAudit> customerServiceProvider;

  public static final String SERIALIZED_NAME_CUSTOMER_MISC_FLAGS = "customerMiscFlags";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_MISC_FLAGS)
  private List<CustomerMiscFlagsAndAudit> customerMiscFlags;

  public static final String SERIALIZED_NAME_CUSTOMER_DEVICES = "customerDevices";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_DEVICES)
  private List<CustomerDeviceAndAudit> customerDevices;

  public static final String SERIALIZED_NAME_PROFILE_ATTRIBUTES = "profileAttributes";
  @SerializedName(SERIALIZED_NAME_PROFILE_ATTRIBUTES)
  private ProfileAttributesAndAudit profileAttributes;

  public static final String SERIALIZED_NAME_CUSTOMER_ROLE = "customerRole";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ROLE)
  private CustomerRoleAndAudit customerRole;

  public static final String SERIALIZED_NAME_PREPAID = "prepaid";
  @SerializedName(SERIALIZED_NAME_PREPAID)
  private PrepaidAndAudit prepaid;

  public static final String SERIALIZED_NAME_SEGMENTATION_CODES = "segmentationCodes";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_CODES)
  private SegmentationCodesAndAudit segmentationCodes;

  public static final String SERIALIZED_NAME_PEP_PROFILE_ENTITIES = "pepProfileEntities";
  @SerializedName(SERIALIZED_NAME_PEP_PROFILE_ENTITIES)
  private PepProfileEntitiesAndAudit pepProfileEntities;

  public static final String SERIALIZED_NAME_UCB_DISPLAY_FLAG = "ucbDisplayFlag";
  @SerializedName(SERIALIZED_NAME_UCB_DISPLAY_FLAG)
  private UcbDisplayFlagAndAudit ucbDisplayFlag;

  public static final String SERIALIZED_NAME_CUSTOMER_NOTIFICATION_STATUS = "customerNotificationStatus";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NOTIFICATION_STATUS)
  private String customerNotificationStatus;

  public static final String SERIALIZED_NAME_DO_NOT_DISPLAY = "doNotDisplay";
  @SerializedName(SERIALIZED_NAME_DO_NOT_DISPLAY)
  private Boolean doNotDisplay;

  public static final String SERIALIZED_NAME_IS_CONVENIENCE = "isConvenience";
  @SerializedName(SERIALIZED_NAME_IS_CONVENIENCE)
  private Boolean isConvenience;

  public static final String SERIALIZED_NAME_CREATED_SYNC = "createdSync";
  @SerializedName(SERIALIZED_NAME_CREATED_SYNC)
  private String createdSync;

  public static final String SERIALIZED_NAME_UPDATED_SYNC = "updatedSync";
  @SerializedName(SERIALIZED_NAME_UPDATED_SYNC)
  private String updatedSync;

  public CustomerDetailsSet6() {
  }

  public CustomerDetailsSet6 customerSequenceNo(Integer customerSequenceNo) {
    
    this.customerSequenceNo = customerSequenceNo;
    return this;
  }

   /**
   * Get customerSequenceNo
   * @return customerSequenceNo
  **/
  @javax.annotation.Nullable
  public Integer getCustomerSequenceNo() {
    return customerSequenceNo;
  }


  public void setCustomerSequenceNo(Integer customerSequenceNo) {
    this.customerSequenceNo = customerSequenceNo;
  }


  public CustomerDetailsSet6 customerPersonalInfo(CustomerAndAudit customerPersonalInfo) {
    
    this.customerPersonalInfo = customerPersonalInfo;
    return this;
  }

   /**
   * Get customerPersonalInfo
   * @return customerPersonalInfo
  **/
  @javax.annotation.Nullable
  public CustomerAndAudit getCustomerPersonalInfo() {
    return customerPersonalInfo;
  }


  public void setCustomerPersonalInfo(CustomerAndAudit customerPersonalInfo) {
    this.customerPersonalInfo = customerPersonalInfo;
  }


  public CustomerDetailsSet6 customerAccountInfo(List<AccountAndAudit> customerAccountInfo) {
    
    this.customerAccountInfo = customerAccountInfo;
    return this;
  }

  public CustomerDetailsSet6 addCustomerAccountInfoItem(AccountAndAudit customerAccountInfoItem) {
    if (this.customerAccountInfo == null) {
      this.customerAccountInfo = new ArrayList<>();
    }
    this.customerAccountInfo.add(customerAccountInfoItem);
    return this;
  }

   /**
   * Get customerAccountInfo
   * @return customerAccountInfo
  **/
  @javax.annotation.Nullable
  public List<AccountAndAudit> getCustomerAccountInfo() {
    return customerAccountInfo;
  }


  public void setCustomerAccountInfo(List<AccountAndAudit> customerAccountInfo) {
    this.customerAccountInfo = customerAccountInfo;
  }


  public CustomerDetailsSet6 customerAccountOnboardingInfo(List<AccountOnboardingAndAudit> customerAccountOnboardingInfo) {
    
    this.customerAccountOnboardingInfo = customerAccountOnboardingInfo;
    return this;
  }

  public CustomerDetailsSet6 addCustomerAccountOnboardingInfoItem(AccountOnboardingAndAudit customerAccountOnboardingInfoItem) {
    if (this.customerAccountOnboardingInfo == null) {
      this.customerAccountOnboardingInfo = new ArrayList<>();
    }
    this.customerAccountOnboardingInfo.add(customerAccountOnboardingInfoItem);
    return this;
  }

   /**
   * Get customerAccountOnboardingInfo
   * @return customerAccountOnboardingInfo
  **/
  @javax.annotation.Nullable
  public List<AccountOnboardingAndAudit> getCustomerAccountOnboardingInfo() {
    return customerAccountOnboardingInfo;
  }


  public void setCustomerAccountOnboardingInfo(List<AccountOnboardingAndAudit> customerAccountOnboardingInfo) {
    this.customerAccountOnboardingInfo = customerAccountOnboardingInfo;
  }


  public CustomerDetailsSet6 customerAddress(List<AddressAndAudit> customerAddress) {
    
    this.customerAddress = customerAddress;
    return this;
  }

  public CustomerDetailsSet6 addCustomerAddressItem(AddressAndAudit customerAddressItem) {
    if (this.customerAddress == null) {
      this.customerAddress = new ArrayList<>();
    }
    this.customerAddress.add(customerAddressItem);
    return this;
  }

   /**
   * Get customerAddress
   * @return customerAddress
  **/
  @javax.annotation.Nullable
  public List<AddressAndAudit> getCustomerAddress() {
    return customerAddress;
  }


  public void setCustomerAddress(List<AddressAndAudit> customerAddress) {
    this.customerAddress = customerAddress;
  }


  public CustomerDetailsSet6 customerEmail(List<EmailAndAudit> customerEmail) {
    
    this.customerEmail = customerEmail;
    return this;
  }

  public CustomerDetailsSet6 addCustomerEmailItem(EmailAndAudit customerEmailItem) {
    if (this.customerEmail == null) {
      this.customerEmail = new ArrayList<>();
    }
    this.customerEmail.add(customerEmailItem);
    return this;
  }

   /**
   * Get customerEmail
   * @return customerEmail
  **/
  @javax.annotation.Nullable
  public List<EmailAndAudit> getCustomerEmail() {
    return customerEmail;
  }


  public void setCustomerEmail(List<EmailAndAudit> customerEmail) {
    this.customerEmail = customerEmail;
  }


  public CustomerDetailsSet6 customerPhone(List<PhoneAndAudit> customerPhone) {
    
    this.customerPhone = customerPhone;
    return this;
  }

  public CustomerDetailsSet6 addCustomerPhoneItem(PhoneAndAudit customerPhoneItem) {
    if (this.customerPhone == null) {
      this.customerPhone = new ArrayList<>();
    }
    this.customerPhone.add(customerPhoneItem);
    return this;
  }

   /**
   * Get customerPhone
   * @return customerPhone
  **/
  @javax.annotation.Nullable
  public List<PhoneAndAudit> getCustomerPhone() {
    return customerPhone;
  }


  public void setCustomerPhone(List<PhoneAndAudit> customerPhone) {
    this.customerPhone = customerPhone;
  }


  public CustomerDetailsSet6 customerSecurity(List<SecurityQueAndAnsAndAudit> customerSecurity) {
    
    this.customerSecurity = customerSecurity;
    return this;
  }

  public CustomerDetailsSet6 addCustomerSecurityItem(SecurityQueAndAnsAndAudit customerSecurityItem) {
    if (this.customerSecurity == null) {
      this.customerSecurity = new ArrayList<>();
    }
    this.customerSecurity.add(customerSecurityItem);
    return this;
  }

   /**
   * Get customerSecurity
   * @return customerSecurity
  **/
  @javax.annotation.Nullable
  public List<SecurityQueAndAnsAndAudit> getCustomerSecurity() {
    return customerSecurity;
  }


  public void setCustomerSecurity(List<SecurityQueAndAnsAndAudit> customerSecurity) {
    this.customerSecurity = customerSecurity;
  }


  public CustomerDetailsSet6 customerPreferences(PreferencesAndAudit customerPreferences) {
    
    this.customerPreferences = customerPreferences;
    return this;
  }

   /**
   * Get customerPreferences
   * @return customerPreferences
  **/
  @javax.annotation.Nullable
  public PreferencesAndAudit getCustomerPreferences() {
    return customerPreferences;
  }


  public void setCustomerPreferences(PreferencesAndAudit customerPreferences) {
    this.customerPreferences = customerPreferences;
  }


  public CustomerDetailsSet6 customerFundingSources(List<FundingSourceAndAudit> customerFundingSources) {
    
    this.customerFundingSources = customerFundingSources;
    return this;
  }

  public CustomerDetailsSet6 addCustomerFundingSourcesItem(FundingSourceAndAudit customerFundingSourcesItem) {
    if (this.customerFundingSources == null) {
      this.customerFundingSources = new ArrayList<>();
    }
    this.customerFundingSources.add(customerFundingSourcesItem);
    return this;
  }

   /**
   * Get customerFundingSources
   * @return customerFundingSources
  **/
  @javax.annotation.Nullable
  public List<FundingSourceAndAudit> getCustomerFundingSources() {
    return customerFundingSources;
  }


  public void setCustomerFundingSources(List<FundingSourceAndAudit> customerFundingSources) {
    this.customerFundingSources = customerFundingSources;
  }


  public CustomerDetailsSet6 customerKyc(List<KycAndAudit> customerKyc) {
    
    this.customerKyc = customerKyc;
    return this;
  }

  public CustomerDetailsSet6 addCustomerKycItem(KycAndAudit customerKycItem) {
    if (this.customerKyc == null) {
      this.customerKyc = new ArrayList<>();
    }
    this.customerKyc.add(customerKycItem);
    return this;
  }

   /**
   * Get customerKyc
   * @return customerKyc
  **/
  @javax.annotation.Nullable
  public List<KycAndAudit> getCustomerKyc() {
    return customerKyc;
  }


  public void setCustomerKyc(List<KycAndAudit> customerKyc) {
    this.customerKyc = customerKyc;
  }


  public CustomerDetailsSet6 customerKycDetails(List<CustomerKycDetailAndAudit> customerKycDetails) {
    
    this.customerKycDetails = customerKycDetails;
    return this;
  }

  public CustomerDetailsSet6 addCustomerKycDetailsItem(CustomerKycDetailAndAudit customerKycDetailsItem) {
    if (this.customerKycDetails == null) {
      this.customerKycDetails = new ArrayList<>();
    }
    this.customerKycDetails.add(customerKycDetailsItem);
    return this;
  }

   /**
   * Get customerKycDetails
   * @return customerKycDetails
  **/
  @javax.annotation.Nullable
  public List<CustomerKycDetailAndAudit> getCustomerKycDetails() {
    return customerKycDetails;
  }


  public void setCustomerKycDetails(List<CustomerKycDetailAndAudit> customerKycDetails) {
    this.customerKycDetails = customerKycDetails;
  }


  public CustomerDetailsSet6 customerVerificationDetails(List<CustomerVerificationDetailAndAudit> customerVerificationDetails) {
    
    this.customerVerificationDetails = customerVerificationDetails;
    return this;
  }

  public CustomerDetailsSet6 addCustomerVerificationDetailsItem(CustomerVerificationDetailAndAudit customerVerificationDetailsItem) {
    if (this.customerVerificationDetails == null) {
      this.customerVerificationDetails = new ArrayList<>();
    }
    this.customerVerificationDetails.add(customerVerificationDetailsItem);
    return this;
  }

   /**
   * Get customerVerificationDetails
   * @return customerVerificationDetails
  **/
  @javax.annotation.Nullable
  public List<CustomerVerificationDetailAndAudit> getCustomerVerificationDetails() {
    return customerVerificationDetails;
  }


  public void setCustomerVerificationDetails(List<CustomerVerificationDetailAndAudit> customerVerificationDetails) {
    this.customerVerificationDetails = customerVerificationDetails;
  }


  public CustomerDetailsSet6 customerReceivers(List<CustomerReceiverAndAudit> customerReceivers) {
    
    this.customerReceivers = customerReceivers;
    return this;
  }

  public CustomerDetailsSet6 addCustomerReceiversItem(CustomerReceiverAndAudit customerReceiversItem) {
    if (this.customerReceivers == null) {
      this.customerReceivers = new ArrayList<>();
    }
    this.customerReceivers.add(customerReceiversItem);
    return this;
  }

   /**
   * **The below table defines the sorting of receivers based on priority of receiverTypeId. If there are multiple receivers in same priority UCD will show latest updated receiver on top.** | Priority | Receiver Type | Description                              | | ---------|---------------|------------------------------------------| | 1        | X             | Buy Phone Time Receiver                  | | 2        | P             | Prepaid Receiver                         | | 3        | B             | D2B (Direct to Bank) Receiver            | | 4        | C             | D2C (Direct to Card) Receiver            | | 4        | V             | D2C (Direct to Card) Visa Receiver       | | 4        | Y             | D2C (Direct to Card) MasterCard Receiver | | 5        | D             | Domestic Receiver                        | | 5        | G             | Mexican Receiver                         | | 5        | I             | International Receiver                   | | 5        | L             | Local Receiver                           | | 5        | M             | Mexican Receiver                         | | 5        | Q             | Quick Receiver                           | | 5        | S             | Swiftpay Collect Receiver                | | 5        | U             | UPI Receiver                             | | 5        | W             | Wallet Receiver                          | 
   * @return customerReceivers
  **/
  @javax.annotation.Nullable
  public List<CustomerReceiverAndAudit> getCustomerReceivers() {
    return customerReceivers;
  }


  public void setCustomerReceivers(List<CustomerReceiverAndAudit> customerReceivers) {
    this.customerReceivers = customerReceivers;
  }


  public CustomerDetailsSet6 customerReceiversByUniqueRef(List<CustomerReceiverByUniqueRefAndAudit> customerReceiversByUniqueRef) {
    
    this.customerReceiversByUniqueRef = customerReceiversByUniqueRef;
    return this;
  }

  public CustomerDetailsSet6 addCustomerReceiversByUniqueRefItem(CustomerReceiverByUniqueRefAndAudit customerReceiversByUniqueRefItem) {
    if (this.customerReceiversByUniqueRef == null) {
      this.customerReceiversByUniqueRef = new ArrayList<>();
    }
    this.customerReceiversByUniqueRef.add(customerReceiversByUniqueRefItem);
    return this;
  }

   /**
   * **The below table defines the sorting of receivers based on priority of receiverTypeId. If there are multiple receivers in same priority UCD will show latest updated receiver on top.** | Priority | Receiver Type | Description                              | | ---------|---------------|------------------------------------------| | 1        | X             | Buy Phone Time Receiver                  | | 2        | P             | Prepaid Receiver                         | | 3        | B             | D2B (Direct to Bank) Receiver            | | 4        | C             | D2C (Direct to Card) Receiver            | | 4        | V             | D2C (Direct to Card) Visa Receiver       | | 4        | Y             | D2C (Direct to Card) MasterCard Receiver | | 5        | D             | Domestic Receiver                        | | 5        | G             | Mexican Receiver                         | | 5        | I             | International Receiver                   | | 5        | L             | Local Receiver                           | | 5        | M             | Mexican Receiver                         | | 5        | Q             | Quick Receiver                           | | 5        | S             | Swiftpay Collect Receiver                | | 5        | U             | UPI Receiver                             | | 5        | W             | Wallet Receiver                          | 
   * @return customerReceiversByUniqueRef
  **/
  @javax.annotation.Nullable
  public List<CustomerReceiverByUniqueRefAndAudit> getCustomerReceiversByUniqueRef() {
    return customerReceiversByUniqueRef;
  }


  public void setCustomerReceiversByUniqueRef(List<CustomerReceiverByUniqueRefAndAudit> customerReceiversByUniqueRef) {
    this.customerReceiversByUniqueRef = customerReceiversByUniqueRef;
  }


  public CustomerDetailsSet6 customerUab(List<UabAndAudit> customerUab) {
    
    this.customerUab = customerUab;
    return this;
  }

  public CustomerDetailsSet6 addCustomerUabItem(UabAndAudit customerUabItem) {
    if (this.customerUab == null) {
      this.customerUab = new ArrayList<>();
    }
    this.customerUab.add(customerUabItem);
    return this;
  }

   /**
   * Get customerUab
   * @return customerUab
  **/
  @javax.annotation.Nullable
  public List<UabAndAudit> getCustomerUab() {
    return customerUab;
  }


  public void setCustomerUab(List<UabAndAudit> customerUab) {
    this.customerUab = customerUab;
  }


  public CustomerDetailsSet6 customerUsageStatistics(CustomerUsageStatisticsAndAudit customerUsageStatistics) {
    
    this.customerUsageStatistics = customerUsageStatistics;
    return this;
  }

   /**
   * Get customerUsageStatistics
   * @return customerUsageStatistics
  **/
  @javax.annotation.Nullable
  public CustomerUsageStatisticsAndAudit getCustomerUsageStatistics() {
    return customerUsageStatistics;
  }


  public void setCustomerUsageStatistics(CustomerUsageStatisticsAndAudit customerUsageStatistics) {
    this.customerUsageStatistics = customerUsageStatistics;
  }


  public CustomerDetailsSet6 customerPartner(CustomerPartnerAndAudit customerPartner) {
    
    this.customerPartner = customerPartner;
    return this;
  }

   /**
   * Get customerPartner
   * @return customerPartner
  **/
  @javax.annotation.Nullable
  public CustomerPartnerAndAudit getCustomerPartner() {
    return customerPartner;
  }


  public void setCustomerPartner(CustomerPartnerAndAudit customerPartner) {
    this.customerPartner = customerPartner;
  }


  public CustomerDetailsSet6 customerAccountRepresentative(List<CustomerAccountRepresentativeAndAudit> customerAccountRepresentative) {
    
    this.customerAccountRepresentative = customerAccountRepresentative;
    return this;
  }

  public CustomerDetailsSet6 addCustomerAccountRepresentativeItem(CustomerAccountRepresentativeAndAudit customerAccountRepresentativeItem) {
    if (this.customerAccountRepresentative == null) {
      this.customerAccountRepresentative = new ArrayList<>();
    }
    this.customerAccountRepresentative.add(customerAccountRepresentativeItem);
    return this;
  }

   /**
   * Get customerAccountRepresentative
   * @return customerAccountRepresentative
  **/
  @javax.annotation.Nullable
  public List<CustomerAccountRepresentativeAndAudit> getCustomerAccountRepresentative() {
    return customerAccountRepresentative;
  }


  public void setCustomerAccountRepresentative(List<CustomerAccountRepresentativeAndAudit> customerAccountRepresentative) {
    this.customerAccountRepresentative = customerAccountRepresentative;
  }


  public CustomerDetailsSet6 customerServiceProvider(List<CustomerServiceProviderAndAudit> customerServiceProvider) {
    
    this.customerServiceProvider = customerServiceProvider;
    return this;
  }

  public CustomerDetailsSet6 addCustomerServiceProviderItem(CustomerServiceProviderAndAudit customerServiceProviderItem) {
    if (this.customerServiceProvider == null) {
      this.customerServiceProvider = new ArrayList<>();
    }
    this.customerServiceProvider.add(customerServiceProviderItem);
    return this;
  }

   /**
   * Get customerServiceProvider
   * @return customerServiceProvider
  **/
  @javax.annotation.Nullable
  public List<CustomerServiceProviderAndAudit> getCustomerServiceProvider() {
    return customerServiceProvider;
  }


  public void setCustomerServiceProvider(List<CustomerServiceProviderAndAudit> customerServiceProvider) {
    this.customerServiceProvider = customerServiceProvider;
  }


  public CustomerDetailsSet6 customerMiscFlags(List<CustomerMiscFlagsAndAudit> customerMiscFlags) {
    
    this.customerMiscFlags = customerMiscFlags;
    return this;
  }

  public CustomerDetailsSet6 addCustomerMiscFlagsItem(CustomerMiscFlagsAndAudit customerMiscFlagsItem) {
    if (this.customerMiscFlags == null) {
      this.customerMiscFlags = new ArrayList<>();
    }
    this.customerMiscFlags.add(customerMiscFlagsItem);
    return this;
  }

   /**
   * Get customerMiscFlags
   * @return customerMiscFlags
  **/
  @javax.annotation.Nullable
  public List<CustomerMiscFlagsAndAudit> getCustomerMiscFlags() {
    return customerMiscFlags;
  }


  public void setCustomerMiscFlags(List<CustomerMiscFlagsAndAudit> customerMiscFlags) {
    this.customerMiscFlags = customerMiscFlags;
  }


  public CustomerDetailsSet6 customerDevices(List<CustomerDeviceAndAudit> customerDevices) {
    
    this.customerDevices = customerDevices;
    return this;
  }

  public CustomerDetailsSet6 addCustomerDevicesItem(CustomerDeviceAndAudit customerDevicesItem) {
    if (this.customerDevices == null) {
      this.customerDevices = new ArrayList<>();
    }
    this.customerDevices.add(customerDevicesItem);
    return this;
  }

   /**
   * Get customerDevices
   * @return customerDevices
  **/
  @javax.annotation.Nullable
  public List<CustomerDeviceAndAudit> getCustomerDevices() {
    return customerDevices;
  }


  public void setCustomerDevices(List<CustomerDeviceAndAudit> customerDevices) {
    this.customerDevices = customerDevices;
  }


  public CustomerDetailsSet6 profileAttributes(ProfileAttributesAndAudit profileAttributes) {
    
    this.profileAttributes = profileAttributes;
    return this;
  }

   /**
   * Get profileAttributes
   * @return profileAttributes
  **/
  @javax.annotation.Nullable
  public ProfileAttributesAndAudit getProfileAttributes() {
    return profileAttributes;
  }


  public void setProfileAttributes(ProfileAttributesAndAudit profileAttributes) {
    this.profileAttributes = profileAttributes;
  }


  public CustomerDetailsSet6 customerRole(CustomerRoleAndAudit customerRole) {
    
    this.customerRole = customerRole;
    return this;
  }

   /**
   * Get customerRole
   * @return customerRole
  **/
  @javax.annotation.Nullable
  public CustomerRoleAndAudit getCustomerRole() {
    return customerRole;
  }


  public void setCustomerRole(CustomerRoleAndAudit customerRole) {
    this.customerRole = customerRole;
  }


  public CustomerDetailsSet6 prepaid(PrepaidAndAudit prepaid) {
    
    this.prepaid = prepaid;
    return this;
  }

   /**
   * Get prepaid
   * @return prepaid
  **/
  @javax.annotation.Nullable
  public PrepaidAndAudit getPrepaid() {
    return prepaid;
  }


  public void setPrepaid(PrepaidAndAudit prepaid) {
    this.prepaid = prepaid;
  }


  public CustomerDetailsSet6 segmentationCodes(SegmentationCodesAndAudit segmentationCodes) {
    
    this.segmentationCodes = segmentationCodes;
    return this;
  }

   /**
   * Get segmentationCodes
   * @return segmentationCodes
  **/
  @javax.annotation.Nullable
  public SegmentationCodesAndAudit getSegmentationCodes() {
    return segmentationCodes;
  }


  public void setSegmentationCodes(SegmentationCodesAndAudit segmentationCodes) {
    this.segmentationCodes = segmentationCodes;
  }


  public CustomerDetailsSet6 pepProfileEntities(PepProfileEntitiesAndAudit pepProfileEntities) {
    
    this.pepProfileEntities = pepProfileEntities;
    return this;
  }

   /**
   * Get pepProfileEntities
   * @return pepProfileEntities
  **/
  @javax.annotation.Nullable
  public PepProfileEntitiesAndAudit getPepProfileEntities() {
    return pepProfileEntities;
  }


  public void setPepProfileEntities(PepProfileEntitiesAndAudit pepProfileEntities) {
    this.pepProfileEntities = pepProfileEntities;
  }


  public CustomerDetailsSet6 ucbDisplayFlag(UcbDisplayFlagAndAudit ucbDisplayFlag) {
    
    this.ucbDisplayFlag = ucbDisplayFlag;
    return this;
  }

   /**
   * Get ucbDisplayFlag
   * @return ucbDisplayFlag
  **/
  @javax.annotation.Nullable
  public UcbDisplayFlagAndAudit getUcbDisplayFlag() {
    return ucbDisplayFlag;
  }


  public void setUcbDisplayFlag(UcbDisplayFlagAndAudit ucbDisplayFlag) {
    this.ucbDisplayFlag = ucbDisplayFlag;
  }


  public CustomerDetailsSet6 customerNotificationStatus(String customerNotificationStatus) {
    
    this.customerNotificationStatus = customerNotificationStatus;
    return this;
  }

   /**
   * Get customerNotificationStatus
   * @return customerNotificationStatus
  **/
  @javax.annotation.Nullable
  public String getCustomerNotificationStatus() {
    return customerNotificationStatus;
  }


  public void setCustomerNotificationStatus(String customerNotificationStatus) {
    this.customerNotificationStatus = customerNotificationStatus;
  }


  public CustomerDetailsSet6 doNotDisplay(Boolean doNotDisplay) {
    
    this.doNotDisplay = doNotDisplay;
    return this;
  }

   /**
   * This flag is used to mark the Customers to be displayed/not displayed in POS. For Convenience it is always true
   * @return doNotDisplay
  **/
  @javax.annotation.Nullable
  public Boolean getDoNotDisplay() {
    return doNotDisplay;
  }


  public void setDoNotDisplay(Boolean doNotDisplay) {
    this.doNotDisplay = doNotDisplay;
  }


  public CustomerDetailsSet6 isConvenience(Boolean isConvenience) {
    
    this.isConvenience = isConvenience;
    return this;
  }

   /**
   * This flag is used to mark the Customer is Convenience or not
   * @return isConvenience
  **/
  @javax.annotation.Nullable
  public Boolean getIsConvenience() {
    return isConvenience;
  }


  public void setIsConvenience(Boolean isConvenience) {
    this.isConvenience = isConvenience;
  }


  public CustomerDetailsSet6 createdSync(String createdSync) {
    
    this.createdSync = createdSync;
    return this;
  }

   /**
   * Get createdSync
   * @return createdSync
  **/
  @javax.annotation.Nullable
  public String getCreatedSync() {
    return createdSync;
  }


  public void setCreatedSync(String createdSync) {
    this.createdSync = createdSync;
  }


  public CustomerDetailsSet6 updatedSync(String updatedSync) {
    
    this.updatedSync = updatedSync;
    return this;
  }

   /**
   * Get updatedSync
   * @return updatedSync
  **/
  @javax.annotation.Nullable
  public String getUpdatedSync() {
    return updatedSync;
  }


  public void setUpdatedSync(String updatedSync) {
    this.updatedSync = updatedSync;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDetailsSet6 customerDetailsSet6 = (CustomerDetailsSet6) o;
    return Objects.equals(this.customerSequenceNo, customerDetailsSet6.customerSequenceNo) &&
        Objects.equals(this.customerPersonalInfo, customerDetailsSet6.customerPersonalInfo) &&
        Objects.equals(this.customerAccountInfo, customerDetailsSet6.customerAccountInfo) &&
        Objects.equals(this.customerAccountOnboardingInfo, customerDetailsSet6.customerAccountOnboardingInfo) &&
        Objects.equals(this.customerAddress, customerDetailsSet6.customerAddress) &&
        Objects.equals(this.customerEmail, customerDetailsSet6.customerEmail) &&
        Objects.equals(this.customerPhone, customerDetailsSet6.customerPhone) &&
        Objects.equals(this.customerSecurity, customerDetailsSet6.customerSecurity) &&
        Objects.equals(this.customerPreferences, customerDetailsSet6.customerPreferences) &&
        Objects.equals(this.customerFundingSources, customerDetailsSet6.customerFundingSources) &&
        Objects.equals(this.customerKyc, customerDetailsSet6.customerKyc) &&
        Objects.equals(this.customerKycDetails, customerDetailsSet6.customerKycDetails) &&
        Objects.equals(this.customerVerificationDetails, customerDetailsSet6.customerVerificationDetails) &&
        Objects.equals(this.customerReceivers, customerDetailsSet6.customerReceivers) &&
        Objects.equals(this.customerReceiversByUniqueRef, customerDetailsSet6.customerReceiversByUniqueRef) &&
        Objects.equals(this.customerUab, customerDetailsSet6.customerUab) &&
        Objects.equals(this.customerUsageStatistics, customerDetailsSet6.customerUsageStatistics) &&
        Objects.equals(this.customerPartner, customerDetailsSet6.customerPartner) &&
        Objects.equals(this.customerAccountRepresentative, customerDetailsSet6.customerAccountRepresentative) &&
        Objects.equals(this.customerServiceProvider, customerDetailsSet6.customerServiceProvider) &&
        Objects.equals(this.customerMiscFlags, customerDetailsSet6.customerMiscFlags) &&
        Objects.equals(this.customerDevices, customerDetailsSet6.customerDevices) &&
        Objects.equals(this.profileAttributes, customerDetailsSet6.profileAttributes) &&
        Objects.equals(this.customerRole, customerDetailsSet6.customerRole) &&
        Objects.equals(this.prepaid, customerDetailsSet6.prepaid) &&
        Objects.equals(this.segmentationCodes, customerDetailsSet6.segmentationCodes) &&
        Objects.equals(this.pepProfileEntities, customerDetailsSet6.pepProfileEntities) &&
        Objects.equals(this.ucbDisplayFlag, customerDetailsSet6.ucbDisplayFlag) &&
        Objects.equals(this.customerNotificationStatus, customerDetailsSet6.customerNotificationStatus) &&
        Objects.equals(this.doNotDisplay, customerDetailsSet6.doNotDisplay) &&
        Objects.equals(this.isConvenience, customerDetailsSet6.isConvenience) &&
        Objects.equals(this.createdSync, customerDetailsSet6.createdSync) &&
        Objects.equals(this.updatedSync, customerDetailsSet6.updatedSync);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerSequenceNo, customerPersonalInfo, customerAccountInfo, customerAccountOnboardingInfo, customerAddress, customerEmail, customerPhone, customerSecurity, customerPreferences, customerFundingSources, customerKyc, customerKycDetails, customerVerificationDetails, customerReceivers, customerReceiversByUniqueRef, customerUab, customerUsageStatistics, customerPartner, customerAccountRepresentative, customerServiceProvider, customerMiscFlags, customerDevices, profileAttributes, customerRole, prepaid, segmentationCodes, pepProfileEntities, ucbDisplayFlag, customerNotificationStatus, doNotDisplay, isConvenience, createdSync, updatedSync);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDetailsSet6 {\n");
    sb.append("    customerSequenceNo: ").append(toIndentedString(customerSequenceNo)).append("\n");
    sb.append("    customerPersonalInfo: ").append(toIndentedString(customerPersonalInfo)).append("\n");
    sb.append("    customerAccountInfo: ").append(toIndentedString(customerAccountInfo)).append("\n");
    sb.append("    customerAccountOnboardingInfo: ").append(toIndentedString(customerAccountOnboardingInfo)).append("\n");
    sb.append("    customerAddress: ").append(toIndentedString(customerAddress)).append("\n");
    sb.append("    customerEmail: ").append(toIndentedString(customerEmail)).append("\n");
    sb.append("    customerPhone: ").append(toIndentedString(customerPhone)).append("\n");
    sb.append("    customerSecurity: ").append(toIndentedString(customerSecurity)).append("\n");
    sb.append("    customerPreferences: ").append(toIndentedString(customerPreferences)).append("\n");
    sb.append("    customerFundingSources: ").append(toIndentedString(customerFundingSources)).append("\n");
    sb.append("    customerKyc: ").append(toIndentedString(customerKyc)).append("\n");
    sb.append("    customerKycDetails: ").append(toIndentedString(customerKycDetails)).append("\n");
    sb.append("    customerVerificationDetails: ").append(toIndentedString(customerVerificationDetails)).append("\n");
    sb.append("    customerReceivers: ").append(toIndentedString(customerReceivers)).append("\n");
    sb.append("    customerReceiversByUniqueRef: ").append(toIndentedString(customerReceiversByUniqueRef)).append("\n");
    sb.append("    customerUab: ").append(toIndentedString(customerUab)).append("\n");
    sb.append("    customerUsageStatistics: ").append(toIndentedString(customerUsageStatistics)).append("\n");
    sb.append("    customerPartner: ").append(toIndentedString(customerPartner)).append("\n");
    sb.append("    customerAccountRepresentative: ").append(toIndentedString(customerAccountRepresentative)).append("\n");
    sb.append("    customerServiceProvider: ").append(toIndentedString(customerServiceProvider)).append("\n");
    sb.append("    customerMiscFlags: ").append(toIndentedString(customerMiscFlags)).append("\n");
    sb.append("    customerDevices: ").append(toIndentedString(customerDevices)).append("\n");
    sb.append("    profileAttributes: ").append(toIndentedString(profileAttributes)).append("\n");
    sb.append("    customerRole: ").append(toIndentedString(customerRole)).append("\n");
    sb.append("    prepaid: ").append(toIndentedString(prepaid)).append("\n");
    sb.append("    segmentationCodes: ").append(toIndentedString(segmentationCodes)).append("\n");
    sb.append("    pepProfileEntities: ").append(toIndentedString(pepProfileEntities)).append("\n");
    sb.append("    ucbDisplayFlag: ").append(toIndentedString(ucbDisplayFlag)).append("\n");
    sb.append("    customerNotificationStatus: ").append(toIndentedString(customerNotificationStatus)).append("\n");
    sb.append("    doNotDisplay: ").append(toIndentedString(doNotDisplay)).append("\n");
    sb.append("    isConvenience: ").append(toIndentedString(isConvenience)).append("\n");
    sb.append("    createdSync: ").append(toIndentedString(createdSync)).append("\n");
    sb.append("    updatedSync: ").append(toIndentedString(updatedSync)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerSequenceNo");
    openapiFields.add("customerPersonalInfo");
    openapiFields.add("customerAccountInfo");
    openapiFields.add("customerAccountOnboardingInfo");
    openapiFields.add("customerAddress");
    openapiFields.add("customerEmail");
    openapiFields.add("customerPhone");
    openapiFields.add("customerSecurity");
    openapiFields.add("customerPreferences");
    openapiFields.add("customerFundingSources");
    openapiFields.add("customerKyc");
    openapiFields.add("customerKycDetails");
    openapiFields.add("customerVerificationDetails");
    openapiFields.add("customerReceivers");
    openapiFields.add("customerReceiversByUniqueRef");
    openapiFields.add("customerUab");
    openapiFields.add("customerUsageStatistics");
    openapiFields.add("customerPartner");
    openapiFields.add("customerAccountRepresentative");
    openapiFields.add("customerServiceProvider");
    openapiFields.add("customerMiscFlags");
    openapiFields.add("customerDevices");
    openapiFields.add("profileAttributes");
    openapiFields.add("customerRole");
    openapiFields.add("prepaid");
    openapiFields.add("segmentationCodes");
    openapiFields.add("pepProfileEntities");
    openapiFields.add("ucbDisplayFlag");
    openapiFields.add("customerNotificationStatus");
    openapiFields.add("doNotDisplay");
    openapiFields.add("isConvenience");
    openapiFields.add("createdSync");
    openapiFields.add("updatedSync");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerDetailsSet6
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerDetailsSet6.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerDetailsSet6 is not found in the empty JSON string", CustomerDetailsSet6.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerDetailsSet6.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerDetailsSet6` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `customerPersonalInfo`
      if (jsonObj.get("customerPersonalInfo") != null && !jsonObj.get("customerPersonalInfo").isJsonNull()) {
        CustomerAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerPersonalInfo"));
      }
      if (jsonObj.get("customerAccountInfo") != null && !jsonObj.get("customerAccountInfo").isJsonNull()) {
        JsonArray jsonArraycustomerAccountInfo = jsonObj.getAsJsonArray("customerAccountInfo");
        if (jsonArraycustomerAccountInfo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerAccountInfo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerAccountInfo` to be an array in the JSON string but got `%s`", jsonObj.get("customerAccountInfo").toString()));
          }

          // validate the optional field `customerAccountInfo` (array)
          for (int i = 0; i < jsonArraycustomerAccountInfo.size(); i++) {
            AccountAndAudit.validateJsonObject(jsonArraycustomerAccountInfo.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerAccountOnboardingInfo") != null && !jsonObj.get("customerAccountOnboardingInfo").isJsonNull()) {
        JsonArray jsonArraycustomerAccountOnboardingInfo = jsonObj.getAsJsonArray("customerAccountOnboardingInfo");
        if (jsonArraycustomerAccountOnboardingInfo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerAccountOnboardingInfo").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerAccountOnboardingInfo` to be an array in the JSON string but got `%s`", jsonObj.get("customerAccountOnboardingInfo").toString()));
          }

          // validate the optional field `customerAccountOnboardingInfo` (array)
          for (int i = 0; i < jsonArraycustomerAccountOnboardingInfo.size(); i++) {
            AccountOnboardingAndAudit.validateJsonObject(jsonArraycustomerAccountOnboardingInfo.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerAddress") != null && !jsonObj.get("customerAddress").isJsonNull()) {
        JsonArray jsonArraycustomerAddress = jsonObj.getAsJsonArray("customerAddress");
        if (jsonArraycustomerAddress != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerAddress").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerAddress` to be an array in the JSON string but got `%s`", jsonObj.get("customerAddress").toString()));
          }

          // validate the optional field `customerAddress` (array)
          for (int i = 0; i < jsonArraycustomerAddress.size(); i++) {
            AddressAndAudit.validateJsonObject(jsonArraycustomerAddress.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerEmail") != null && !jsonObj.get("customerEmail").isJsonNull()) {
        JsonArray jsonArraycustomerEmail = jsonObj.getAsJsonArray("customerEmail");
        if (jsonArraycustomerEmail != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerEmail").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerEmail` to be an array in the JSON string but got `%s`", jsonObj.get("customerEmail").toString()));
          }

          // validate the optional field `customerEmail` (array)
          for (int i = 0; i < jsonArraycustomerEmail.size(); i++) {
            EmailAndAudit.validateJsonObject(jsonArraycustomerEmail.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerPhone") != null && !jsonObj.get("customerPhone").isJsonNull()) {
        JsonArray jsonArraycustomerPhone = jsonObj.getAsJsonArray("customerPhone");
        if (jsonArraycustomerPhone != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerPhone").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerPhone` to be an array in the JSON string but got `%s`", jsonObj.get("customerPhone").toString()));
          }

          // validate the optional field `customerPhone` (array)
          for (int i = 0; i < jsonArraycustomerPhone.size(); i++) {
            PhoneAndAudit.validateJsonObject(jsonArraycustomerPhone.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerSecurity") != null && !jsonObj.get("customerSecurity").isJsonNull()) {
        JsonArray jsonArraycustomerSecurity = jsonObj.getAsJsonArray("customerSecurity");
        if (jsonArraycustomerSecurity != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerSecurity").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerSecurity` to be an array in the JSON string but got `%s`", jsonObj.get("customerSecurity").toString()));
          }

          // validate the optional field `customerSecurity` (array)
          for (int i = 0; i < jsonArraycustomerSecurity.size(); i++) {
            SecurityQueAndAnsAndAudit.validateJsonObject(jsonArraycustomerSecurity.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `customerPreferences`
      if (jsonObj.get("customerPreferences") != null && !jsonObj.get("customerPreferences").isJsonNull()) {
        PreferencesAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerPreferences"));
      }
      if (jsonObj.get("customerFundingSources") != null && !jsonObj.get("customerFundingSources").isJsonNull()) {
        JsonArray jsonArraycustomerFundingSources = jsonObj.getAsJsonArray("customerFundingSources");
        if (jsonArraycustomerFundingSources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerFundingSources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerFundingSources` to be an array in the JSON string but got `%s`", jsonObj.get("customerFundingSources").toString()));
          }

          // validate the optional field `customerFundingSources` (array)
          for (int i = 0; i < jsonArraycustomerFundingSources.size(); i++) {
            FundingSourceAndAudit.validateJsonObject(jsonArraycustomerFundingSources.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerKyc") != null && !jsonObj.get("customerKyc").isJsonNull()) {
        JsonArray jsonArraycustomerKyc = jsonObj.getAsJsonArray("customerKyc");
        if (jsonArraycustomerKyc != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerKyc").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerKyc` to be an array in the JSON string but got `%s`", jsonObj.get("customerKyc").toString()));
          }

          // validate the optional field `customerKyc` (array)
          for (int i = 0; i < jsonArraycustomerKyc.size(); i++) {
            KycAndAudit.validateJsonObject(jsonArraycustomerKyc.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerKycDetails") != null && !jsonObj.get("customerKycDetails").isJsonNull()) {
        JsonArray jsonArraycustomerKycDetails = jsonObj.getAsJsonArray("customerKycDetails");
        if (jsonArraycustomerKycDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerKycDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerKycDetails` to be an array in the JSON string but got `%s`", jsonObj.get("customerKycDetails").toString()));
          }

          // validate the optional field `customerKycDetails` (array)
          for (int i = 0; i < jsonArraycustomerKycDetails.size(); i++) {
            CustomerKycDetailAndAudit.validateJsonObject(jsonArraycustomerKycDetails.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerVerificationDetails") != null && !jsonObj.get("customerVerificationDetails").isJsonNull()) {
        JsonArray jsonArraycustomerVerificationDetails = jsonObj.getAsJsonArray("customerVerificationDetails");
        if (jsonArraycustomerVerificationDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerVerificationDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerVerificationDetails` to be an array in the JSON string but got `%s`", jsonObj.get("customerVerificationDetails").toString()));
          }

          // validate the optional field `customerVerificationDetails` (array)
          for (int i = 0; i < jsonArraycustomerVerificationDetails.size(); i++) {
            CustomerVerificationDetailAndAudit.validateJsonObject(jsonArraycustomerVerificationDetails.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerReceivers") != null && !jsonObj.get("customerReceivers").isJsonNull()) {
        JsonArray jsonArraycustomerReceivers = jsonObj.getAsJsonArray("customerReceivers");
        if (jsonArraycustomerReceivers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerReceivers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerReceivers` to be an array in the JSON string but got `%s`", jsonObj.get("customerReceivers").toString()));
          }

          // validate the optional field `customerReceivers` (array)
          for (int i = 0; i < jsonArraycustomerReceivers.size(); i++) {
            CustomerReceiverAndAudit.validateJsonObject(jsonArraycustomerReceivers.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerReceiversByUniqueRef") != null && !jsonObj.get("customerReceiversByUniqueRef").isJsonNull()) {
        JsonArray jsonArraycustomerReceiversByUniqueRef = jsonObj.getAsJsonArray("customerReceiversByUniqueRef");
        if (jsonArraycustomerReceiversByUniqueRef != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerReceiversByUniqueRef").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerReceiversByUniqueRef` to be an array in the JSON string but got `%s`", jsonObj.get("customerReceiversByUniqueRef").toString()));
          }

          // validate the optional field `customerReceiversByUniqueRef` (array)
          for (int i = 0; i < jsonArraycustomerReceiversByUniqueRef.size(); i++) {
            CustomerReceiverByUniqueRefAndAudit.validateJsonObject(jsonArraycustomerReceiversByUniqueRef.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerUab") != null && !jsonObj.get("customerUab").isJsonNull()) {
        JsonArray jsonArraycustomerUab = jsonObj.getAsJsonArray("customerUab");
        if (jsonArraycustomerUab != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerUab").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerUab` to be an array in the JSON string but got `%s`", jsonObj.get("customerUab").toString()));
          }

          // validate the optional field `customerUab` (array)
          for (int i = 0; i < jsonArraycustomerUab.size(); i++) {
            UabAndAudit.validateJsonObject(jsonArraycustomerUab.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `customerUsageStatistics`
      if (jsonObj.get("customerUsageStatistics") != null && !jsonObj.get("customerUsageStatistics").isJsonNull()) {
        CustomerUsageStatisticsAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerUsageStatistics"));
      }
      // validate the optional field `customerPartner`
      if (jsonObj.get("customerPartner") != null && !jsonObj.get("customerPartner").isJsonNull()) {
        CustomerPartnerAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerPartner"));
      }
      if (jsonObj.get("customerAccountRepresentative") != null && !jsonObj.get("customerAccountRepresentative").isJsonNull()) {
        JsonArray jsonArraycustomerAccountRepresentative = jsonObj.getAsJsonArray("customerAccountRepresentative");
        if (jsonArraycustomerAccountRepresentative != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerAccountRepresentative").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerAccountRepresentative` to be an array in the JSON string but got `%s`", jsonObj.get("customerAccountRepresentative").toString()));
          }

          // validate the optional field `customerAccountRepresentative` (array)
          for (int i = 0; i < jsonArraycustomerAccountRepresentative.size(); i++) {
            CustomerAccountRepresentativeAndAudit.validateJsonObject(jsonArraycustomerAccountRepresentative.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerServiceProvider") != null && !jsonObj.get("customerServiceProvider").isJsonNull()) {
        JsonArray jsonArraycustomerServiceProvider = jsonObj.getAsJsonArray("customerServiceProvider");
        if (jsonArraycustomerServiceProvider != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerServiceProvider").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerServiceProvider` to be an array in the JSON string but got `%s`", jsonObj.get("customerServiceProvider").toString()));
          }

          // validate the optional field `customerServiceProvider` (array)
          for (int i = 0; i < jsonArraycustomerServiceProvider.size(); i++) {
            CustomerServiceProviderAndAudit.validateJsonObject(jsonArraycustomerServiceProvider.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerMiscFlags") != null && !jsonObj.get("customerMiscFlags").isJsonNull()) {
        JsonArray jsonArraycustomerMiscFlags = jsonObj.getAsJsonArray("customerMiscFlags");
        if (jsonArraycustomerMiscFlags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerMiscFlags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerMiscFlags` to be an array in the JSON string but got `%s`", jsonObj.get("customerMiscFlags").toString()));
          }

          // validate the optional field `customerMiscFlags` (array)
          for (int i = 0; i < jsonArraycustomerMiscFlags.size(); i++) {
            CustomerMiscFlagsAndAudit.validateJsonObject(jsonArraycustomerMiscFlags.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customerDevices") != null && !jsonObj.get("customerDevices").isJsonNull()) {
        JsonArray jsonArraycustomerDevices = jsonObj.getAsJsonArray("customerDevices");
        if (jsonArraycustomerDevices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerDevices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerDevices` to be an array in the JSON string but got `%s`", jsonObj.get("customerDevices").toString()));
          }

          // validate the optional field `customerDevices` (array)
          for (int i = 0; i < jsonArraycustomerDevices.size(); i++) {
            CustomerDeviceAndAudit.validateJsonObject(jsonArraycustomerDevices.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `profileAttributes`
      if (jsonObj.get("profileAttributes") != null && !jsonObj.get("profileAttributes").isJsonNull()) {
        ProfileAttributesAndAudit.validateJsonObject(jsonObj.getAsJsonObject("profileAttributes"));
      }
      // validate the optional field `customerRole`
      if (jsonObj.get("customerRole") != null && !jsonObj.get("customerRole").isJsonNull()) {
        CustomerRoleAndAudit.validateJsonObject(jsonObj.getAsJsonObject("customerRole"));
      }
      // validate the optional field `prepaid`
      if (jsonObj.get("prepaid") != null && !jsonObj.get("prepaid").isJsonNull()) {
        PrepaidAndAudit.validateJsonObject(jsonObj.getAsJsonObject("prepaid"));
      }
      // validate the optional field `segmentationCodes`
      if (jsonObj.get("segmentationCodes") != null && !jsonObj.get("segmentationCodes").isJsonNull()) {
        SegmentationCodesAndAudit.validateJsonObject(jsonObj.getAsJsonObject("segmentationCodes"));
      }
      // validate the optional field `pepProfileEntities`
      if (jsonObj.get("pepProfileEntities") != null && !jsonObj.get("pepProfileEntities").isJsonNull()) {
        PepProfileEntitiesAndAudit.validateJsonObject(jsonObj.getAsJsonObject("pepProfileEntities"));
      }
      // validate the optional field `ucbDisplayFlag`
      if (jsonObj.get("ucbDisplayFlag") != null && !jsonObj.get("ucbDisplayFlag").isJsonNull()) {
        UcbDisplayFlagAndAudit.validateJsonObject(jsonObj.getAsJsonObject("ucbDisplayFlag"));
      }
      if ((jsonObj.get("customerNotificationStatus") != null && !jsonObj.get("customerNotificationStatus").isJsonNull()) && !jsonObj.get("customerNotificationStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerNotificationStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerNotificationStatus").toString()));
      }
      if ((jsonObj.get("createdSync") != null && !jsonObj.get("createdSync").isJsonNull()) && !jsonObj.get("createdSync").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdSync` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdSync").toString()));
      }
      if ((jsonObj.get("updatedSync") != null && !jsonObj.get("updatedSync").isJsonNull()) && !jsonObj.get("updatedSync").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updatedSync` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updatedSync").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerDetailsSet6.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerDetailsSet6' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerDetailsSet6> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerDetailsSet6.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerDetailsSet6>() {
           @Override
           public void write(JsonWriter out, CustomerDetailsSet6 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerDetailsSet6 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerDetailsSet6 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerDetailsSet6
  * @throws IOException if the JSON string is invalid with respect to CustomerDetailsSet6
  */
  public static CustomerDetailsSet6 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerDetailsSet6.class);
  }

 /**
  * Convert an instance of CustomerDetailsSet6 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

